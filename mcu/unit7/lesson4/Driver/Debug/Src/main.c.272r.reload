
;; Function clock_init (clock_init, funcdef_no=3, decl_uid=5658, cgraph_uid=3, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 9:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 7
   Insn 13: point = 1, n_alt = 0
   Insn 12: point = 3, n_alt = 5
   Insn 11: point = 4, n_alt = 5
   Insn 10: point = 6, n_alt = 5
   Insn 9: point = 7, n_alt = 7
   Insn 8: point = 8, n_alt = 0
   Insn 7: point = 10, n_alt = 5
   Insn 6: point = 11, n_alt = 5
   Insn 5: point = 13, n_alt = 5
 r110: [12..13]
 r111: [9..11]
 r112: [7..10]
 r113: [7..8]
 r114: [5..6]
 r115: [2..4]
 r116: [0..3]
 r117: [0..1]
Compressing live ranges: from 14 to 12 - 85%
Ranges after the compression:
 r110: [10..11]
 r111: [8..9]
 r112: [6..9]
 r113: [6..7]
 r114: [4..5]
 r115: [2..3]
 r116: [0..3]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
starting the processing of deferred insns
ending the processing of deferred insns


clock_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={7d,6u} r7={1d,2u} r12={1d} r13={1d,2u} r14={1d} r102={1d,1u} 
;;    total ref usage 30{17d,13u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113 114 115 116 117
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:110 _1 ] [110])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:110 _1 ] [110])
                (const_int 24 [0x18])) [4 _1->APB2ENR+0 S4 A32])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 2 r2 [orig:112 _3 ] [112])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (ior:SI (reg:SI 3 r3 [orig:111 _2 ] [111])
            (const_int 4 [0x4]))) "../Src/main.c":44 105 {*iorsi3_insn}
     (nil))
(insn 9 8 10 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:112 _3 ] [112])
                (const_int 24 [0x18])) [4 _3->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:113 _4 ] [113])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [orig:114 _5 ] [114])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:115 _6 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _5 ] [114])
                (const_int 24 [0x18])) [4 _5->APB2ENR+0 S4 A32])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 2 r2 [orig:116 _7 ] [116])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (ior:SI (reg:SI 3 r3 [orig:115 _6 ] [115])
            (const_int 8 [0x8]))) "../Src/main.c":46 105 {*iorsi3_insn}
     (nil))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:116 _7 ] [116])
                (const_int 24 [0x18])) [4 _7->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _8 ] [117])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 14 22 2 (const_int 0 [0]) "../Src/main.c":47 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 22 17 0 NOTE_INSN_DELETED)

;; Function GPIO_init (GPIO_init, funcdef_no=4, decl_uid=5660, cgraph_uid=4, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 7:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 14:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 27:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 36:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 39:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 40:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 46:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 49:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 52:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 62:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 65:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 75:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 78:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 79:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 85:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 88:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 91:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 92:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 98: point = 0, n_alt = -1
   Insn 95: point = 0, n_alt = -1
   Insn 94: point = 0, n_alt = 5
   Insn 93: point = 0, n_alt = -2
   Insn 92: point = 1, n_alt = 3
   Insn 91: point = 2, n_alt = 6
   Insn 90: point = 3, n_alt = 0
   Insn 89: point = 5, n_alt = 1
   Insn 88: point = 6, n_alt = 6
   Insn 87: point = 7, n_alt = 0
   Insn 86: point = 9, n_alt = 1
   Insn 85: point = 10, n_alt = 4
   Insn 84: point = 11, n_alt = 0
   Insn 83: point = 13, n_alt = 1
   Insn 82: point = 14, n_alt = -1
   Insn 81: point = 14, n_alt = 5
   Insn 80: point = 14, n_alt = -2
   Insn 79: point = 15, n_alt = 3
   Insn 78: point = 16, n_alt = 6
   Insn 77: point = 17, n_alt = 0
   Insn 76: point = 19, n_alt = 1
   Insn 75: point = 20, n_alt = 6
   Insn 74: point = 21, n_alt = 0
   Insn 73: point = 23, n_alt = 1
   Insn 72: point = 24, n_alt = 4
   Insn 71: point = 25, n_alt = 0
   Insn 70: point = 27, n_alt = 1
   Insn 69: point = 28, n_alt = -1
   Insn 68: point = 28, n_alt = 5
   Insn 67: point = 28, n_alt = -2
   Insn 66: point = 29, n_alt = 3
   Insn 65: point = 30, n_alt = 6
   Insn 64: point = 31, n_alt = 0
   Insn 63: point = 33, n_alt = 1
   Insn 62: point = 34, n_alt = 6
   Insn 61: point = 35, n_alt = 0
   Insn 60: point = 37, n_alt = 1
   Insn 59: point = 38, n_alt = 4
   Insn 58: point = 39, n_alt = 0
   Insn 57: point = 41, n_alt = 1
   Insn 56: point = 42, n_alt = -1
   Insn 55: point = 42, n_alt = 5
   Insn 54: point = 42, n_alt = -2
   Insn 53: point = 43, n_alt = 3
   Insn 52: point = 44, n_alt = 6
   Insn 51: point = 45, n_alt = 0
   Insn 50: point = 47, n_alt = 1
   Insn 49: point = 48, n_alt = 6
   Insn 48: point = 49, n_alt = 0
   Insn 47: point = 51, n_alt = 1
   Insn 46: point = 52, n_alt = 4
   Insn 45: point = 53, n_alt = 0
   Insn 44: point = 55, n_alt = 1
   Insn 43: point = 56, n_alt = -1
   Insn 42: point = 56, n_alt = 5
   Insn 41: point = 56, n_alt = -2
   Insn 40: point = 57, n_alt = 3
   Insn 39: point = 58, n_alt = 6
   Insn 38: point = 59, n_alt = 0
   Insn 37: point = 61, n_alt = 1
   Insn 36: point = 62, n_alt = 6
   Insn 35: point = 63, n_alt = 0
   Insn 34: point = 65, n_alt = 1
   Insn 33: point = 66, n_alt = 4
   Insn 32: point = 67, n_alt = 0
   Insn 31: point = 69, n_alt = 1
   Insn 30: point = 70, n_alt = -1
   Insn 29: point = 70, n_alt = 5
   Insn 28: point = 70, n_alt = -2
   Insn 27: point = 71, n_alt = 3
   Insn 26: point = 72, n_alt = 6
   Insn 25: point = 73, n_alt = 0
   Insn 24: point = 75, n_alt = 1
   Insn 23: point = 76, n_alt = 6
   Insn 22: point = 77, n_alt = 0
   Insn 21: point = 79, n_alt = 1
   Insn 20: point = 80, n_alt = 4
   Insn 19: point = 81, n_alt = 0
   Insn 18: point = 83, n_alt = 1
   Insn 17: point = 84, n_alt = -1
   Insn 16: point = 84, n_alt = 5
   Insn 15: point = 84, n_alt = -2
   Insn 14: point = 85, n_alt = 3
   Insn 13: point = 86, n_alt = 6
   Insn 12: point = 87, n_alt = 0
   Insn 11: point = 89, n_alt = 1
   Insn 10: point = 90, n_alt = 6
   Insn 9: point = 91, n_alt = 0
   Insn 8: point = 93, n_alt = 1
   Insn 7: point = 94, n_alt = 4
   Insn 6: point = 95, n_alt = 0
   Insn 5: point = 97, n_alt = 1
 r110: [94..95]
 r111: [96..97]
 r112: [92..93]
 r113: [90..91]
 r114: [88..89]
 r115: [86..87]
 r116: [84..85]
 r117: [80..81]
 r118: [82..83]
 r119: [78..79]
 r120: [76..77]
 r121: [74..75]
 r122: [72..73]
 r123: [70..71]
 r124: [66..67]
 r125: [68..69]
 r126: [64..65]
 r127: [62..63]
 r128: [60..61]
 r129: [58..59]
 r130: [56..57]
 r131: [52..53]
 r132: [54..55]
 r133: [50..51]
 r134: [48..49]
 r135: [46..47]
 r136: [44..45]
 r137: [42..43]
 r138: [38..39]
 r139: [40..41]
 r140: [36..37]
 r141: [34..35]
 r142: [32..33]
 r143: [30..31]
 r144: [28..29]
 r145: [24..25]
 r146: [26..27]
 r147: [22..23]
 r148: [20..21]
 r149: [18..19]
 r150: [16..17]
 r151: [14..15]
 r152: [10..11]
 r153: [12..13]
 r154: [8..9]
 r155: [6..7]
 r156: [4..5]
 r157: [2..3]
 r158: [0..1]
Compressing live ranges: from 98 to 98 - 100%
Ranges after the compression:
 r110: [94..95]
 r111: [96..97]
 r112: [92..93]
 r113: [90..91]
 r114: [88..89]
 r115: [86..87]
 r116: [84..85]
 r117: [80..81]
 r118: [82..83]
 r119: [78..79]
 r120: [76..77]
 r121: [74..75]
 r122: [72..73]
 r123: [70..71]
 r124: [66..67]
 r125: [68..69]
 r126: [64..65]
 r127: [62..63]
 r128: [60..61]
 r129: [58..59]
 r130: [56..57]
 r131: [52..53]
 r132: [54..55]
 r133: [50..51]
 r134: [48..49]
 r135: [46..47]
 r136: [44..45]
 r137: [42..43]
 r138: [38..39]
 r139: [40..41]
 r140: [36..37]
 r141: [34..35]
 r142: [32..33]
 r143: [30..31]
 r144: [28..29]
 r145: [24..25]
 r146: [26..27]
 r147: [22..23]
 r148: [20..21]
 r149: [18..19]
 r150: [16..17]
 r151: [14..15]
 r152: [10..11]
 r153: [12..13]
 r154: [8..9]
 r155: [6..7]
 r156: [4..5]
 r157: [2..3]
 r158: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 71
changing reg in insn 72
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 84
changing reg in insn 85
changing reg in insn 83
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 95.


GPIO_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={15d,7u} r1={15d,7u} r2={8d} r3={57d,49u} r7={1d,30u} r12={15d} r13={1d,9u} r14={8d} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={1d,1u} 
;;    total ref usage 833{730d,103u,0e} in 92{85 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 r3 [111])
        (const_int 512 [0x200])) "../Src/main.c":60 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:HI 3 r3 [110])
        (reg:HI 3 r3 [111])) "../Src/main.c":60 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 512 [0x200])
        (nil)))
(insn 7 6 8 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [110])) "../Src/main.c":60 880 {*thumb2_movhi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [112])
        (const_int 4 [0x4])) "../Src/main.c":61 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:QI 3 r3 [113])
        (reg:QI 3 r3 [112])) "../Src/main.c":61 192 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [113])) "../Src/main.c":61 192 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [114])
        (const_int 1 [0x1])) "../Src/main.c":62 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:QI 3 r3 [115])
        (reg:QI 3 r3 [114])) "../Src/main.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [115])) "../Src/main.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [116])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":63 4 {*arm_addsi3}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [116])) "../Src/main.c":63 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":63 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":63 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 3 r3 [118])
        (const_int 1024 [0x400])) "../Src/main.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:HI 3 r3 [117])
        (reg:HI 3 r3 [118])) "../Src/main.c":65 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 1024 [0x400])
        (nil)))
(insn 20 19 21 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [117])) "../Src/main.c":65 880 {*thumb2_movhi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [119])
        (const_int 4 [0x4])) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:QI 3 r3 [120])
        (reg:QI 3 r3 [119])) "../Src/main.c":66 192 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [120])) "../Src/main.c":66 192 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [121])
        (const_int 1 [0x1])) "../Src/main.c":67 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:QI 3 r3 [122])
        (reg:QI 3 r3 [121])) "../Src/main.c":67 192 {*arm_movqi_insn}
     (nil))
(insn 26 25 27 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [122])) "../Src/main.c":67 192 {*arm_movqi_insn}
     (nil))
(insn 27 26 28 2 (set (reg:SI 3 r3 [123])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":68 4 {*arm_addsi3}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [123])) "../Src/main.c":68 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":68 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":68 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 31 30 32 2 (set (reg:SI 3 r3 [125])
        (const_int 2048 [0x800])) "../Src/main.c":70 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:HI 3 r3 [124])
        (reg:HI 3 r3 [125])) "../Src/main.c":70 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 2048 [0x800])
        (nil)))
(insn 33 32 34 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [124])) "../Src/main.c":70 880 {*thumb2_movhi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 3 r3 [126])
        (const_int 4 [0x4])) "../Src/main.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (reg:QI 3 r3 [127])
        (reg:QI 3 r3 [126])) "../Src/main.c":71 192 {*arm_movqi_insn}
     (nil))
(insn 36 35 37 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [127])) "../Src/main.c":71 192 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 3 r3 [128])
        (const_int 1 [0x1])) "../Src/main.c":72 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:QI 3 r3 [129])
        (reg:QI 3 r3 [128])) "../Src/main.c":72 192 {*arm_movqi_insn}
     (nil))
(insn 39 38 40 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [129])) "../Src/main.c":72 192 {*arm_movqi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 3 r3 [130])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":73 4 {*arm_addsi3}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [130])) "../Src/main.c":73 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":73 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":73 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 44 43 45 2 (set (reg:SI 3 r3 [132])
        (const_int 4096 [0x1000])) "../Src/main.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:HI 3 r3 [131])
        (reg:HI 3 r3 [132])) "../Src/main.c":75 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 4096 [0x1000])
        (nil)))
(insn 46 45 47 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [131])) "../Src/main.c":75 880 {*thumb2_movhi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 3 r3 [133])
        (const_int 4 [0x4])) "../Src/main.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 48 47 49 2 (set (reg:QI 3 r3 [134])
        (reg:QI 3 r3 [133])) "../Src/main.c":76 192 {*arm_movqi_insn}
     (nil))
(insn 49 48 50 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [134])) "../Src/main.c":76 192 {*arm_movqi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 3 r3 [135])
        (const_int 1 [0x1])) "../Src/main.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:QI 3 r3 [136])
        (reg:QI 3 r3 [135])) "../Src/main.c":77 192 {*arm_movqi_insn}
     (nil))
(insn 52 51 53 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [136])) "../Src/main.c":77 192 {*arm_movqi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 3 r3 [137])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":78 4 {*arm_addsi3}
     (nil))
(insn 54 53 55 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [137])) "../Src/main.c":78 878 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":78 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 56 55 57 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":78 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 57 56 58 2 (set (reg:SI 3 r3 [139])
        (const_int 8192 [0x2000])) "../Src/main.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:HI 3 r3 [138])
        (reg:HI 3 r3 [139])) "../Src/main.c":80 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 8192 [0x2000])
        (nil)))
(insn 59 58 60 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [138])) "../Src/main.c":80 880 {*thumb2_movhi_insn}
     (nil))
(insn 60 59 61 2 (set (reg:SI 3 r3 [140])
        (const_int 4 [0x4])) "../Src/main.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (reg:QI 3 r3 [141])
        (reg:QI 3 r3 [140])) "../Src/main.c":81 192 {*arm_movqi_insn}
     (nil))
(insn 62 61 63 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [141])) "../Src/main.c":81 192 {*arm_movqi_insn}
     (nil))
(insn 63 62 64 2 (set (reg:SI 3 r3 [142])
        (const_int 1 [0x1])) "../Src/main.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (reg:QI 3 r3 [143])
        (reg:QI 3 r3 [142])) "../Src/main.c":82 192 {*arm_movqi_insn}
     (nil))
(insn 65 64 66 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [143])) "../Src/main.c":82 192 {*arm_movqi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:SI 3 r3 [144])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":83 4 {*arm_addsi3}
     (nil))
(insn 67 66 68 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [144])) "../Src/main.c":83 878 {*thumb2_movsi_insn}
     (nil))
(insn 68 67 69 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":83 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 69 68 70 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":83 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 70 69 71 2 (set (reg:SI 3 r3 [146])
        (const_int 16384 [0x4000])) "../Src/main.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 2 (set (reg:HI 3 r3 [145])
        (reg:HI 3 r3 [146])) "../Src/main.c":88 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 16384 [0x4000])
        (nil)))
(insn 72 71 73 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [145])) "../Src/main.c":88 880 {*thumb2_movhi_insn}
     (nil))
(insn 73 72 74 2 (set (reg:SI 3 r3 [147])
        (const_int 4 [0x4])) "../Src/main.c":89 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 2 (set (reg:QI 3 r3 [148])
        (reg:QI 3 r3 [147])) "../Src/main.c":89 192 {*arm_movqi_insn}
     (nil))
(insn 75 74 76 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [148])) "../Src/main.c":89 192 {*arm_movqi_insn}
     (nil))
(insn 76 75 77 2 (set (reg:SI 3 r3 [149])
        (const_int 1 [0x1])) "../Src/main.c":90 878 {*thumb2_movsi_insn}
     (nil))
(insn 77 76 78 2 (set (reg:QI 3 r3 [150])
        (reg:QI 3 r3 [149])) "../Src/main.c":90 192 {*arm_movqi_insn}
     (nil))
(insn 78 77 79 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [150])) "../Src/main.c":90 192 {*arm_movqi_insn}
     (nil))
(insn 79 78 80 2 (set (reg:SI 3 r3 [151])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":91 4 {*arm_addsi3}
     (nil))
(insn 80 79 81 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [151])) "../Src/main.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 81 80 82 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":91 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 82 81 83 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":91 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 83 82 84 2 (set (reg:SI 3 r3 [153])
        (const_int 32768 [0x8000])) "../Src/main.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 2 (set (reg:HI 3 r3 [152])
        (reg:HI 3 r3 [153])) "../Src/main.c":94 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int -32768 [0xffffffffffff8000])
        (nil)))
(insn 85 84 86 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [152])) "../Src/main.c":94 880 {*thumb2_movhi_insn}
     (nil))
(insn 86 85 87 2 (set (reg:SI 3 r3 [154])
        (const_int 4 [0x4])) "../Src/main.c":95 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 2 (set (reg:QI 3 r3 [155])
        (reg:QI 3 r3 [154])) "../Src/main.c":95 192 {*arm_movqi_insn}
     (nil))
(insn 88 87 89 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [155])) "../Src/main.c":95 192 {*arm_movqi_insn}
     (nil))
(insn 89 88 90 2 (set (reg:SI 3 r3 [156])
        (const_int 1 [0x1])) "../Src/main.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 90 89 91 2 (set (reg:QI 3 r3 [157])
        (reg:QI 3 r3 [156])) "../Src/main.c":96 192 {*arm_movqi_insn}
     (nil))
(insn 91 90 92 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [157])) "../Src/main.c":96 192 {*arm_movqi_insn}
     (nil))
(insn 92 91 93 2 (set (reg:SI 3 r3 [158])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":97 4 {*arm_addsi3}
     (nil))
(insn 93 92 94 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [158])) "../Src/main.c":97 878 {*thumb2_movsi_insn}
     (nil))
(insn 94 93 95 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":97 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 95 94 98 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":97 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 98 95 106 2 (const_int 0 [0]) "../Src/main.c":99 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 106 98 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=5, decl_uid=5665, cgraph_uid=5, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 14:  (0) r  (1) rk  (2) rI {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (4) rk {*ldm3_}
            3 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (3) +&rk {*stm2_ia_update}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) m  (1) r {*thumb2_movhi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 24:  (0) l  (1) l  (2) Pd {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (4) rk {*ldm3_}
            3 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (3) +&rk {*stm2_ia_update}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) m  (1) r {*thumb2_movhi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 29:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 32:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 35:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
  Commutative operand exchange in insn 40
	 Choosing alt 0 in insn 40:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
      Creating newreg=140, assigning class CORE_REGS to r140
   40: r131:SI=r110:SI+r140:SI
      REG_DEAD r110:SI
    Inserting insn reload before:
  127: r140:SI=sfp:SI+0x20

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=10,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 127:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r140
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
  Commutative operand exchange in insn 45
	 Choosing alt 0 in insn 45:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
      Creating newreg=141, assigning class CORE_REGS to r141
   45: r132:SI=r112:SI+r141:SI
      REG_DEAD r112:SI
    Inserting insn reload before:
  128: r141:SI=sfp:SI+0x20

            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=26,losers=3,rld_nregs=3
            0 Non pseudo reload: reject++
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=10,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=17,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=10,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=10,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=1 -- refuse
	 Choosing alt 4 in insn 128:  (0) r  (1) rk  (2) rI {*arm_addsi3}
      Change to class GENERAL_REGS for r141
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 56:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 58:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 77:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #1: **********

  BB 6
   Insn 80: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = 0
   Insn 78: point = 0, n_alt = 1
   Insn 77: point = 1, n_alt = 6
   Insn 76: point = 2, n_alt = 0
   Insn 75: point = 4, n_alt = -2
   Insn 74: point = 5, n_alt = -1
  BB 11
   Insn 118: point = 5, n_alt = -1
  BB 10
   Insn 120: point = 5, n_alt = -1
   Insn 98: point = 5, n_alt = -1
   Insn 97: point = 5, n_alt = -2
   Insn 96: point = 6, n_alt = 1
  BB 8
   Insn 114: point = 7, n_alt = -1
  BB 9
   Insn 116: point = 7, n_alt = -1
   Insn 91: point = 7, n_alt = -1
  BB 12
   Insn 124: point = 7, n_alt = -1
  BB 7
   Insn 82: point = 7, n_alt = -1
   Insn 81: point = 7, n_alt = 0
  BB 5
   Insn 72: point = 9, n_alt = -1
   Insn 71: point = 9, n_alt = -1
   Insn 70: point = 9, n_alt = 1
   Insn 69: point = 9, n_alt = -1
   Insn 68: point = 9, n_alt = 5
   Insn 67: point = 9, n_alt = -1
   Insn 66: point = 9, n_alt = -1
  BB 4
   Insn 64: point = 9, n_alt = -1
   Insn 63: point = 9, n_alt = 0
   Insn 62: point = 10, n_alt = 1
  BB 2
   Insn 110: point = 11, n_alt = -1
   Insn 35: point = 11, n_alt = 6
   Insn 34: point = 12, n_alt = 0
   Insn 33: point = 14, n_alt = 1
   Insn 32: point = 15, n_alt = 6
   Insn 31: point = 16, n_alt = 0
   Insn 30: point = 18, n_alt = 1
   Insn 29: point = 19, n_alt = 2
   Insn 28: point = 19, n_alt = 4
   Insn 27: point = 19, n_alt = 0
   Insn 26: point = 19, n_alt = 0
   Insn 25: point = 20, n_alt = -2
   Insn 24: point = 22, n_alt = 3
   Insn 23: point = 23, n_alt = 5
   Insn 22: point = 24, n_alt = 6
   Insn 21: point = 25, n_alt = 0
   Insn 20: point = 27, n_alt = 1
   Insn 19: point = 28, n_alt = 2
   Insn 18: point = 28, n_alt = 4
   Insn 17: point = 28, n_alt = 0
   Insn 16: point = 28, n_alt = 0
   Insn 15: point = 29, n_alt = -2
   Insn 14: point = 31, n_alt = 4
   Insn 13: point = 32, n_alt = 5
   Insn 12: point = 33, n_alt = -1
   Insn 11: point = 33, n_alt = -1
   Insn 10: point = 33, n_alt = -1
   Insn 9: point = 33, n_alt = 1
   Insn 8: point = 33, n_alt = -1
   Insn 7: point = 33, n_alt = 5
   Insn 6: point = 33, n_alt = -1
   Insn 5: point = 33, n_alt = -1
  BB 3
   Insn 58: point = 33, n_alt = 6
   Insn 57: point = 34, n_alt = 0
   Insn 56: point = 36, n_alt = 2
   Insn 55: point = 38, n_alt = 1
   Insn 54: point = 39, n_alt = -1
   Insn 53: point = 39, n_alt = 1
   Insn 52: point = 39, n_alt = -1
   Insn 51: point = 39, n_alt = 5
   Insn 50: point = 39, n_alt = -2
   Insn 49: point = 40, n_alt = 0
   Insn 48: point = 42, n_alt = 1
   Insn 47: point = 44, n_alt = 0
   Insn 46: point = 46, n_alt = 1
   Insn 45: point = 48, n_alt = 0
   Insn 128: point = 50, n_alt = 4
   Insn 44: point = 51, n_alt = 1
   Insn 43: point = 52, n_alt = -1
   Insn 42: point = 52, n_alt = -2
   Insn 41: point = 53, n_alt = 1
   Insn 40: point = 55, n_alt = 0
   Insn 127: point = 57, n_alt = 4
   Insn 39: point = 58, n_alt = 1
 r110: [56..58]
 r111: [52..53]
 r112: [49..51]
 r113: [45..46]
 r114: [43..44]
 r115: [39..40]
 r116: [37..38]
 r117: [7..8] [0..0]
 r119: [30..32]
 r120: [24..31]
 r121: [28..29]
 r122: [26..27]
 r123: [24..25]
 r124: [21..23]
 r125: [15..22]
 r126: [19..20]
 r127: [17..18]
 r128: [15..16]
 r129: [13..14]
 r130: [11..12]
 r131: [54..55]
 r132: [47..48]
 r133: [41..42]
 r134: [35..36]
 r135: [33..34]
 r136: [9..10]
 r137: [3..4]
 r138: [1..2]
 r139: [5..6]
 r140: [56..57]
 r141: [49..50]
Compressing live ranges: from 59 to 55 - 93%
Ranges after the compression:
 r110: [53..54]
 r111: [49..50]
 r112: [47..48]
 r113: [43..44]
 r114: [41..42]
 r115: [37..38]
 r116: [35..36]
 r117: [7..8] [0..0]
 r119: [29..30]
 r120: [23..30]
 r121: [27..28]
 r122: [25..26]
 r123: [23..24]
 r124: [21..22]
 r125: [15..22]
 r126: [19..20]
 r127: [17..18]
 r128: [15..16]
 r129: [13..14]
 r130: [11..12]
 r131: [51..52]
 r132: [45..46]
 r133: [39..40]
 r134: [33..34]
 r135: [31..32]
 r136: [9..10]
 r137: [3..4]
 r138: [1..2]
 r139: [5..6]
 r140: [53..54]
 r141: [47..48]

********** Assignment #1: **********

	 Assigning to 140 (cl=GENERAL_REGS, orig=140, freq=2, tfirst=140, tfreq=2)...
	   Assign 2 to reload r140 (freq=2)
	 Assigning to 141 (cl=GENERAL_REGS, orig=141, freq=2, tfirst=141, tfreq=2)...
	   Assign 2 to reload r141 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=40)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=32)
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
changing reg in insn 78
changing reg in insn 81
changing reg in insn 79
changing reg in insn 13
changing reg in insn 15
changing reg in insn 19
changing reg in insn 17
changing reg in insn 14
changing reg in insn 22
changing reg in insn 19
changing reg in insn 18
changing reg in insn 17
changing reg in insn 17
changing reg in insn 17
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 29
changing reg in insn 27
changing reg in insn 24
changing reg in insn 32
changing reg in insn 29
changing reg in insn 28
changing reg in insn 27
changing reg in insn 27
changing reg in insn 27
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 62
changing reg in insn 63
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 96
changing reg in insn 97
deleting insn with uid = 15.
deleting insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 98.


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={28d,12u} r1={21d,3u} r2={28d,16u} r3={43d,32u} r7={1d,25u} r12={35d} r13={1d,29u} r14={18d} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={17d} r25={17d} r26={17d} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={20d,3u} r101={17d} r102={1d,1u} 
;;    total ref usage 1779{1658d,121u,0e} in 80{63 regular + 17 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 119 120 121 122 123 124 125 126 127 128 129 130
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("clock_init") [flags 0x3]  <function_decl 0000000006601600 clock_init>) [0 clock_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":103 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 6 5 7 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_init") [flags 0x41]  <function_decl 00000000065cc000 lcd_init>) [0 lcd_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":104 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0000000006627090 *.LC2>)) "../Src/main.c":106 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x41]  <function_decl 00000000065ccf00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":106 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 30 [0x1e])) "../Src/main.c":107 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":107 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 11 10 12 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":108 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 12 11 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("GPIO_init") [flags 0x3]  <function_decl 0000000006601800 GPIO_init>) [0 GPIO_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":109 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 2 r2 [119])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 00000000065fcab0 *.LC0>)) "../Src/main.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 16 2 (set (reg:SI 3 r3 [120])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 16 [0x10]))) "../Src/main.c":110 4 {*arm_addsi3}
     (nil))
(insn 16 14 17 2 (parallel [
            (set (reg:SI 0 r0)
                (mem/u/c:SI (reg:SI 2 r2 [121]) [0  S4 A32]))
            (set (reg:SI 1 r1)
                (mem/u/c:SI (plus:SI (reg:SI 2 r2 [121])
                        (const_int 4 [0x4])) [0  S4 A32]))
            (set (reg:SI 2 r2)
                (mem/u/c:SI (plus:SI (reg:SI 2 r2 [121])
                        (const_int 8 [0x8])) [0  S4 A32]))
        ]) "../Src/main.c":110 364 {*ldm3_}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 3 r3 [120])
                (plus:SI (reg:SI 3 r3 [120])
                    (const_int 8 [0x8])))
            (set (mem/c:SI (reg:SI 3 r3 [120]) [0 LCD_DISPLAY+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/c:SI (plus:SI (reg:SI 3 r3 [120])
                        (const_int 4 [0x4])) [0 LCD_DISPLAY+4 S4 A32])
                (reg:SI 1 r1))
        ]) "../Src/main.c":110 388 {*stm2_ia_update}
     (nil))
(insn 18 17 19 2 (set (mem/c:HI (reg:SI 3 r3 [120]) [0 LCD_DISPLAY+8 S2 A64])
        (reg:HI 2 r2)) "../Src/main.c":110 880 {*thumb2_movhi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 3 r3 [120])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int 2 [0x2]))) "../Src/main.c":110 4 {*arm_addsi3}
     (nil))
(insn 20 19 21 2 (set (reg:SI 2 r2 [122])
        (lshiftrt:SI (reg:SI 2 r2)
            (const_int 16 [0x10]))) "../Src/main.c":110 132 {*arm_shiftsi3}
     (nil))
(insn 21 20 22 2 (set (reg:QI 2 r2 [123])
        (reg:QI 2 r2 [122])) "../Src/main.c":110 192 {*arm_movqi_insn}
     (nil))
(insn 22 21 23 2 (set (mem/c:QI (reg:SI 3 r3 [120]) [0 LCD_DISPLAY+10 S1 A16])
        (reg:QI 2 r2 [123])) "../Src/main.c":110 192 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 2 r2 [124])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 00000000065fcb40 *.LC1>)) "../Src/main.c":111 878 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 26 2 (set (reg:SI 3 r3 [125])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../Src/main.c":111 4 {*arm_addsi3}
     (nil))
(insn 26 24 27 2 (parallel [
            (set (reg:SI 0 r0)
                (mem/u/c:SI (reg:SI 2 r2 [126]) [0  S4 A32]))
            (set (reg:SI 1 r1)
                (mem/u/c:SI (plus:SI (reg:SI 2 r2 [126])
                        (const_int 4 [0x4])) [0  S4 A32]))
            (set (reg:SI 2 r2)
                (mem/u/c:SI (plus:SI (reg:SI 2 r2 [126])
                        (const_int 8 [0x8])) [0  S4 A32]))
        ]) "../Src/main.c":111 364 {*ldm3_}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg:SI 3 r3 [125])
                (plus:SI (reg:SI 3 r3 [125])
                    (const_int 8 [0x8])))
            (set (mem/c:SI (reg:SI 3 r3 [125]) [0 DISPLAY+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/c:SI (plus:SI (reg:SI 3 r3 [125])
                        (const_int 4 [0x4])) [0 DISPLAY+4 S4 A32])
                (reg:SI 1 r1))
        ]) "../Src/main.c":111 388 {*stm2_ia_update}
     (nil))
(insn 28 27 29 2 (set (mem/c:HI (reg:SI 3 r3 [125]) [0 DISPLAY+8 S2 A32])
        (reg:HI 2 r2)) "../Src/main.c":111 880 {*thumb2_movhi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 3 r3 [125])
        (plus:SI (reg:SI 3 r3 [125])
            (const_int 2 [0x2]))) "../Src/main.c":111 4 {*arm_addsi3}
     (nil))
(insn 30 29 31 2 (set (reg:SI 2 r2 [127])
        (lshiftrt:SI (reg:SI 2 r2)
            (const_int 16 [0x10]))) "../Src/main.c":111 132 {*arm_shiftsi3}
     (nil))
(insn 31 30 32 2 (set (reg:QI 2 r2 [128])
        (reg:QI 2 r2 [127])) "../Src/main.c":111 192 {*arm_movqi_insn}
     (nil))
(insn 32 31 33 2 (set (mem/c:QI (reg:SI 3 r3 [125]) [0 DISPLAY+10 S1 A16])
        (reg:QI 2 r2 [128])) "../Src/main.c":111 192 {*arm_movqi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:SI 3 r3 [129])
        (const_int 0 [0])) "../Src/main.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:QI 3 r3 [130])
        (reg:QI 3 r3 [129])) "../Src/main.c":112 192 {*arm_movqi_insn}
     (nil))
(insn 35 34 110 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 31 [0x1f])) [0 i+0 S1 A8])
        (reg:QI 3 r3 [130])) "../Src/main.c":112 192 {*arm_movqi_insn}
     (nil))
(jump_insn 110 35 111 2 (set (pc)
        (label_ref 59)) "../Src/main.c":112 214 {*arm_jump}
     (nil)
 -> 59)
;;  succ:       4 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 111 110 61)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 131 132 133 134 135
(code_label 61 111 38 3 9 (nil) [1 uses])
(note 38 61 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 127 3 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 31 [0x1f])) [0 i+0 S1 A8]))) "../Src/main.c":113 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 127 39 40 3 (set (reg:SI 2 r2 [140])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 32 [0x20]))) "../Src/main.c":113 4 {*arm_addsi3}
     (nil))
(insn 40 127 41 3 (set (reg/f:SI 3 r3 [131])
        (plus:SI (reg:SI 3 r3 [orig:110 _1 ] [110])
            (reg:SI 2 r2 [140]))) "../Src/main.c":113 4 {*arm_addsi3}
     (nil))
(insn 41 40 42 3 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/f:SI 3 r3 [131])
                    (const_int -16 [0xfffffffffffffff0])) [0 LCD_DISPLAY S1 A8]))) "../Src/main.c":113 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 42 41 43 3 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:111 _2 ] [111])) "../Src/main.c":113 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 43 42 44 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_char") [flags 0x41]  <function_decl 00000000065cce00 lcd_send_char>) [0 lcd_send_char S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":113 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 44 43 128 3 (set (reg:SI 3 r3 [orig:112 _3 ] [112])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 31 [0x1f])) [0 i+0 S1 A8]))) "../Src/main.c":114 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 128 44 45 3 (set (reg:SI 2 r2 [141])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 32 [0x20]))) "../Src/main.c":114 4 {*arm_addsi3}
     (nil))
(insn 45 128 46 3 (set (reg/f:SI 3 r3 [132])
        (plus:SI (reg:SI 3 r3 [orig:112 _3 ] [112])
            (reg:SI 2 r2 [141]))) "../Src/main.c":114 4 {*arm_addsi3}
     (nil))
(insn 46 45 47 3 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/f:SI 3 r3 [132])
                    (const_int -28 [0xffffffffffffffe4])) [0 DISPLAY S1 A8]))) "../Src/main.c":114 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 47 46 48 3 (set (reg:SI 3 r3 [orig:114 _5 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [orig:113 _4 ] [113]))) "../Src/main.c":114 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 48 47 49 3 (set (reg:SI 3 r3 [133])
        (ashift:SI (reg:SI 3 r3 [orig:114 _5 ] [114])
            (const_int 9 [0x9]))) "../Src/main.c":114 132 {*arm_shiftsi3}
     (nil))
(insn 49 48 50 3 (set (reg:SI 3 r3 [orig:115 _6 ] [115])
        (zero_extend:SI (reg:HI 3 r3 [133]))) "../Src/main.c":114 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 50 49 51 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:115 _6 ] [115])) "../Src/main.c":114 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":114 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 52 51 53 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PORT") [flags 0x41]  <function_decl 00000000065cc800 MCAL_GPIO_WRITE_PORT>) [0 MCAL_GPIO_WRITE_PORT S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":114 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 53 52 54 3 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) "../Src/main.c":115 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 54 53 55 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":115 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 55 54 56 3 (set (reg:SI 3 r3 [orig:116 i.0_7 ] [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 31 [0x1f])) [0 i+0 S1 A8]))) "../Src/main.c":112 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 56 55 57 3 (set (reg:SI 3 r3 [134])
        (plus:SI (reg:SI 3 r3 [orig:116 i.0_7 ] [116])
            (const_int 1 [0x1]))) "../Src/main.c":112 4 {*arm_addsi3}
     (nil))
(insn 57 56 58 3 (set (reg:QI 3 r3 [135])
        (reg:QI 3 r3 [134])) "../Src/main.c":112 192 {*arm_movqi_insn}
     (nil))
(insn 58 57 59 3 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 31 [0x1f])) [0 i+0 S1 A8])
        (reg:QI 3 r3 [135])) "../Src/main.c":112 192 {*arm_movqi_insn}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 136
(code_label 59 58 60 4 8 (nil) [1 uses])
(note 60 59 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 62 60 63 4 (set (reg:SI 3 r3 [136])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 31 [0x1f])) [0 i+0 S1 A8]))) "../Src/main.c":112 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 63 62 64 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [136])
            (const_int 10 [0xa]))) "../Src/main.c":112 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 64 63 65 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "../Src/main.c":112 204 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 65 67 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":120 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 67 66 68 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("Keypad_init") [flags 0x41]  <function_decl 0000000006601400 Keypad_init>) [0 Keypad_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":121 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 68 67 69 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0000000006627120 *.LC3>)) "../Src/main.c":122 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 69 68 70 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x41]  <function_decl 00000000065ccf00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":122 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 70 69 71 5 (set (reg:SI 0 r0)
        (const_int 30 [0x1e])) "../Src/main.c":123 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 71 70 72 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":123 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 72 71 101 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":124 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              11 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 117 137 138
(code_label 101 72 73 6 14 (nil) [1 uses])
(note 73 101 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 73 75 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Keypad_getkey") [flags 0x41]  <function_decl 0000000006601500 Keypad_getkey>) [0 Keypad_getkey S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":128 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 75 74 76 6 (set (reg:SI 3 r3 [137])
        (reg:SI 0 r0)) "../Src/main.c":128 878 {*thumb2_movsi_insn}
     (nil))
(insn 76 75 77 6 (set (reg:QI 3 r3 [138])
        (reg:QI 3 r3 [137])) "../Src/main.c":128 192 {*arm_movqi_insn}
     (nil))
(insn 77 76 78 6 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 30 [0x1e])) [0 key_pressed+0 S1 A8])
        (reg:QI 3 r3 [138])) "../Src/main.c":128 192 {*arm_movqi_insn}
     (nil))
(insn 78 77 79 6 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 30 [0x1e])) [0 key_pressed+0 S1 A8]))) "../Src/main.c":129 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 79 78 80 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _8 ] [117])
            (const_int 63 [0x3f]))) "../Src/main.c":129 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 108 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "../Src/main.c":129 204 {arm_cond_branch}
     (nil)
 -> 89)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117
;; lr  def 	 100 [cc]
(note 108 80 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 108 82 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _8 ] [117])
            (const_int 65 [0x41]))) "../Src/main.c":129 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 82 81 112 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 123)
            (pc))) "../Src/main.c":129 204 {arm_cond_branch}
     (nil)
 -> 123)
;;  succ:       12
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 112 82 114 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 114 112 115 8 (set (pc)
        (label_ref 113)) "../Src/main.c":129 214 {*arm_jump}
     (nil)
 -> 113)
;;  succ:       10 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 115 114 89)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(code_label 89 115 90 9 11 (nil) [1 uses])
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 91 90 116 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":133 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 116 91 117 9 (set (pc)
        (label_ref 99)) "../Src/main.c":134 214 {*arm_jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 117 116 113)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 139
(code_label 113 117 95 10 15 (nil) [1 uses])
(note 95 113 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 10 (set (reg:SI 3 r3 [139])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 30 [0x1e])) [0 key_pressed+0 S1 A8]))) "../Src/main.c":136 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 97 96 98 10 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [139])) "../Src/main.c":136 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 98 97 120 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_char") [flags 0x41]  <function_decl 00000000065cce00 lcd_send_char>) [0 lcd_send_char S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":136 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 120 98 121 10 (set (pc)
        (label_ref 99)) "../Src/main.c":137 214 {*arm_jump}
     (nil)
 -> 99)
;;  succ:       11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 121 120 123)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 123 121 122 12 16 (nil) [1 uses])
(note 122 123 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 124 122 99 12 (const_int 0 [0]) "../Src/main.c":131 236 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;;              10
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 99 124 100 11 13 (nil) [2 uses])
(note 100 99 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 118 100 119 11 (set (pc)
        (label_ref 101)) "../Src/main.c":128 214 {*arm_jump}
     (nil)
 -> 101)
;;  succ:       6 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 119 118 126)
(note 126 119 0 NOTE_INSN_DELETED)
