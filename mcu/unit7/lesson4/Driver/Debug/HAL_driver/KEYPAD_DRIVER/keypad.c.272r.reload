
;; Function delay_mss (delay_mss, funcdef_no=3, decl_uid=5640, cgraph_uid=3, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 17:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 27:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) r {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 39: point = 0, n_alt = -1
  BB 7
   Insn 35: point = 0, n_alt = -1
   Insn 34: point = 0, n_alt = 1
   Insn 33: point = 1, n_alt = 5
   Insn 32: point = 2, n_alt = 5
  BB 2
   Insn 40: point = 3, n_alt = -1
   Insn 7: point = 3, n_alt = 7
   Insn 6: point = 4, n_alt = 1
   Insn 2: point = 5, n_alt = 7
  BB 6
   Insn 28: point = 5, n_alt = 7
   Insn 27: point = 6, n_alt = 2
   Insn 26: point = 8, n_alt = 5
  BB 5
   Insn 24: point = 9, n_alt = -1
   Insn 23: point = 9, n_alt = 0
   Insn 22: point = 10, n_alt = 5
  BB 3
   Insn 42: point = 11, n_alt = -1
   Insn 12: point = 11, n_alt = 7
   Insn 11: point = 12, n_alt = 1
  BB 4
   Insn 18: point = 13, n_alt = 7
   Insn 17: point = 14, n_alt = 2
   Insn 16: point = 16, n_alt = 5
 r110: [3..4]
 r111: [11..12]
 r112: [13..14]
 r113: [15..16]
 r114: [9..10]
 r115: [5..6]
 r116: [7..8]
 r117: [0..2]
 r118: [0..1]
Compressing live ranges: from 17 to 16 - 94%
Ranges after the compression:
 r110: [2..3]
 r111: [10..11]
 r112: [12..13]
 r113: [14..15]
 r114: [8..9]
 r115: [4..5]
 r116: [6..7]
 r117: [0..1]
 r118: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 16
changing reg in insn 17
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
starting the processing of deferred insns
ending the processing of deferred insns


delay_mss

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d,1u} r3={9d,8u} r7={1d,18u} r12={1d} r13={1d,8u} r14={1d} r100={2d,2u} r102={1d,1u} 
;;    total ref usage 59{20d,39u,0e} in 21{21 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 time+0 S4 A32])
        (reg:SI 0 r0 [ time ])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":13 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [110])
        (const_int 0 [0])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 40 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [2 i+0 S4 A32])
        (reg:SI 3 r3 [110])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 40 7 41 2 (set (pc)
        (label_ref 29)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 214 {*arm_jump}
     (nil)
 -> 29)
;;  succ:       7 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 41 40 31)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 31 41 10 3 5 (nil) [1 uses])
(note 10 31 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 3 r3 [111])
        (const_int 0 [0])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 42 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [111])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 42 12 43 3 (set (pc)
        (label_ref 19)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 214 {*arm_jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 43 42 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 112 113
(code_label 21 43 15 4 4 (nil) [1 uses])
(note 15 21 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 3 r3 [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [2 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 4 (set (reg:SI 3 r3 [112])
        (plus:SI (reg:SI 3 r3 [113])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 4 {*arm_addsi3}
     (nil))
(insn 18 17 19 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [2 j+0 S4 A32])
        (reg:SI 3 r3 [112])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114
(code_label 19 18 20 5 3 (nil) [1 uses])
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 5 (set (reg:SI 3 r3 [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [2 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 254 [0xfe]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":16 204 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 115 116
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 3 r3 [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 6 (set (reg:SI 3 r3 [115])
        (plus:SI (reg:SI 3 r3 [116])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 4 {*arm_addsi3}
     (nil))
(insn 28 27 29 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [2 i+0 S4 A32])
        (reg:SI 3 r3 [115])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 118
(code_label 29 28 30 7 2 (nil) [1 uses])
(note 30 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 7 (set (reg:SI 2 r2 [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 7 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [2 time+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [117])
            (reg:SI 3 r3 [118]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":15 204 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 36 35 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 44 8 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":18 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 44 39 0 NOTE_INSN_DELETED)

;; Function Keypad_init (Keypad_init, funcdef_no=4, decl_uid=5635, cgraph_uid=4, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 7:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 14:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 27:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 36:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 39:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 40:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 46:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 49:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 52:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 62:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 65:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 75:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 78:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 79:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 85:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 88:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 91:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 92:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 98:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 101:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 104:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 105:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 114: point = 0, n_alt = -1
   Insn 111: point = 0, n_alt = -1
   Insn 110: point = 0, n_alt = 5
   Insn 109: point = 0, n_alt = 1
   Insn 108: point = 0, n_alt = -1
   Insn 107: point = 0, n_alt = 5
   Insn 106: point = 0, n_alt = -2
   Insn 105: point = 1, n_alt = 3
   Insn 104: point = 2, n_alt = 6
   Insn 103: point = 3, n_alt = 0
   Insn 102: point = 5, n_alt = 1
   Insn 101: point = 6, n_alt = 6
   Insn 100: point = 7, n_alt = 0
   Insn 99: point = 9, n_alt = 1
   Insn 98: point = 10, n_alt = 4
   Insn 97: point = 11, n_alt = 0
   Insn 96: point = 13, n_alt = 1
   Insn 95: point = 14, n_alt = -1
   Insn 94: point = 14, n_alt = 5
   Insn 93: point = 14, n_alt = -2
   Insn 92: point = 15, n_alt = 3
   Insn 91: point = 16, n_alt = 6
   Insn 90: point = 17, n_alt = 0
   Insn 89: point = 19, n_alt = 1
   Insn 88: point = 20, n_alt = 6
   Insn 87: point = 21, n_alt = 0
   Insn 86: point = 23, n_alt = 1
   Insn 85: point = 24, n_alt = 4
   Insn 84: point = 25, n_alt = 0
   Insn 83: point = 27, n_alt = 1
   Insn 82: point = 28, n_alt = -1
   Insn 81: point = 28, n_alt = 5
   Insn 80: point = 28, n_alt = -2
   Insn 79: point = 29, n_alt = 3
   Insn 78: point = 30, n_alt = 6
   Insn 77: point = 31, n_alt = 0
   Insn 76: point = 33, n_alt = 1
   Insn 75: point = 34, n_alt = 6
   Insn 74: point = 35, n_alt = 0
   Insn 73: point = 37, n_alt = 1
   Insn 72: point = 38, n_alt = 4
   Insn 71: point = 39, n_alt = 0
   Insn 70: point = 41, n_alt = 1
   Insn 69: point = 42, n_alt = -1
   Insn 68: point = 42, n_alt = 5
   Insn 67: point = 42, n_alt = -2
   Insn 66: point = 43, n_alt = 3
   Insn 65: point = 44, n_alt = 6
   Insn 64: point = 45, n_alt = 0
   Insn 63: point = 47, n_alt = 1
   Insn 62: point = 48, n_alt = 6
   Insn 61: point = 49, n_alt = 0
   Insn 60: point = 51, n_alt = 1
   Insn 59: point = 52, n_alt = 4
   Insn 58: point = 53, n_alt = 0
   Insn 57: point = 55, n_alt = 1
   Insn 56: point = 56, n_alt = -1
   Insn 55: point = 56, n_alt = 5
   Insn 54: point = 56, n_alt = -2
   Insn 53: point = 57, n_alt = 3
   Insn 52: point = 58, n_alt = 6
   Insn 51: point = 59, n_alt = 0
   Insn 50: point = 61, n_alt = 1
   Insn 49: point = 62, n_alt = 6
   Insn 48: point = 63, n_alt = 0
   Insn 47: point = 65, n_alt = 1
   Insn 46: point = 66, n_alt = 4
   Insn 45: point = 67, n_alt = 0
   Insn 44: point = 69, n_alt = 1
   Insn 43: point = 70, n_alt = -1
   Insn 42: point = 70, n_alt = 5
   Insn 41: point = 70, n_alt = -2
   Insn 40: point = 71, n_alt = 3
   Insn 39: point = 72, n_alt = 6
   Insn 38: point = 73, n_alt = 0
   Insn 37: point = 75, n_alt = 1
   Insn 36: point = 76, n_alt = 6
   Insn 35: point = 77, n_alt = 0
   Insn 34: point = 79, n_alt = 1
   Insn 33: point = 80, n_alt = 4
   Insn 32: point = 81, n_alt = 0
   Insn 31: point = 83, n_alt = 1
   Insn 30: point = 84, n_alt = -1
   Insn 29: point = 84, n_alt = 5
   Insn 28: point = 84, n_alt = -2
   Insn 27: point = 85, n_alt = 3
   Insn 26: point = 86, n_alt = 6
   Insn 25: point = 87, n_alt = 0
   Insn 24: point = 89, n_alt = 1
   Insn 23: point = 90, n_alt = 6
   Insn 22: point = 91, n_alt = 0
   Insn 21: point = 93, n_alt = 1
   Insn 20: point = 94, n_alt = 4
   Insn 19: point = 95, n_alt = 0
   Insn 18: point = 97, n_alt = 1
   Insn 17: point = 98, n_alt = -1
   Insn 16: point = 98, n_alt = 5
   Insn 15: point = 98, n_alt = -2
   Insn 14: point = 99, n_alt = 3
   Insn 13: point = 100, n_alt = 6
   Insn 12: point = 101, n_alt = 0
   Insn 11: point = 103, n_alt = 1
   Insn 10: point = 104, n_alt = 6
   Insn 9: point = 105, n_alt = 0
   Insn 8: point = 107, n_alt = 1
   Insn 7: point = 108, n_alt = 4
   Insn 6: point = 109, n_alt = 0
   Insn 5: point = 111, n_alt = 1
 r110: [108..109]
 r111: [110..111]
 r112: [106..107]
 r113: [104..105]
 r114: [102..103]
 r115: [100..101]
 r116: [98..99]
 r117: [94..95]
 r118: [96..97]
 r119: [92..93]
 r120: [90..91]
 r121: [88..89]
 r122: [86..87]
 r123: [84..85]
 r124: [80..81]
 r125: [82..83]
 r126: [78..79]
 r127: [76..77]
 r128: [74..75]
 r129: [72..73]
 r130: [70..71]
 r131: [66..67]
 r132: [68..69]
 r133: [64..65]
 r134: [62..63]
 r135: [60..61]
 r136: [58..59]
 r137: [56..57]
 r138: [52..53]
 r139: [54..55]
 r140: [50..51]
 r141: [48..49]
 r142: [46..47]
 r143: [44..45]
 r144: [42..43]
 r145: [38..39]
 r146: [40..41]
 r147: [36..37]
 r148: [34..35]
 r149: [32..33]
 r150: [30..31]
 r151: [28..29]
 r152: [24..25]
 r153: [26..27]
 r154: [22..23]
 r155: [20..21]
 r156: [18..19]
 r157: [16..17]
 r158: [14..15]
 r159: [10..11]
 r160: [12..13]
 r161: [8..9]
 r162: [6..7]
 r163: [4..5]
 r164: [2..3]
 r165: [0..1]
Compressing live ranges: from 112 to 112 - 100%
Ranges after the compression:
 r110: [108..109]
 r111: [110..111]
 r112: [106..107]
 r113: [104..105]
 r114: [102..103]
 r115: [100..101]
 r116: [98..99]
 r117: [94..95]
 r118: [96..97]
 r119: [92..93]
 r120: [90..91]
 r121: [88..89]
 r122: [86..87]
 r123: [84..85]
 r124: [80..81]
 r125: [82..83]
 r126: [78..79]
 r127: [76..77]
 r128: [74..75]
 r129: [72..73]
 r130: [70..71]
 r131: [66..67]
 r132: [68..69]
 r133: [64..65]
 r134: [62..63]
 r135: [60..61]
 r136: [58..59]
 r137: [56..57]
 r138: [52..53]
 r139: [54..55]
 r140: [50..51]
 r141: [48..49]
 r142: [46..47]
 r143: [44..45]
 r144: [42..43]
 r145: [38..39]
 r146: [40..41]
 r147: [36..37]
 r148: [34..35]
 r149: [32..33]
 r150: [30..31]
 r151: [28..29]
 r152: [24..25]
 r153: [26..27]
 r154: [22..23]
 r155: [20..21]
 r156: [18..19]
 r157: [16..17]
 r158: [14..15]
 r159: [10..11]
 r160: [12..13]
 r161: [8..9]
 r162: [6..7]
 r163: [4..5]
 r164: [2..3]
 r165: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 71
changing reg in insn 72
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 84
changing reg in insn 85
changing reg in insn 83
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 97
changing reg in insn 98
changing reg in insn 96
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 111.


Keypad_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={19d,9u} r1={19d,9u} r2={10d} r3={66d,56u} r7={1d,34u} r12={19d} r13={1d,11u} r14={10d} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={1d,1u} 
;;    total ref usage 1049{929d,120u,0e} in 108{99 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 r3 [111])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":26 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:HI 3 r3 [110])
        (reg:HI 3 r3 [111])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":26 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 8 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [110])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":26 880 {*thumb2_movhi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [112])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":27 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:QI 3 r3 [113])
        (reg:QI 3 r3 [112])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":27 192 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [113])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":27 192 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [114])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":28 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:QI 3 r3 [115])
        (reg:QI 3 r3 [114])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":28 192 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [115])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":28 192 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [116])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":29 4 {*arm_addsi3}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [116])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":29 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":29 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":29 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 3 r3 [118])
        (const_int 2 [0x2])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":31 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:HI 3 r3 [117])
        (reg:HI 3 r3 [118])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":31 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 20 19 21 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [117])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":31 880 {*thumb2_movhi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [119])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":32 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:QI 3 r3 [120])
        (reg:QI 3 r3 [119])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":32 192 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [120])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":32 192 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [121])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":33 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:QI 3 r3 [122])
        (reg:QI 3 r3 [121])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":33 192 {*arm_movqi_insn}
     (nil))
(insn 26 25 27 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [122])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":33 192 {*arm_movqi_insn}
     (nil))
(insn 27 26 28 2 (set (reg:SI 3 r3 [123])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":34 4 {*arm_addsi3}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [123])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":34 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":34 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":34 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 31 30 32 2 (set (reg:SI 3 r3 [125])
        (const_int 8 [0x8])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":36 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:HI 3 r3 [124])
        (reg:HI 3 r3 [125])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":36 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 33 32 34 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [124])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":36 880 {*thumb2_movhi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 3 r3 [126])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":37 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (reg:QI 3 r3 [127])
        (reg:QI 3 r3 [126])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":37 192 {*arm_movqi_insn}
     (nil))
(insn 36 35 37 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [127])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":37 192 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 2 (set (reg:SI 3 r3 [128])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":38 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:QI 3 r3 [129])
        (reg:QI 3 r3 [128])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":38 192 {*arm_movqi_insn}
     (nil))
(insn 39 38 40 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [129])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":38 192 {*arm_movqi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:SI 3 r3 [130])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":39 4 {*arm_addsi3}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [130])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":39 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":39 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":39 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 44 43 45 2 (set (reg:SI 3 r3 [132])
        (const_int 16 [0x10])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":41 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:HI 3 r3 [131])
        (reg:HI 3 r3 [132])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":41 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 46 45 47 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [131])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":41 880 {*thumb2_movhi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 3 r3 [133])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":42 878 {*thumb2_movsi_insn}
     (nil))
(insn 48 47 49 2 (set (reg:QI 3 r3 [134])
        (reg:QI 3 r3 [133])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":42 192 {*arm_movqi_insn}
     (nil))
(insn 49 48 50 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [134])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":42 192 {*arm_movqi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 3 r3 [135])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":43 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:QI 3 r3 [136])
        (reg:QI 3 r3 [135])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":43 192 {*arm_movqi_insn}
     (nil))
(insn 52 51 53 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [136])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":43 192 {*arm_movqi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 3 r3 [137])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":44 4 {*arm_addsi3}
     (nil))
(insn 54 53 55 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [137])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":44 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 56 55 57 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":44 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 57 56 58 2 (set (reg:SI 3 r3 [139])
        (const_int 32 [0x20])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:HI 3 r3 [138])
        (reg:HI 3 r3 [139])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":46 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 32 [0x20])
        (nil)))
(insn 59 58 60 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [138])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":46 880 {*thumb2_movhi_insn}
     (nil))
(insn 60 59 61 2 (set (reg:SI 3 r3 [140])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":47 878 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (reg:QI 3 r3 [141])
        (reg:QI 3 r3 [140])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":47 192 {*arm_movqi_insn}
     (nil))
(insn 62 61 63 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [141])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":47 192 {*arm_movqi_insn}
     (nil))
(insn 63 62 64 2 (set (reg:SI 3 r3 [142])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":48 878 {*thumb2_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (reg:QI 3 r3 [143])
        (reg:QI 3 r3 [142])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":48 192 {*arm_movqi_insn}
     (nil))
(insn 65 64 66 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [143])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":48 192 {*arm_movqi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:SI 3 r3 [144])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":49 4 {*arm_addsi3}
     (nil))
(insn 67 66 68 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [144])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":49 878 {*thumb2_movsi_insn}
     (nil))
(insn 68 67 69 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":49 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 69 68 70 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":49 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 70 69 71 2 (set (reg:SI 3 r3 [146])
        (const_int 64 [0x40])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":51 878 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 2 (set (reg:HI 3 r3 [145])
        (reg:HI 3 r3 [146])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":51 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
(insn 72 71 73 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [145])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":51 880 {*thumb2_movhi_insn}
     (nil))
(insn 73 72 74 2 (set (reg:SI 3 r3 [147])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 2 (set (reg:QI 3 r3 [148])
        (reg:QI 3 r3 [147])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":52 192 {*arm_movqi_insn}
     (nil))
(insn 75 74 76 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [148])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":52 192 {*arm_movqi_insn}
     (nil))
(insn 76 75 77 2 (set (reg:SI 3 r3 [149])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 77 76 78 2 (set (reg:QI 3 r3 [150])
        (reg:QI 3 r3 [149])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":53 192 {*arm_movqi_insn}
     (nil))
(insn 78 77 79 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [150])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":53 192 {*arm_movqi_insn}
     (nil))
(insn 79 78 80 2 (set (reg:SI 3 r3 [151])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":54 4 {*arm_addsi3}
     (nil))
(insn 80 79 81 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [151])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":54 878 {*thumb2_movsi_insn}
     (nil))
(insn 81 80 82 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":54 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 82 81 83 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":54 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 83 82 84 2 (set (reg:SI 3 r3 [153])
        (const_int 128 [0x80])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":56 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 2 (set (reg:HI 3 r3 [152])
        (reg:HI 3 r3 [153])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":56 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(insn 85 84 86 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [152])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":56 880 {*thumb2_movhi_insn}
     (nil))
(insn 86 85 87 2 (set (reg:SI 3 r3 [154])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":57 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 2 (set (reg:QI 3 r3 [155])
        (reg:QI 3 r3 [154])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":57 192 {*arm_movqi_insn}
     (nil))
(insn 88 87 89 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [155])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":57 192 {*arm_movqi_insn}
     (nil))
(insn 89 88 90 2 (set (reg:SI 3 r3 [156])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":58 878 {*thumb2_movsi_insn}
     (nil))
(insn 90 89 91 2 (set (reg:QI 3 r3 [157])
        (reg:QI 3 r3 [156])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":58 192 {*arm_movqi_insn}
     (nil))
(insn 91 90 92 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [157])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":58 192 {*arm_movqi_insn}
     (nil))
(insn 92 91 93 2 (set (reg:SI 3 r3 [158])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":59 4 {*arm_addsi3}
     (nil))
(insn 93 92 94 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [158])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":59 878 {*thumb2_movsi_insn}
     (nil))
(insn 94 93 95 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":59 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 95 94 96 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":59 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 96 95 97 2 (set (reg:SI 3 r3 [160])
        (const_int 256 [0x100])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":61 878 {*thumb2_movsi_insn}
     (nil))
(insn 97 96 98 2 (set (reg:HI 3 r3 [159])
        (reg:HI 3 r3 [160])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":61 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 256 [0x100])
        (nil)))
(insn 98 97 99 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 3 r3 [159])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":61 880 {*thumb2_movhi_insn}
     (nil))
(insn 99 98 100 2 (set (reg:SI 3 r3 [161])
        (const_int 4 [0x4])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":62 878 {*thumb2_movsi_insn}
     (nil))
(insn 100 99 101 2 (set (reg:QI 3 r3 [162])
        (reg:QI 3 r3 [161])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 101 100 102 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 3 r3 [162])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 102 101 103 2 (set (reg:SI 3 r3 [163])
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":63 878 {*thumb2_movsi_insn}
     (nil))
(insn 103 102 104 2 (set (reg:QI 3 r3 [164])
        (reg:QI 3 r3 [163])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":63 192 {*arm_movqi_insn}
     (nil))
(insn 104 103 105 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 3 r3 [164])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":63 192 {*arm_movqi_insn}
     (nil))
(insn 105 104 106 2 (set (reg:SI 3 r3 [165])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 4 [0x4]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":64 4 {*arm_addsi3}
     (nil))
(insn 106 105 107 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [165])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":64 878 {*thumb2_movsi_insn}
     (nil))
(insn 107 106 108 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":64 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 108 107 109 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000598e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":64 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 109 108 110 2 (set (reg:SI 1 r1)
        (const_int 255 [0xff])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 110 109 111 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":65 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 111 110 114 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PORT") [flags 0x41]  <function_decl 000000000598e800 MCAL_GPIO_WRITE_PORT>) [0 MCAL_GPIO_WRITE_PORT S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":65 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 114 111 124 2 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":67 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 124 114 0 NOTE_INSN_DELETED)

;; Function Keypad_getkey (Keypad_getkey, funcdef_no=5, decl_uid=5636, cgraph_uid=5, symbol_order=7)

      Creating newreg=166
Removing SCRATCH in insn #78 (nop 4)
rescanning insn with uid = 78.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 47:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_insn}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) r  (1) rI  (4) =&r {thumb2_casesi_internal}
      Change to class GENERAL_REGS for r166
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 124:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 133:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 164:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 191:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 204:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 213:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 222:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 231:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 242:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 243:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 244:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 248:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 252:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 253:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 254:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 258:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 46
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 47
EBB 48
EBB 49
EBB 50
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45

********** Pseudo live ranges #1: **********

  BB 45
   Insn 270: point = 0, n_alt = -1
   Insn 269: point = 0, n_alt = -2
   Insn 265: point = 1, n_alt = -2
  BB 39
   Insn 306: point = 4, n_alt = -1
   Insn 235: point = 4, n_alt = 1
  BB 37
   Insn 304: point = 5, n_alt = -1
   Insn 226: point = 5, n_alt = 1
  BB 35
   Insn 302: point = 6, n_alt = -1
   Insn 217: point = 6, n_alt = 1
  BB 33
   Insn 300: point = 7, n_alt = -1
   Insn 208: point = 7, n_alt = 1
  BB 31
   Insn 298: point = 8, n_alt = -1
   Insn 195: point = 8, n_alt = 1
  BB 29
   Insn 296: point = 9, n_alt = -1
   Insn 186: point = 9, n_alt = 1
  BB 27
   Insn 294: point = 10, n_alt = -1
   Insn 177: point = 10, n_alt = 1
  BB 25
   Insn 292: point = 11, n_alt = -1
   Insn 168: point = 11, n_alt = 1
  BB 23
   Insn 290: point = 12, n_alt = -1
   Insn 155: point = 12, n_alt = 1
  BB 21
   Insn 288: point = 13, n_alt = -1
   Insn 146: point = 13, n_alt = 1
  BB 19
   Insn 286: point = 14, n_alt = -1
   Insn 137: point = 14, n_alt = 1
  BB 17
   Insn 284: point = 15, n_alt = -1
   Insn 128: point = 15, n_alt = 1
  BB 15
   Insn 282: point = 16, n_alt = -1
   Insn 115: point = 16, n_alt = 1
  BB 13
   Insn 280: point = 17, n_alt = -1
   Insn 106: point = 17, n_alt = 1
  BB 11
   Insn 278: point = 18, n_alt = -1
   Insn 97: point = 18, n_alt = 1
  BB 9
   Insn 276: point = 19, n_alt = -1
   Insn 88: point = 19, n_alt = 1
  BB 44
   Insn 262: point = 20, n_alt = 1
  BB 43
   Insn 260: point = 21, n_alt = -1
   Insn 259: point = 21, n_alt = 0
   Insn 258: point = 22, n_alt = 5
  BB 2
   Insn 272: point = 23, n_alt = -1
   Insn 6: point = 23, n_alt = 7
   Insn 5: point = 24, n_alt = 1
  BB 42
   Insn 254: point = 25, n_alt = 7
   Insn 253: point = 26, n_alt = 2
   Insn 252: point = 28, n_alt = 5
  BB 41
   Insn 250: point = 29, n_alt = -1
   Insn 249: point = 29, n_alt = 0
   Insn 248: point = 30, n_alt = 5
  BB 3
   Insn 274: point = 31, n_alt = -1
   Insn 47: point = 31, n_alt = 7
   Insn 46: point = 32, n_alt = 1
   Insn 45: point = 33, n_alt = -1
   Insn 44: point = 33, n_alt = 5
   Insn 43: point = 33, n_alt = -2
   Insn 42: point = 34, n_alt = 1
   Insn 41: point = 34, n_alt = 0
   Insn 40: point = 36, n_alt = 5
   Insn 39: point = 38, n_alt = 5
   Insn 38: point = 39, n_alt = 5
   Insn 37: point = 40, n_alt = -1
   Insn 36: point = 40, n_alt = 5
   Insn 35: point = 40, n_alt = -2
   Insn 34: point = 41, n_alt = 1
   Insn 33: point = 41, n_alt = 0
   Insn 32: point = 43, n_alt = 5
   Insn 31: point = 45, n_alt = 5
   Insn 30: point = 46, n_alt = -1
   Insn 29: point = 46, n_alt = 5
   Insn 28: point = 46, n_alt = -2
   Insn 27: point = 47, n_alt = 1
   Insn 26: point = 47, n_alt = 0
   Insn 25: point = 49, n_alt = 5
   Insn 24: point = 51, n_alt = 5
   Insn 23: point = 52, n_alt = -1
   Insn 22: point = 52, n_alt = 5
   Insn 21: point = 52, n_alt = -2
   Insn 20: point = 53, n_alt = 1
   Insn 19: point = 53, n_alt = 0
   Insn 18: point = 55, n_alt = 5
   Insn 17: point = 57, n_alt = 5
   Insn 16: point = 58, n_alt = -1
   Insn 15: point = 58, n_alt = 5
   Insn 14: point = 58, n_alt = -2
   Insn 13: point = 59, n_alt = 1
   Insn 12: point = 59, n_alt = 0
   Insn 11: point = 61, n_alt = 5
   Insn 10: point = 63, n_alt = 5
  BB 40
   Insn 244: point = 64, n_alt = 7
   Insn 243: point = 65, n_alt = 2
   Insn 242: point = 67, n_alt = 5
  BB 49
   Insn 323: point = 68, n_alt = -1
   Insn 322: point = 68, n_alt = -1
  BB 30
   Insn 193: point = 68, n_alt = -1
   Insn 192: point = 68, n_alt = 0
   Insn 191: point = 69, n_alt = 5
  BB 28
   Insn 184: point = 70, n_alt = -1
   Insn 183: point = 70, n_alt = 0
   Insn 182: point = 71, n_alt = 5
  BB 26
   Insn 175: point = 72, n_alt = -1
   Insn 174: point = 72, n_alt = 0
   Insn 173: point = 73, n_alt = 5
  BB 24
   Insn 166: point = 74, n_alt = -1
   Insn 165: point = 74, n_alt = 0
   Insn 164: point = 75, n_alt = 5
  BB 48
   Insn 318: point = 76, n_alt = -1
   Insn 317: point = 76, n_alt = -1
  BB 22
   Insn 153: point = 76, n_alt = -1
   Insn 152: point = 76, n_alt = 0
   Insn 151: point = 77, n_alt = 5
  BB 20
   Insn 144: point = 78, n_alt = -1
   Insn 143: point = 78, n_alt = 0
   Insn 142: point = 79, n_alt = 5
  BB 18
   Insn 135: point = 80, n_alt = -1
   Insn 134: point = 80, n_alt = 0
   Insn 133: point = 81, n_alt = 5
  BB 16
   Insn 126: point = 82, n_alt = -1
   Insn 125: point = 82, n_alt = 0
   Insn 124: point = 83, n_alt = 5
  BB 47
   Insn 313: point = 84, n_alt = -1
   Insn 312: point = 84, n_alt = -1
  BB 14
   Insn 113: point = 84, n_alt = -1
   Insn 112: point = 84, n_alt = 0
   Insn 111: point = 85, n_alt = 5
  BB 12
   Insn 104: point = 86, n_alt = -1
   Insn 103: point = 86, n_alt = 0
   Insn 102: point = 87, n_alt = 5
  BB 10
   Insn 95: point = 88, n_alt = -1
   Insn 94: point = 88, n_alt = 0
   Insn 93: point = 89, n_alt = 5
  BB 8
   Insn 86: point = 90, n_alt = -1
   Insn 85: point = 90, n_alt = 0
   Insn 84: point = 91, n_alt = 5
  BB 50
   Insn 327: point = 92, n_alt = -1
  BB 38
   Insn 233: point = 92, n_alt = -1
   Insn 232: point = 92, n_alt = 0
   Insn 231: point = 93, n_alt = 5
  BB 36
   Insn 224: point = 94, n_alt = -1
   Insn 223: point = 94, n_alt = 0
   Insn 222: point = 95, n_alt = 5
  BB 34
   Insn 215: point = 96, n_alt = -1
   Insn 214: point = 96, n_alt = 0
   Insn 213: point = 97, n_alt = 5
  BB 32
   Insn 206: point = 98, n_alt = -1
   Insn 205: point = 98, n_alt = 0
   Insn 204: point = 99, n_alt = 5
  BB 7
   Insn 78: point = 100, n_alt = 0
   Insn 77: point = 102, n_alt = 5
  BB 6
   Insn 75: point = 103, n_alt = -1
   Insn 74: point = 103, n_alt = 0
   Insn 72: point = 104, n_alt = -2
   Insn 71: point = 106, n_alt = -2
   Insn 70: point = 107, n_alt = -1
   Insn 69: point = 107, n_alt = 5
   Insn 68: point = 107, n_alt = -2
   Insn 67: point = 108, n_alt = 0
   Insn 66: point = 110, n_alt = 5
   Insn 65: point = 112, n_alt = 5
   Insn 64: point = 113, n_alt = 5
  BB 46
   Insn 309: point = 114, n_alt = -1
  BB 5
  BB 4
   Insn 61: point = 114, n_alt = -1
   Insn 60: point = 114, n_alt = 0
   Insn 59: point = 115, n_alt = -2
   Insn 58: point = 117, n_alt = -2
   Insn 57: point = 118, n_alt = -1
   Insn 56: point = 118, n_alt = 5
   Insn 55: point = 118, n_alt = -2
   Insn 54: point = 119, n_alt = 0
   Insn 53: point = 121, n_alt = 5
   Insn 52: point = 123, n_alt = 5
   Insn 51: point = 124, n_alt = 5
 r110: [60..61]
 r111: [58..59]
 r112: [54..55]
 r113: [52..53]
 r114: [48..49]
 r115: [46..47]
 r116: [42..43]
 r117: [40..41]
 r118: [35..36]
 r119: [33..34]
 r120: [120..121]
 r121: [118..119]
 r122: [114..115]
 r123: [109..110]
 r124: [107..108]
 r125: [103..104]
 r126: [2..20]
 r127: [0..1]
 r128: [23..24]
 r129: [62..63]
 r130: [56..57]
 r131: [50..51]
 r132: [44..45]
 r133: [37..39]
 r134: [37..38]
 r135: [31..32]
 r136: [122..124]
 r137: [122..123]
 r138: [116..117]
 r139: [111..113]
 r140: [111..112]
 r141: [105..106]
 r142: [101..102]
 r143: [90..91]
 r144: [88..89]
 r145: [86..87]
 r146: [84..85]
 r147: [82..83]
 r148: [80..81]
 r149: [78..79]
 r150: [76..77]
 r151: [74..75]
 r152: [72..73]
 r153: [70..71]
 r154: [68..69]
 r155: [98..99]
 r156: [96..97]
 r157: [94..95]
 r158: [92..93]
 r159: [64..65]
 r160: [66..67]
 r161: [29..30]
 r162: [25..26]
 r163: [27..28]
 r164: [21..22]
 r166: [100..101]
Compressing live ranges: from 125 to 105 - 84%
Ranges after the compression:
 r110: [42..43]
 r111: [40..41]
 r112: [36..37]
 r113: [34..35]
 r114: [30..31]
 r115: [28..29]
 r116: [24..25]
 r117: [22..23]
 r118: [18..19]
 r119: [16..17]
 r120: [101..102]
 r121: [99..100]
 r122: [95..96]
 r123: [91..92]
 r124: [89..90]
 r125: [85..86]
 r126: [2..3]
 r127: [0..1]
 r128: [6..7]
 r129: [44..45]
 r130: [38..39]
 r131: [32..33]
 r132: [26..27]
 r133: [20..21]
 r134: [20..21]
 r135: [14..15]
 r136: [103..104]
 r137: [103..104]
 r138: [97..98]
 r139: [93..94]
 r140: [93..94]
 r141: [87..88]
 r142: [83..84]
 r143: [72..73]
 r144: [70..71]
 r145: [68..69]
 r146: [66..67]
 r147: [64..65]
 r148: [62..63]
 r149: [60..61]
 r150: [58..59]
 r151: [56..57]
 r152: [54..55]
 r153: [52..53]
 r154: [50..51]
 r155: [80..81]
 r156: [78..79]
 r157: [76..77]
 r158: [74..75]
 r159: [46..47]
 r160: [48..49]
 r161: [12..13]
 r162: [8..9]
 r163: [10..11]
 r164: [4..5]
 r166: [82..83]

********** Assignment #1: **********

	 Assigning to 166 (cl=GENERAL_REGS, orig=166, freq=1, tfirst=166, tfreq=1)...
	   Assign 2 to reload r166 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 60
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 72
changing reg in insn 74
changing reg in insn 262
changing reg in insn 235
changing reg in insn 226
changing reg in insn 217
changing reg in insn 208
changing reg in insn 195
changing reg in insn 186
changing reg in insn 177
changing reg in insn 168
changing reg in insn 155
changing reg in insn 146
changing reg in insn 137
changing reg in insn 128
changing reg in insn 115
changing reg in insn 106
changing reg in insn 97
changing reg in insn 88
changing reg in insn 265
changing reg in insn 265
changing reg in insn 269
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 31
changing reg in insn 32
changing reg in insn 38
changing reg in insn 40
changing reg in insn 39
changing reg in insn 40
changing reg in insn 46
changing reg in insn 47
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 58
changing reg in insn 59
changing reg in insn 64
changing reg in insn 66
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 72
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 84
changing reg in insn 85
changing reg in insn 93
changing reg in insn 94
changing reg in insn 102
changing reg in insn 103
changing reg in insn 111
changing reg in insn 112
changing reg in insn 124
changing reg in insn 125
changing reg in insn 133
changing reg in insn 134
changing reg in insn 142
changing reg in insn 143
changing reg in insn 151
changing reg in insn 152
changing reg in insn 164
changing reg in insn 165
changing reg in insn 173
changing reg in insn 174
changing reg in insn 182
changing reg in insn 183
changing reg in insn 191
changing reg in insn 192
changing reg in insn 204
changing reg in insn 205
changing reg in insn 213
changing reg in insn 214
changing reg in insn 222
changing reg in insn 223
changing reg in insn 231
changing reg in insn 232
changing reg in insn 243
changing reg in insn 244
changing reg in insn 242
changing reg in insn 243
changing reg in insn 248
changing reg in insn 249
changing reg in insn 253
changing reg in insn 254
changing reg in insn 252
changing reg in insn 253
changing reg in insn 258
changing reg in insn 259
changing reg in insn 78
deleting insn with uid = 59.
deleting insn with uid = 72.
deleting insn with uid = 265.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 70.


Keypad_getkey

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={16d,11u} r1={15d,7u} r2={17d,8u} r3={73d,50u} r7={1d,78u} r12={15d} r13={1d,57u} r14={8d} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={28d,20u} r101={7d} r102={1d,1u} 
;;    total ref usage 1009{777d,232u,0e} in 167{160 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 128
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 r3 [128])
        (const_int 0 [0])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 272 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])
        (reg:SI 3 r3 [128])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 272 6 273 2 (set (pc)
        (label_ref 255)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 214 {*arm_jump}
     (nil)
 -> 255)
;;  succ:       43 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 273 272 257)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       43
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 129 130 131 132 133 134 135
(code_label 257 273 9 3 37 (nil) [1 uses])
(note 9 257 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 3 r3 [129])
        (symbol_ref:SI ("Key_padCol") [flags 0x2]  <var_decl 00000000059bd1b0 Key_padCol>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 3 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (mem/c:SI (reg/f:SI 3 r3 [129]) [1 Key_padCol+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (reg:QI 3 r3 [orig:110 _1 ] [110]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 13 12 14 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:111 _2 ] [111])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 16 15 17 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000598e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":75 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 17 16 18 3 (set (reg/f:SI 3 r3 [130])
        (symbol_ref:SI ("Key_padCol") [flags 0x2]  <var_decl 00000000059bd1b0 Key_padCol>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg:SI 3 r3 [orig:112 _3 ] [112])
        (mem/c:SI (plus:SI (reg/f:SI 3 r3 [130])
                (const_int 4 [0x4])) [1 Key_padCol+4 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [orig:112 _3 ] [112]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:113 _4 ] [113])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 23 22 24 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000598e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":76 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 24 23 25 3 (set (reg/f:SI 3 r3 [131])
        (symbol_ref:SI ("Key_padCol") [flags 0x2]  <var_decl 00000000059bd1b0 Key_padCol>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:114 _5 ] [114])
        (mem/c:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 8 [0x8])) [1 Key_padCol+8 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 3 (set (reg:SI 3 r3 [orig:115 _6 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [orig:114 _5 ] [114]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 27 26 28 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:115 _6 ] [115])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 30 29 31 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000598e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":77 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 31 30 32 3 (set (reg/f:SI 3 r3 [132])
        (symbol_ref:SI ("Key_padCol") [flags 0x2]  <var_decl 00000000059bd1b0 Key_padCol>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 3 r3 [orig:116 _7 ] [116])
        (mem/c:SI (plus:SI (reg/f:SI 3 r3 [132])
                (const_int 12 [0xc])) [1 Key_padCol+12 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (zero_extend:SI (reg:QI 3 r3 [orig:116 _7 ] [116]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 34 33 35 3 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:117 _8 ] [117])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 37 36 38 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000598e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":78 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 38 37 39 3 (set (reg/f:SI 2 r2 [133])
        (symbol_ref:SI ("Key_padCol") [flags 0x2]  <var_decl 00000000059bd1b0 Key_padCol>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 40 3 (set (reg:SI 3 r3 [134])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(insn 40 39 41 3 (set (reg:SI 3 r3 [orig:118 _9 ] [118])
        (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [134])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [133])) [1 Key_padCol S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(insn 41 40 42 3 (set (reg:SI 3 r3 [orig:119 _10 ] [119])
        (zero_extend:SI (reg:QI 3 r3 [orig:118 _9 ] [118]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 42 41 43 3 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 44 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:119 _10 ] [119])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(insn 44 43 45 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 45 44 46 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000598e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":79 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 46 45 47 3 (set (reg:SI 3 r3 [135])
        (const_int 0 [0])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 47 46 274 3 (set (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])
        (reg:SI 3 r3 [135])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 274 47 275 3 (set (pc)
        (label_ref 245)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 214 {*arm_jump}
     (nil)
 -> 245)
;;  succ:       41 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 275 274 247)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       41
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 120 121 122 136 137 138
(code_label 247 275 50 4 36 (nil) [1 uses])
(note 50 247 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 4 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("Key_padRow") [flags 0x2]  <var_decl 00000000059bd120 Key_padRow>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 52 51 53 4 (set (reg:SI 3 r3 [137])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 53 52 54 4 (set (reg:SI 3 r3 [orig:120 _11 ] [120])
        (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [137])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [136])) [1 Key_padRow S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 4 (set (reg:SI 3 r3 [orig:121 _12 ] [121])
        (zero_extend:SI (reg:QI 3 r3 [orig:120 _11 ] [120]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 55 54 56 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:121 _12 ] [121])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 56 55 57 4 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 57 56 58 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_READ_PIN") [flags 0x41]  <function_decl 000000000598e500 MCAL_GPIO_READ_PIN>) [0 MCAL_GPIO_READ_PIN S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 58 57 60 4 (set (reg:SI 3 r3 [138])
        (reg:SI 0 r0)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 60 58 61 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _13 ] [122])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":81 204 {arm_cond_branch}
     (nil)
 -> 240)
;;  succ:       5 (FALLTHRU)
;;              40
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 46, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 62 61 308 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       46 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 6, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 308 62 309 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 73 46 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 236 {nop}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 7, flags: (RTL, MODIFIED)
;;  pred:       46 [100.0%]  (FALLTHRU)
;;              6 (DFS_BACK)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 123 124 125 139 140 141
(code_label 73 309 63 6 13 (nil) [1 uses])
(note 63 73 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 6 (set (reg/f:SI 2 r2 [139])
        (symbol_ref:SI ("Key_padRow") [flags 0x2]  <var_decl 00000000059bd120 Key_padRow>)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 65 64 66 6 (set (reg:SI 3 r3 [140])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 66 65 67 6 (set (reg:SI 3 r3 [orig:123 _14 ] [123])
        (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [140])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [139])) [1 Key_padRow S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 67 66 68 6 (set (reg:SI 3 r3 [orig:124 _15 ] [124])
        (zero_extend:SI (reg:QI 3 r3 [orig:123 _14 ] [123]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 68 67 69 6 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:124 _15 ] [124])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 6 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 70 69 71 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_READ_PIN") [flags 0x41]  <function_decl 000000000598e500 MCAL_GPIO_READ_PIN>) [0 MCAL_GPIO_READ_PIN S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 71 70 74 6 (set (reg:SI 3 r3 [141])
        (reg:SI 0 r0)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 71 75 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:125 _16 ] [125])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":82 204 {arm_cond_branch}
     (nil)
 -> 73)
;;  succ:       6 (DFS_BACK)
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 142
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 7 (set (reg:SI 3 r3 [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":84 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 78 77 79 7 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [142])
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [142])
                                (const_int 4 [0x4]))
                            (label_ref 79)) [0  S4 A32])
                    (label_ref 240)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [166]))
            (use (label_ref 79))
        ]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":84 907 {thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 240 (nil))
 -> 79)
;;  succ:       40
;;              8
;;              16
;;              24
;;              32
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 79 78 80 15 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 80 79 81 (addr_diff_vec:SI (label_ref:SI 79)
         [
            (label_ref:SI 82)
            (label_ref:SI 122)
            (label_ref:SI 162)
            (label_ref:SI 202)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 81 80 82)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 143
(code_label 82 81 83 8 14 (nil) [1 uses])
(note 83 82 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 8 (set (reg:SI 3 r3 [143])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":86 878 {*thumb2_movsi_insn}
     (nil))
(insn 85 84 86 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [143])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":86 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 86 85 87 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":86 204 {arm_cond_branch}
     (nil)
 -> 91)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 87 86 88 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 276 9 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 55 [0x37])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":87 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 276 88 277 9 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":87 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 277 276 91)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 144
(code_label 91 277 92 10 19 (nil) [1 uses])
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 10 (set (reg:SI 3 r3 [144])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 94 93 95 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [144])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":88 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 95 94 96 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":88 204 {arm_cond_branch}
     (nil)
 -> 100)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 278 11 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 52 [0x34])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":89 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 278 97 279 11 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":89 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 279 278 100)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 145
(code_label 100 279 101 12 21 (nil) [1 uses])
(note 101 100 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 12 (set (reg:SI 3 r3 [145])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":90 878 {*thumb2_movsi_insn}
     (nil))
(insn 103 102 104 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [145])
            (const_int 2 [0x2]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":90 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 104 103 105 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":90 204 {arm_cond_branch}
     (nil)
 -> 109)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 280 13 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 49 [0x31])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":91 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 280 106 281 13 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":91 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 281 280 109)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 146
(code_label 109 281 110 14 22 (nil) [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg:SI 3 r3 [146])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":92 878 {*thumb2_movsi_insn}
     (nil))
(insn 112 111 113 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [146])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":92 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 113 112 114 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 311)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":92 204 {arm_cond_branch}
     (nil)
 -> 311)
;;  succ:       15 (FALLTHRU)
;;              47
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 114 113 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 282 15 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 63 [0x3f])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":93 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 282 115 283 15 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":93 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 283 282 122)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147
(code_label 122 283 123 16 16 (nil) [1 uses])
(note 123 122 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 16 (set (reg:SI 3 r3 [147])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 125 124 126 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [147])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":96 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 126 125 127 16 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":96 204 {arm_cond_branch}
     (nil)
 -> 131)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 127 126 128 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 284 17 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 56 [0x38])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":97 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 284 128 285 17 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":97 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 285 284 131)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 148
(code_label 131 285 132 18 24 (nil) [1 uses])
(note 132 131 133 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 18 (set (reg:SI 3 r3 [148])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":98 878 {*thumb2_movsi_insn}
     (nil))
(insn 134 133 135 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [148])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":98 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 135 134 136 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":98 204 {arm_cond_branch}
     (nil)
 -> 140)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 286 19 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 53 [0x35])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":99 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 286 137 287 19 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":99 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 287 286 140)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 149
(code_label 140 287 141 20 25 (nil) [1 uses])
(note 141 140 142 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 20 (set (reg:SI 3 r3 [149])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":100 878 {*thumb2_movsi_insn}
     (nil))
(insn 143 142 144 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [149])
            (const_int 2 [0x2]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":100 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 144 143 145 20 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":100 204 {arm_cond_branch}
     (nil)
 -> 149)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 288 21 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 50 [0x32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":101 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 288 146 289 21 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":101 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 289 288 149)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 150
(code_label 149 289 150 22 26 (nil) [1 uses])
(note 150 149 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 22 (set (reg:SI 3 r3 [150])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":102 878 {*thumb2_movsi_insn}
     (nil))
(insn 152 151 153 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [150])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":102 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 153 152 154 22 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 316)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":102 204 {arm_cond_branch}
     (nil)
 -> 316)
;;  succ:       23 (FALLTHRU)
;;              48
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 154 153 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 290 23 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 48 [0x30])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":103 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 290 155 291 23 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":103 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 291 290 162)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 151
(code_label 162 291 163 24 17 (nil) [1 uses])
(note 163 162 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 24 (set (reg:SI 3 r3 [151])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":106 878 {*thumb2_movsi_insn}
     (nil))
(insn 165 164 166 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [151])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":106 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 166 165 167 24 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":106 204 {arm_cond_branch}
     (nil)
 -> 171)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 167 166 168 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 292 25 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 57 [0x39])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":107 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 292 168 293 25 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":107 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 293 292 171)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 152
(code_label 171 293 172 26 28 (nil) [1 uses])
(note 172 171 173 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 26 (set (reg:SI 3 r3 [152])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":108 878 {*thumb2_movsi_insn}
     (nil))
(insn 174 173 175 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [152])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":108 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 175 174 176 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":108 204 {arm_cond_branch}
     (nil)
 -> 180)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 176 175 177 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 294 27 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 54 [0x36])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":109 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 294 177 295 27 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":109 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 295 294 180)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 153
(code_label 180 295 181 28 29 (nil) [1 uses])
(note 181 180 182 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 28 (set (reg:SI 3 r3 [153])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 183 182 184 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [153])
            (const_int 2 [0x2]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":110 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 184 183 185 28 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":110 204 {arm_cond_branch}
     (nil)
 -> 189)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 185 184 186 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 296 29 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 51 [0x33])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":111 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 296 186 297 29 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":111 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 297 296 189)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 154
(code_label 189 297 190 30 30 (nil) [1 uses])
(note 190 189 191 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 30 (set (reg:SI 3 r3 [154])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 192 191 193 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [154])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":112 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 193 192 194 30 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 321)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":112 204 {arm_cond_branch}
     (nil)
 -> 321)
;;  succ:       31 (FALLTHRU)
;;              49
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 194 193 195 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 298 31 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 61 [0x3d])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":113 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 298 195 299 31 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":113 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 299 298 202)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 155
(code_label 202 299 203 32 18 (nil) [1 uses])
(note 203 202 204 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 32 (set (reg:SI 3 r3 [155])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":116 878 {*thumb2_movsi_insn}
     (nil))
(insn 205 204 206 32 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [155])
            (const_int 0 [0]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":116 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 206 205 207 32 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":116 204 {arm_cond_branch}
     (nil)
 -> 211)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 207 206 208 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 300 33 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 47 [0x2f])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":117 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 300 208 301 33 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":117 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 301 300 211)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 156
(code_label 211 301 212 34 32 (nil) [1 uses])
(note 212 211 213 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 34 (set (reg:SI 3 r3 [156])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":118 878 {*thumb2_movsi_insn}
     (nil))
(insn 214 213 215 34 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [156])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":118 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 215 214 216 34 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":118 204 {arm_cond_branch}
     (nil)
 -> 220)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 216 215 217 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 302 35 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 42 [0x2a])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":119 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 302 217 303 35 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":119 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 303 302 220)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 157
(code_label 220 303 221 36 33 (nil) [1 uses])
(note 221 220 222 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 36 (set (reg:SI 3 r3 [157])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":120 878 {*thumb2_movsi_insn}
     (nil))
(insn 223 222 224 36 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [157])
            (const_int 2 [0x2]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":120 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 224 223 225 36 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":120 204 {arm_cond_branch}
     (nil)
 -> 229)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 225 224 226 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 304 37 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 45 [0x2d])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":121 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 304 226 305 37 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":121 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 305 304 229)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 158
(code_label 229 305 230 38 34 (nil) [1 uses])
(note 230 229 231 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 38 (set (reg:SI 3 r3 [158])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":122 878 {*thumb2_movsi_insn}
     (nil))
(insn 232 231 233 38 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [158])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":122 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 233 232 234 38 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 326)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":122 204 {arm_cond_branch}
     (nil)
 -> 326)
;;  succ:       39 (FALLTHRU)
;;              50
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 47, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 234 233 235 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 306 39 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 43 [0x2b])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":123 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 306 235 307 39 (set (pc)
        (label_ref 263)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":123 214 {*arm_jump}
     (nil)
 -> 263)
;;  succ:       45 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

(barrier 307 306 311)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 48, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 311 307 310 47 38 (nil) [1 uses])
(note 310 311 312 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 312 310 313 47 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":94 236 {nop}
     (nil))
(jump_insn 313 312 314 47 (set (pc)
        (label_ref 240)) 214 {*arm_jump}
     (nil)
 -> 240)
;;  succ:       40 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 314 313 316)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 316 314 315 48 39 (nil) [1 uses])
(note 315 316 317 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 317 315 318 48 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":104 236 {nop}
     (nil))
(jump_insn 318 317 319 48 (set (pc)
        (label_ref 240)) 214 {*arm_jump}
     (nil)
 -> 240)
;;  succ:       40 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 319 318 321)
;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 321 319 320 49 40 (nil) [1 uses])
(note 320 321 322 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 322 320 323 49 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":114 236 {nop}
     (nil))
(jump_insn 323 322 324 49 (set (pc)
        (label_ref 240)) 214 {*arm_jump}
     (nil)
 -> 240)
;;  succ:       40 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 324 323 326)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 326 324 325 50 41 (nil) [1 uses])
(note 325 326 327 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 327 325 240 50 (const_int 0 [0]) "../HAL_driver/KEYPAD_DRIVER/keypad.c":124 236 {nop}
     (nil))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 41, flags: (RTL, MODIFIED)
;;  pred:       4
;;              7
;;              50 [100.0%]  (FALLTHRU)
;;              47 [100.0%] 
;;              48 [100.0%] 
;;              49 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 159 160
(code_label 240 327 241 40 12 (nil) [5 uses])
(note 241 240 242 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 40 (set (reg:SI 3 r3 [160])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 243 242 244 40 (set (reg:SI 3 r3 [159])
        (plus:SI (reg:SI 3 r3 [160])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 4 {*arm_addsi3}
     (nil))
(insn 244 243 245 40 (set (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])
        (reg:SI 3 r3 [159])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       41 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 161
(code_label 245 244 246 41 11 (nil) [1 uses])
(note 246 245 248 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 248 246 249 41 (set (reg:SI 3 r3 [161])
        (mem/c:SI (reg/f:SI 7 r7) [1 j+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 249 248 250 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [161])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 250 249 251 41 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":80 204 {arm_cond_branch}
     (nil)
 -> 247)
;;  succ:       4
;;              42 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 162 163
(note 251 250 252 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 42 (set (reg:SI 3 r3 [163])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 253 252 254 42 (set (reg:SI 3 r3 [162])
        (plus:SI (reg:SI 3 r3 [163])
            (const_int 1 [0x1]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 4 {*arm_addsi3}
     (nil))
(insn 254 253 255 42 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])
        (reg:SI 3 r3 [162])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       43 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 164
(code_label 255 254 256 43 10 (nil) [1 uses])
(note 256 255 258 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 258 256 259 43 (set (reg:SI 3 r3 [164])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 i+0 S4 A32])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 259 258 260 43 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [164])
            (const_int 3 [0x3]))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 260 259 261 43 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 257)
            (pc))) "../HAL_driver/KEYPAD_DRIVER/keypad.c":71 204 {arm_cond_branch}
     (nil)
 -> 257)
;;  succ:       3
;;              44 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 126
(note 261 260 262 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 44 (set (reg:SI 3 r3 [orig:126 _19 ] [126])
        (const_int 65 [0x41])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":129 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 1, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;;              9 [100.0%] 
;;              11 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              21 [100.0%] 
;;              23 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              33 [100.0%] 
;;              35 [100.0%] 
;;              37 [100.0%] 
;;              39 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 126
;; lr  def 	 0 [r0] 127
(code_label 263 262 264 45 20 (nil) [16 uses])
(note 264 263 269 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 269 264 270 45 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:127 <retval> ] [127])) "../HAL_driver/KEYPAD_DRIVER/keypad.c":130 878 {*thumb2_movsi_insn}
     (nil))
(insn 270 269 335 45 (use (reg/i:SI 0 r0)) "../HAL_driver/KEYPAD_DRIVER/keypad.c":130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 335 270 0 NOTE_INSN_DELETED)
