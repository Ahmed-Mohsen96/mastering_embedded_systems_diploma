
lcd_kepad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000014f8  0000158c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800080  00800080  000015ac  2**0
                  ALLOC
  3 .stab         00002df0  00000000  00000000  000015ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ab4  00000000  00000000  0000439c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00004e50  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001573  00000000  00000000  00004fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b7  00000000  00000000  00006543  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eea  00000000  00000000  00006dfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  00007ce4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000519  00000000  00000000  00008024  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011cd  00000000  00000000  0000853d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000970a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000054 <pstr_inf>:
      54:	49 4e 46                                            INF

00000057 <pstr_inity>:
      57:	49 4e 49 54 59                                      INITY

0000005c <pstr_nan>:
      5c:	4e 41 4e                                            NAN

0000005f <pwr_p10>:
      5f:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      6f:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

00000077 <pwr_m10>:
      77:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      87:	95 95 e6 24 1f b1 4f 0a 00                          ...$..O..

00000090 <__ctors_end>:
      90:	11 24       	eor	r1, r1
      92:	1f be       	out	0x3f, r1	; 63
      94:	cf e5       	ldi	r28, 0x5F	; 95
      96:	d4 e0       	ldi	r29, 0x04	; 4
      98:	de bf       	out	0x3e, r29	; 62
      9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_copy_data>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	a0 e6       	ldi	r26, 0x60	; 96
      a0:	b0 e0       	ldi	r27, 0x00	; 0
      a2:	e8 ef       	ldi	r30, 0xF8	; 248
      a4:	f4 e1       	ldi	r31, 0x14	; 20
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x10>
      a8:	05 90       	lpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 38       	cpi	r26, 0x80	; 128
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0xc>

000000b2 <__do_clear_bss>:
      b2:	10 e0       	ldi	r17, 0x00	; 0
      b4:	a0 e8       	ldi	r26, 0x80	; 128
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a2 38       	cpi	r26, 0x82	; 130
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 2e 03 	call	0x65c	; 0x65c <main>
      c6:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <keypad_init>:
 */ 
#include "kepad.h"
int keypad_row[]={r0,r1,r2,r3};
int keypad_col[]={c0,c1,c2,c3};
void keypad_init(){
	datadir_keypad &=~ ((1<<r0)|(1<<r1)|(1<<r2)|(1<<r3)); //input
      ce:	81 b3       	in	r24, 0x11	; 17
      d0:	80 7f       	andi	r24, 0xF0	; 240
      d2:	81 bb       	out	0x11, r24	; 17
	datadir_keypad |= ((1<<c0)|(1<<c1)|(1<<c2)|(1<<c3));
      d4:	81 b3       	in	r24, 0x11	; 17
      d6:	80 6f       	ori	r24, 0xF0	; 240
      d8:	81 bb       	out	0x11, r24	; 17
	keypad_port =0xff;
      da:	8f ef       	ldi	r24, 0xFF	; 255
      dc:	82 bb       	out	0x12, r24	; 18
}
      de:	08 95       	ret

000000e0 <keypad_getkey>:
char keypad_getkey(){
      e0:	6f 92       	push	r6
      e2:	7f 92       	push	r7
      e4:	8f 92       	push	r8
      e6:	9f 92       	push	r9
      e8:	af 92       	push	r10
      ea:	bf 92       	push	r11
      ec:	cf 92       	push	r12
      ee:	df 92       	push	r13
      f0:	ef 92       	push	r14
      f2:	ff 92       	push	r15
      f4:	0f 93       	push	r16
      f6:	1f 93       	push	r17
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
				}
			}
		}
	}
	
	return 'A';// if no keys ispressed
      fc:	00 e6       	ldi	r16, 0x60	; 96
      fe:	10 e0       	ldi	r17, 0x00	; 0
	datadir_keypad |= ((1<<c0)|(1<<c1)|(1<<c2)|(1<<c3));
	keypad_port =0xff;
}
char keypad_getkey(){
	int i,j;
	for(i=0;i<4;i++)
     100:	c0 e0       	ldi	r28, 0x00	; 0
     102:	d0 e0       	ldi	r29, 0x00	; 0
	{
		keypad_port |= ((1<<keypad_col[0])|(1<<keypad_col[1])|(1<<keypad_col[2])|(1<<keypad_col[3]));
     104:	d8 01       	movw	r26, r16
     106:	61 e0       	ldi	r22, 0x01	; 1
     108:	70 e0       	ldi	r23, 0x00	; 0
     10a:	ee 24       	eor	r14, r14
     10c:	ff 24       	eor	r15, r15
     10e:	68 94       	set
     110:	e1 f8       	bld	r14, 1
     112:	e0 0e       	add	r14, r16
     114:	f1 1e       	adc	r15, r17
     116:	cc 24       	eor	r12, r12
     118:	dd 24       	eor	r13, r13
     11a:	68 94       	set
     11c:	c2 f8       	bld	r12, 2
     11e:	c0 0e       	add	r12, r16
     120:	d1 1e       	adc	r13, r17
     122:	0f 2e       	mov	r0, r31
     124:	f6 e0       	ldi	r31, 0x06	; 6
     126:	af 2e       	mov	r10, r31
     128:	bb 24       	eor	r11, r11
     12a:	f0 2d       	mov	r31, r0
     12c:	a0 0e       	add	r10, r16
     12e:	b1 1e       	adc	r11, r17
		keypad_port &=~(1<<keypad_col[i]);
     130:	0f 2e       	mov	r0, r31
     132:	f8 e6       	ldi	r31, 0x68	; 104
     134:	8f 2e       	mov	r8, r31
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	9f 2e       	mov	r9, r31
     13a:	f0 2d       	mov	r31, r0
		for(j=0;j<4;j++){
     13c:	66 24       	eor	r6, r6
     13e:	77 24       	eor	r7, r7
}
char keypad_getkey(){
	int i,j;
	for(i=0;i<4;i++)
	{
		keypad_port |= ((1<<keypad_col[0])|(1<<keypad_col[1])|(1<<keypad_col[2])|(1<<keypad_col[3]));
     140:	92 b3       	in	r25, 0x12	; 18
     142:	9b 01       	movw	r18, r22
     144:	0c 90       	ld	r0, X
     146:	02 c0       	rjmp	.+4      	; 0x14c <keypad_getkey+0x6c>
     148:	22 0f       	add	r18, r18
     14a:	33 1f       	adc	r19, r19
     14c:	0a 94       	dec	r0
     14e:	e2 f7       	brpl	.-8      	; 0x148 <keypad_getkey+0x68>
     150:	ab 01       	movw	r20, r22
     152:	f7 01       	movw	r30, r14
     154:	00 80       	ld	r0, Z
     156:	02 c0       	rjmp	.+4      	; 0x15c <keypad_getkey+0x7c>
     158:	44 0f       	add	r20, r20
     15a:	55 1f       	adc	r21, r21
     15c:	0a 94       	dec	r0
     15e:	e2 f7       	brpl	.-8      	; 0x158 <keypad_getkey+0x78>
     160:	24 2b       	or	r18, r20
     162:	29 2b       	or	r18, r25
     164:	cb 01       	movw	r24, r22
     166:	f6 01       	movw	r30, r12
     168:	00 80       	ld	r0, Z
     16a:	02 c0       	rjmp	.+4      	; 0x170 <keypad_getkey+0x90>
     16c:	88 0f       	add	r24, r24
     16e:	99 1f       	adc	r25, r25
     170:	0a 94       	dec	r0
     172:	e2 f7       	brpl	.-8      	; 0x16c <keypad_getkey+0x8c>
     174:	82 2b       	or	r24, r18
     176:	9b 01       	movw	r18, r22
     178:	f5 01       	movw	r30, r10
     17a:	00 80       	ld	r0, Z
     17c:	02 c0       	rjmp	.+4      	; 0x182 <keypad_getkey+0xa2>
     17e:	22 0f       	add	r18, r18
     180:	33 1f       	adc	r19, r19
     182:	0a 94       	dec	r0
     184:	e2 f7       	brpl	.-8      	; 0x17e <keypad_getkey+0x9e>
     186:	82 2b       	or	r24, r18
     188:	82 bb       	out	0x12, r24	; 18
		keypad_port &=~(1<<keypad_col[i]);
     18a:	22 b3       	in	r18, 0x12	; 18
     18c:	f8 01       	movw	r30, r16
     18e:	80 81       	ld	r24, Z
     190:	0e 5f       	subi	r16, 0xFE	; 254
     192:	1f 4f       	sbci	r17, 0xFF	; 255
     194:	ab 01       	movw	r20, r22
     196:	02 c0       	rjmp	.+4      	; 0x19c <keypad_getkey+0xbc>
     198:	44 0f       	add	r20, r20
     19a:	55 1f       	adc	r21, r21
     19c:	8a 95       	dec	r24
     19e:	e2 f7       	brpl	.-8      	; 0x198 <keypad_getkey+0xb8>
     1a0:	ca 01       	movw	r24, r20
     1a2:	80 95       	com	r24
     1a4:	28 23       	and	r18, r24
     1a6:	22 bb       	out	0x12, r18	; 18
     1a8:	f4 01       	movw	r30, r8
		for(j=0;j<4;j++){
     1aa:	a3 01       	movw	r20, r6
			if(!(keypad_pin&(1<<keypad_row[j])))// check key pressed
     1ac:	80 b3       	in	r24, 0x10	; 16
     1ae:	20 81       	ld	r18, Z
     1b0:	32 96       	adiw	r30, 0x02	; 2
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	02 2e       	mov	r0, r18
     1b6:	02 c0       	rjmp	.+4      	; 0x1bc <keypad_getkey+0xdc>
     1b8:	95 95       	asr	r25
     1ba:	87 95       	ror	r24
     1bc:	0a 94       	dec	r0
     1be:	e2 f7       	brpl	.-8      	; 0x1b8 <keypad_getkey+0xd8>
     1c0:	80 fd       	sbrc	r24, 0
     1c2:	50 c0       	rjmp	.+160    	; 0x264 <keypad_getkey+0x184>
     1c4:	cb 01       	movw	r24, r22
     1c6:	02 c0       	rjmp	.+4      	; 0x1cc <keypad_getkey+0xec>
     1c8:	88 0f       	add	r24, r24
     1ca:	99 1f       	adc	r25, r25
     1cc:	2a 95       	dec	r18
     1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <keypad_getkey+0xe8>
     1d0:	9c 01       	movw	r18, r24
			{
				while(!(keypad_pin&(1<<keypad_row[j]))); //single press
     1d2:	80 b3       	in	r24, 0x10	; 16
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	82 23       	and	r24, r18
     1d8:	93 23       	and	r25, r19
     1da:	00 97       	sbiw	r24, 0x00	; 0
     1dc:	d1 f3       	breq	.-12     	; 0x1d2 <keypad_getkey+0xf2>
				switch(i)
     1de:	c1 30       	cpi	r28, 0x01	; 1
     1e0:	d1 05       	cpc	r29, r1
     1e2:	d1 f0       	breq	.+52     	; 0x218 <keypad_getkey+0x138>
     1e4:	c2 30       	cpi	r28, 0x02	; 2
     1e6:	d1 05       	cpc	r29, r1
     1e8:	1c f4       	brge	.+6      	; 0x1f0 <keypad_getkey+0x110>
     1ea:	20 97       	sbiw	r28, 0x00	; 0
     1ec:	41 f0       	breq	.+16     	; 0x1fe <keypad_getkey+0x11e>
     1ee:	3a c0       	rjmp	.+116    	; 0x264 <keypad_getkey+0x184>
     1f0:	c2 30       	cpi	r28, 0x02	; 2
     1f2:	d1 05       	cpc	r29, r1
     1f4:	f1 f0       	breq	.+60     	; 0x232 <keypad_getkey+0x152>
     1f6:	c3 30       	cpi	r28, 0x03	; 3
     1f8:	d1 05       	cpc	r29, r1
     1fa:	a1 f5       	brne	.+104    	; 0x264 <keypad_getkey+0x184>
     1fc:	27 c0       	rjmp	.+78     	; 0x24c <keypad_getkey+0x16c>
				{
					case 0:
						if(j==0) return '7';
     1fe:	41 15       	cp	r20, r1
     200:	51 05       	cpc	r21, r1
     202:	e9 f1       	breq	.+122    	; 0x27e <keypad_getkey+0x19e>
						else if(j==1) return '4';
     204:	41 30       	cpi	r20, 0x01	; 1
     206:	51 05       	cpc	r21, r1
     208:	e1 f1       	breq	.+120    	; 0x282 <keypad_getkey+0x1a2>
						else if(j==2) return '1';
     20a:	42 30       	cpi	r20, 0x02	; 2
     20c:	51 05       	cpc	r21, r1
     20e:	d9 f1       	breq	.+118    	; 0x286 <keypad_getkey+0x1a6>
						else if(j==3) return '?';
     210:	43 30       	cpi	r20, 0x03	; 3
     212:	51 05       	cpc	r21, r1
     214:	39 f5       	brne	.+78     	; 0x264 <keypad_getkey+0x184>
     216:	39 c0       	rjmp	.+114    	; 0x28a <keypad_getkey+0x1aa>
						break;
					case 1:
						if(j==0) return '8';
     218:	41 15       	cp	r20, r1
     21a:	51 05       	cpc	r21, r1
     21c:	c1 f1       	breq	.+112    	; 0x28e <keypad_getkey+0x1ae>
						else if(j==1) return '5';
     21e:	41 30       	cpi	r20, 0x01	; 1
     220:	51 05       	cpc	r21, r1
     222:	b9 f1       	breq	.+110    	; 0x292 <keypad_getkey+0x1b2>
						else if(j==2) return '2';
     224:	42 30       	cpi	r20, 0x02	; 2
     226:	51 05       	cpc	r21, r1
     228:	b1 f1       	breq	.+108    	; 0x296 <keypad_getkey+0x1b6>
						else if(j==3) return '0';
     22a:	43 30       	cpi	r20, 0x03	; 3
     22c:	51 05       	cpc	r21, r1
     22e:	d1 f4       	brne	.+52     	; 0x264 <keypad_getkey+0x184>
     230:	34 c0       	rjmp	.+104    	; 0x29a <keypad_getkey+0x1ba>
						break;
					case 2:
						if(j==0) return '9';
     232:	41 15       	cp	r20, r1
     234:	51 05       	cpc	r21, r1
     236:	99 f1       	breq	.+102    	; 0x29e <keypad_getkey+0x1be>
						else if(j==1) return '6';
     238:	41 30       	cpi	r20, 0x01	; 1
     23a:	51 05       	cpc	r21, r1
     23c:	91 f1       	breq	.+100    	; 0x2a2 <keypad_getkey+0x1c2>
						else if(j==2) return '3';
     23e:	42 30       	cpi	r20, 0x02	; 2
     240:	51 05       	cpc	r21, r1
     242:	89 f1       	breq	.+98     	; 0x2a6 <keypad_getkey+0x1c6>
						else if(j==3) return '=';
     244:	43 30       	cpi	r20, 0x03	; 3
     246:	51 05       	cpc	r21, r1
     248:	69 f4       	brne	.+26     	; 0x264 <keypad_getkey+0x184>
     24a:	2f c0       	rjmp	.+94     	; 0x2aa <keypad_getkey+0x1ca>
						break;
					case 3:
						if(j==0) return '/';
     24c:	41 15       	cp	r20, r1
     24e:	51 05       	cpc	r21, r1
     250:	71 f1       	breq	.+92     	; 0x2ae <keypad_getkey+0x1ce>
						else if(j==1) return '*';
     252:	41 30       	cpi	r20, 0x01	; 1
     254:	51 05       	cpc	r21, r1
     256:	69 f1       	breq	.+90     	; 0x2b2 <keypad_getkey+0x1d2>
						else if(j==2) return '-';
     258:	42 30       	cpi	r20, 0x02	; 2
     25a:	51 05       	cpc	r21, r1
     25c:	61 f1       	breq	.+88     	; 0x2b6 <keypad_getkey+0x1d6>
						else if(j==3) return '+';
     25e:	43 30       	cpi	r20, 0x03	; 3
     260:	51 05       	cpc	r21, r1
     262:	59 f1       	breq	.+86     	; 0x2ba <keypad_getkey+0x1da>
	int i,j;
	for(i=0;i<4;i++)
	{
		keypad_port |= ((1<<keypad_col[0])|(1<<keypad_col[1])|(1<<keypad_col[2])|(1<<keypad_col[3]));
		keypad_port &=~(1<<keypad_col[i]);
		for(j=0;j<4;j++){
     264:	4f 5f       	subi	r20, 0xFF	; 255
     266:	5f 4f       	sbci	r21, 0xFF	; 255
     268:	44 30       	cpi	r20, 0x04	; 4
     26a:	51 05       	cpc	r21, r1
     26c:	09 f0       	breq	.+2      	; 0x270 <keypad_getkey+0x190>
     26e:	9e cf       	rjmp	.-196    	; 0x1ac <keypad_getkey+0xcc>
	datadir_keypad |= ((1<<c0)|(1<<c1)|(1<<c2)|(1<<c3));
	keypad_port =0xff;
}
char keypad_getkey(){
	int i,j;
	for(i=0;i<4;i++)
     270:	21 96       	adiw	r28, 0x01	; 1
     272:	c4 30       	cpi	r28, 0x04	; 4
     274:	d1 05       	cpc	r29, r1
     276:	09 f0       	breq	.+2      	; 0x27a <keypad_getkey+0x19a>
     278:	63 cf       	rjmp	.-314    	; 0x140 <keypad_getkey+0x60>
				}
			}
		}
	}
	
	return 'A';// if no keys ispressed
     27a:	81 e4       	ldi	r24, 0x41	; 65
     27c:	1f c0       	rjmp	.+62     	; 0x2bc <keypad_getkey+0x1dc>
			{
				while(!(keypad_pin&(1<<keypad_row[j]))); //single press
				switch(i)
				{
					case 0:
						if(j==0) return '7';
     27e:	87 e3       	ldi	r24, 0x37	; 55
     280:	1d c0       	rjmp	.+58     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==1) return '4';
     282:	84 e3       	ldi	r24, 0x34	; 52
     284:	1b c0       	rjmp	.+54     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==2) return '1';
     286:	81 e3       	ldi	r24, 0x31	; 49
     288:	19 c0       	rjmp	.+50     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==3) return '?';
     28a:	8f e3       	ldi	r24, 0x3F	; 63
     28c:	17 c0       	rjmp	.+46     	; 0x2bc <keypad_getkey+0x1dc>
						break;
					case 1:
						if(j==0) return '8';
     28e:	88 e3       	ldi	r24, 0x38	; 56
     290:	15 c0       	rjmp	.+42     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==1) return '5';
     292:	85 e3       	ldi	r24, 0x35	; 53
     294:	13 c0       	rjmp	.+38     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==2) return '2';
     296:	82 e3       	ldi	r24, 0x32	; 50
     298:	11 c0       	rjmp	.+34     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==3) return '0';
     29a:	80 e3       	ldi	r24, 0x30	; 48
     29c:	0f c0       	rjmp	.+30     	; 0x2bc <keypad_getkey+0x1dc>
						break;
					case 2:
						if(j==0) return '9';
     29e:	89 e3       	ldi	r24, 0x39	; 57
     2a0:	0d c0       	rjmp	.+26     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==1) return '6';
     2a2:	86 e3       	ldi	r24, 0x36	; 54
     2a4:	0b c0       	rjmp	.+22     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==2) return '3';
     2a6:	83 e3       	ldi	r24, 0x33	; 51
     2a8:	09 c0       	rjmp	.+18     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==3) return '=';
     2aa:	8d e3       	ldi	r24, 0x3D	; 61
     2ac:	07 c0       	rjmp	.+14     	; 0x2bc <keypad_getkey+0x1dc>
						break;
					case 3:
						if(j==0) return '/';
     2ae:	8f e2       	ldi	r24, 0x2F	; 47
     2b0:	05 c0       	rjmp	.+10     	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==1) return '*';
     2b2:	8a e2       	ldi	r24, 0x2A	; 42
     2b4:	03 c0       	rjmp	.+6      	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==2) return '-';
     2b6:	8d e2       	ldi	r24, 0x2D	; 45
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <keypad_getkey+0x1dc>
						else if(j==3) return '+';
     2ba:	8b e2       	ldi	r24, 0x2B	; 43
			}
		}
	}
	
	return 'A';// if no keys ispressed
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	cf 90       	pop	r12
     2cc:	bf 90       	pop	r11
     2ce:	af 90       	pop	r10
     2d0:	9f 90       	pop	r9
     2d2:	8f 90       	pop	r8
     2d4:	7f 90       	pop	r7
     2d6:	6f 90       	pop	r6
     2d8:	08 95       	ret

000002da <lcd_kick>:
	datadir_lcd_port=0xff;
	lcd_control_port &=~(1<<RW_switch);//write
	
}
void lcd_kick(void){
	lcd_control_port &=~(1<<EN_switch);
     2da:	c3 98       	cbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2dc:	83 ed       	ldi	r24, 0xD3	; 211
     2de:	90 e3       	ldi	r25, 0x30	; 48
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <lcd_kick+0x6>
     2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <lcd_kick+0xc>
     2e6:	00 00       	nop
	
	_delay_ms(50);
	lcd_control_port |=(1<<EN_switch);
     2e8:	c3 9a       	sbi	0x18, 3	; 24
	
}
     2ea:	08 95       	ret

000002ec <lcd_is_busy>:
		lcd_send_command(Entry_Mode);
		lcd_send_command(lcd_begin_f_raw);
		lcd_send_command(Display_on_Cursor_blinking);
}
void lcd_is_busy(void){
	datadir_lcd_port =0x00; //input
     2ec:	1a ba       	out	0x1a, r1	; 26
	lcd_control_port |= (1<<RW_switch); //read
     2ee:	c2 9a       	sbi	0x18, 2	; 24
	lcd_control_port &=~(1<<RS_switch);
     2f0:	c1 98       	cbi	0x18, 1	; 24
	lcd_kick();
     2f2:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_kick>
	datadir_lcd_port=0xff;
     2f6:	8f ef       	ldi	r24, 0xFF	; 255
     2f8:	8a bb       	out	0x1a, r24	; 26
	lcd_control_port &=~(1<<RW_switch);//write
     2fa:	c2 98       	cbi	0x18, 2	; 24
	
}
     2fc:	08 95       	ret

000002fe <lcd_send_command>:
	
	_delay_ms(50);
	lcd_control_port |=(1<<EN_switch);
	
}
void lcd_send_command(unsigned char command){
     2fe:	cf 93       	push	r28
     300:	c8 2f       	mov	r28, r24
	#ifdef eight_bit_mode
		lcd_is_busy();
     302:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_is_busy>
		lcd_data_port =command;
     306:	cb bb       	out	0x1b, r28	; 27
		lcd_control_port &=~ ((1<<RW_switch)|(1<<RS_switch));
     308:	88 b3       	in	r24, 0x18	; 24
     30a:	89 7f       	andi	r24, 0xF9	; 249
     30c:	88 bb       	out	0x18, r24	; 24
		lcd_kick();
     30e:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_kick>
	lcd_kick();
	lcd_data_port =(lcd_data_port&0x0f)|(command<<4);
	lcd_control_port &=~ ((1<<RW_switch)|(1<<RS_switch));
	lcd_kick();
	#endif
}
     312:	cf 91       	pop	r28
     314:	08 95       	ret

00000316 <lcd_send_char>:
void lcd_send_char(unsigned char character){
     316:	cf 93       	push	r28
     318:	c8 2f       	mov	r28, r24
	#ifdef eight_bit_mode
	lcd_is_busy();
     31a:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_is_busy>
	lcd_data_port =character;
     31e:	cb bb       	out	0x1b, r28	; 27
	lcd_control_port |= (1<<RS_switch);
     320:	c1 9a       	sbi	0x18, 1	; 24
	lcd_control_port &=~(1<<RW_switch); //write
     322:	c2 98       	cbi	0x18, 2	; 24
	
	
	lcd_kick();
     324:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_kick>
	lcd_data_port =(lcd_data_port&0x0f)|(character<<4);
	lcd_control_port |= ((1<<RS_switch));
	lcd_control_port &=~(1<<RW_switch);
	lcd_kick();
	#endif
}
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <lcd_clear_screen>:
	
	
}

void lcd_clear_screen(){
	lcd_send_command(Clear_Display);
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
	
}
     332:	08 95       	ret

00000334 <lcd_init>:
     334:	87 e8       	ldi	r24, 0x87	; 135
     336:	93 e1       	ldi	r25, 0x13	; 19
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_init+0x4>
     33c:	00 c0       	rjmp	.+0      	; 0x33e <lcd_init+0xa>
     33e:	00 00       	nop
#include "lcd.h"

void lcd_init(void){
	_delay_ms(20);
	//lcd_is_busy();
	datadir_lcd_control_port |= ((1<<EN_switch)|(1<<RS_switch)|(1<<RW_switch));//output
     340:	87 b3       	in	r24, 0x17	; 23
     342:	8e 60       	ori	r24, 0x0E	; 14
     344:	87 bb       	out	0x17, r24	; 23
	lcd_control_port &=~((1<<EN_switch)|(1<<RW_switch)|(1<<RS_switch)); //set to 0
     346:	88 b3       	in	r24, 0x18	; 24
     348:	81 7f       	andi	r24, 0xF1	; 241
     34a:	88 bb       	out	0x18, r24	; 24
	
	datadir_lcd_port =0xff; //output
     34c:	8f ef       	ldi	r24, 0xFF	; 255
     34e:	8a bb       	out	0x1a, r24	; 26
     350:	85 ea       	ldi	r24, 0xA5	; 165
     352:	9e e0       	ldi	r25, 0x0E	; 14
     354:	01 97       	sbiw	r24, 0x01	; 1
     356:	f1 f7       	brne	.-4      	; 0x354 <lcd_init+0x20>
     358:	00 c0       	rjmp	.+0      	; 0x35a <lcd_init+0x26>
     35a:	00 00       	nop
	_delay_ms(15);
	
	lcd_clear_screen();
     35c:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_clear_screen>
	
	#ifdef eight_bit_mode
		lcd_send_command(Set_8_bit);
     360:	88 e3       	ldi	r24, 0x38	; 56
     362:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
	#endif
	#ifdef four_bit_mode
		//lcd_send_command(0x02);
		lcd_send_command(Set_4_bit);
	#endif
		lcd_send_command(Entry_Mode);
     366:	86 e0       	ldi	r24, 0x06	; 6
     368:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
		lcd_send_command(lcd_begin_f_raw);
     36c:	80 e8       	ldi	r24, 0x80	; 128
     36e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
		lcd_send_command(Display_on_Cursor_blinking);
     372:	8f e0       	ldi	r24, 0x0F	; 15
     374:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
}
     378:	08 95       	ret

0000037a <lcd_GotoXY>:
void lcd_clear_screen(){
	lcd_send_command(Clear_Display);
	
}
void lcd_GotoXY(unsigned char line ,unsigned char position){
	if(line ==0)
     37a:	88 23       	and	r24, r24
     37c:	39 f4       	brne	.+14     	; 0x38c <lcd_GotoXY+0x12>
	{
		if(position<16 && position >=0)
     37e:	60 31       	cpi	r22, 0x10	; 16
     380:	68 f4       	brcc	.+26     	; 0x39c <lcd_GotoXY+0x22>
		{
			lcd_send_command(lcd_begin_f_raw+position);
     382:	86 2f       	mov	r24, r22
     384:	80 58       	subi	r24, 0x80	; 128
     386:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
     38a:	08 95       	ret
		}
	}
	else if(line ==1)
     38c:	81 30       	cpi	r24, 0x01	; 1
     38e:	31 f4       	brne	.+12     	; 0x39c <lcd_GotoXY+0x22>
	{
		if(position<16 && position >=0)
     390:	60 31       	cpi	r22, 0x10	; 16
     392:	20 f4       	brcc	.+8      	; 0x39c <lcd_GotoXY+0x22>
		{
			lcd_send_command(lcd_begin_S_raw+position);
     394:	86 2f       	mov	r24, r22
     396:	80 54       	subi	r24, 0x40	; 64
     398:	0e 94 7f 01 	call	0x2fe	; 0x2fe <lcd_send_command>
     39c:	08 95       	ret

0000039e <lcd_send_string>:
	lcd_control_port |= ((1<<RS_switch));
	lcd_control_port &=~(1<<RW_switch);
	lcd_kick();
	#endif
}
void lcd_send_string(char *string){
     39e:	ef 92       	push	r14
     3a0:	ff 92       	push	r15
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
	
	//lcd_is_busy();
	int count=0; //count how much char on line 
     3aa:	08 2f       	mov	r16, r24
     3ac:	19 2f       	mov	r17, r25
     3ae:	c0 e0       	ldi	r28, 0x00	; 0
     3b0:	d0 e0       	ldi	r29, 0x00	; 0
		}
		else if(count ==32||count ==33)
		{
			lcd_clear_screen();
			lcd_GotoXY(0,0);
			count =0;
     3b2:	ee 24       	eor	r14, r14
     3b4:	ff 24       	eor	r15, r15
}
void lcd_send_string(char *string){
	
	//lcd_is_busy();
	int count=0; //count how much char on line 
	while(*string>0)
     3b6:	17 c0       	rjmp	.+46     	; 0x3e6 <lcd_send_string+0x48>
	{
		count ++;
     3b8:	21 96       	adiw	r28, 0x01	; 1
		lcd_send_char(*string++);
     3ba:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_send_char>
		if(count==16)
     3be:	c0 31       	cpi	r28, 0x10	; 16
     3c0:	d1 05       	cpc	r29, r1
     3c2:	29 f4       	brne	.+10     	; 0x3ce <lcd_send_string+0x30>
		{
			lcd_GotoXY(1,0);
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	0e 94 bd 01 	call	0x37a	; 0x37a <lcd_GotoXY>
     3cc:	0c c0       	rjmp	.+24     	; 0x3e6 <lcd_send_string+0x48>
		}
		else if(count ==32||count ==33)
     3ce:	ce 01       	movw	r24, r28
     3d0:	80 97       	sbiw	r24, 0x20	; 32
     3d2:	82 30       	cpi	r24, 0x02	; 2
     3d4:	91 05       	cpc	r25, r1
     3d6:	38 f4       	brcc	.+14     	; 0x3e6 <lcd_send_string+0x48>
		{
			lcd_clear_screen();
     3d8:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_clear_screen>
			lcd_GotoXY(0,0);
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	60 e0       	ldi	r22, 0x00	; 0
     3e0:	0e 94 bd 01 	call	0x37a	; 0x37a <lcd_GotoXY>
			count =0;
     3e4:	e7 01       	movw	r28, r14
}
void lcd_send_string(char *string){
	
	//lcd_is_busy();
	int count=0; //count how much char on line 
	while(*string>0)
     3e6:	f8 01       	movw	r30, r16
     3e8:	81 91       	ld	r24, Z+
     3ea:	8f 01       	movw	r16, r30
     3ec:	88 23       	and	r24, r24
     3ee:	21 f7       	brne	.-56     	; 0x3b8 <lcd_send_string+0x1a>
			count =0;
		}
	}
	
	
}
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	0f 91       	pop	r16
     3f8:	ff 90       	pop	r15
     3fa:	ef 90       	pop	r14
     3fc:	08 95       	ret

000003fe <lcd_display_number>:
		{
			lcd_send_command(lcd_begin_S_raw+position);
		}
	}
}
void lcd_display_number(int num){
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	cd b7       	in	r28, 0x3d	; 61
     408:	de b7       	in	r29, 0x3e	; 62
     40a:	27 97       	sbiw	r28, 0x07	; 7
     40c:	0f b6       	in	r0, 0x3f	; 63
     40e:	f8 94       	cli
     410:	de bf       	out	0x3e, r29	; 62
     412:	0f be       	out	0x3f, r0	; 63
     414:	cd bf       	out	0x3d, r28	; 61
	char str[7];
	sprintf(str,"%d",num);
     416:	00 d0       	rcall	.+0      	; 0x418 <lcd_display_number+0x1a>
     418:	00 d0       	rcall	.+0      	; 0x41a <lcd_display_number+0x1c>
     41a:	00 d0       	rcall	.+0      	; 0x41c <lcd_display_number+0x1e>
     41c:	ed b7       	in	r30, 0x3d	; 61
     41e:	fe b7       	in	r31, 0x3e	; 62
     420:	31 96       	adiw	r30, 0x01	; 1
     422:	8e 01       	movw	r16, r28
     424:	0f 5f       	subi	r16, 0xFF	; 255
     426:	1f 4f       	sbci	r17, 0xFF	; 255
     428:	ad b7       	in	r26, 0x3d	; 61
     42a:	be b7       	in	r27, 0x3e	; 62
     42c:	12 96       	adiw	r26, 0x02	; 2
     42e:	1c 93       	st	X, r17
     430:	0e 93       	st	-X, r16
     432:	11 97       	sbiw	r26, 0x01	; 1
     434:	20 e7       	ldi	r18, 0x70	; 112
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	33 83       	std	Z+3, r19	; 0x03
     43a:	22 83       	std	Z+2, r18	; 0x02
     43c:	95 83       	std	Z+5, r25	; 0x05
     43e:	84 83       	std	Z+4, r24	; 0x04
     440:	0e 94 16 06 	call	0xc2c	; 0xc2c <sprintf>
	lcd_send_string(str);
     444:	8d b7       	in	r24, 0x3d	; 61
     446:	9e b7       	in	r25, 0x3e	; 62
     448:	06 96       	adiw	r24, 0x06	; 6
     44a:	0f b6       	in	r0, 0x3f	; 63
     44c:	f8 94       	cli
     44e:	9e bf       	out	0x3e, r25	; 62
     450:	0f be       	out	0x3f, r0	; 63
     452:	8d bf       	out	0x3d, r24	; 61
     454:	c8 01       	movw	r24, r16
     456:	0e 94 cf 01 	call	0x39e	; 0x39e <lcd_send_string>
}
     45a:	27 96       	adiw	r28, 0x07	; 7
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
     464:	cd bf       	out	0x3d, r28	; 61
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	08 95       	ret

00000470 <lcd_display_real_number>:
void lcd_display_real_number(double number){
     470:	8f 92       	push	r8
     472:	9f 92       	push	r9
     474:	af 92       	push	r10
     476:	bf 92       	push	r11
     478:	cf 92       	push	r12
     47a:	df 92       	push	r13
     47c:	ef 92       	push	r14
     47e:	ff 92       	push	r15
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	cd b7       	in	r28, 0x3d	; 61
     48a:	de b7       	in	r29, 0x3e	; 62
     48c:	60 97       	sbiw	r28, 0x10	; 16
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	6b 01       	movw	r12, r22
     49a:	7c 01       	movw	r14, r24
	char str[16];
	char *tmpsign=(number<0)?"-":"";
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	a9 01       	movw	r20, r18
     4a2:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
     4a6:	88 23       	and	r24, r24
     4a8:	5c f4       	brge	.+22     	; 0x4c0 <lcd_display_real_number+0x50>
	float tempvalue=(number<0)?-number:number;
     4aa:	f7 fa       	bst	r15, 7
     4ac:	f0 94       	com	r15
     4ae:	f7 f8       	bld	r15, 7
     4b0:	f0 94       	com	r15
	sprintf(str,"%d",num);
	lcd_send_string(str);
}
void lcd_display_real_number(double number){
	char str[16];
	char *tmpsign=(number<0)?"-":"";
     4b2:	0f 2e       	mov	r0, r31
     4b4:	f3 e7       	ldi	r31, 0x73	; 115
     4b6:	8f 2e       	mov	r8, r31
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	9f 2e       	mov	r9, r31
     4bc:	f0 2d       	mov	r31, r0
     4be:	06 c0       	rjmp	.+12     	; 0x4cc <lcd_display_real_number+0x5c>
     4c0:	0f 2e       	mov	r0, r31
     4c2:	f5 e7       	ldi	r31, 0x75	; 117
     4c4:	8f 2e       	mov	r8, r31
     4c6:	f0 e0       	ldi	r31, 0x00	; 0
     4c8:	9f 2e       	mov	r9, r31
     4ca:	f0 2d       	mov	r31, r0
	float tempvalue=(number<0)?-number:number;
	
	int tmpint1=tempvalue;
     4cc:	c7 01       	movw	r24, r14
     4ce:	b6 01       	movw	r22, r12
     4d0:	0e 94 a6 04 	call	0x94c	; 0x94c <__fixsfsi>
     4d4:	dc 01       	movw	r26, r24
     4d6:	cb 01       	movw	r24, r22
	float tmpfrac= tempvalue - tmpint1;
	int tmpint2=tmpfrac * 10000;
	
	sprintf(str,"%s%d.%04d",tmpsign,tmpint1,tmpint2);
     4d8:	2d b7       	in	r18, 0x3d	; 61
     4da:	3e b7       	in	r19, 0x3e	; 62
     4dc:	2a 50       	subi	r18, 0x0A	; 10
     4de:	30 40       	sbci	r19, 0x00	; 0
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	f8 94       	cli
     4e4:	3e bf       	out	0x3e, r19	; 62
     4e6:	0f be       	out	0x3f, r0	; 63
     4e8:	2d bf       	out	0x3d, r18	; 61
     4ea:	0d b7       	in	r16, 0x3d	; 61
     4ec:	1e b7       	in	r17, 0x3e	; 62
     4ee:	0f 5f       	subi	r16, 0xFF	; 255
     4f0:	1f 4f       	sbci	r17, 0xFF	; 255
     4f2:	5e 01       	movw	r10, r28
     4f4:	08 94       	sec
     4f6:	a1 1c       	adc	r10, r1
     4f8:	b1 1c       	adc	r11, r1
     4fa:	ed b7       	in	r30, 0x3d	; 61
     4fc:	fe b7       	in	r31, 0x3e	; 62
     4fe:	b2 82       	std	Z+2, r11	; 0x02
     500:	a1 82       	std	Z+1, r10	; 0x01
     502:	26 e7       	ldi	r18, 0x76	; 118
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	f8 01       	movw	r30, r16
     508:	33 83       	std	Z+3, r19	; 0x03
     50a:	22 83       	std	Z+2, r18	; 0x02
     50c:	95 82       	std	Z+5, r9	; 0x05
     50e:	84 82       	std	Z+4, r8	; 0x04
     510:	97 83       	std	Z+7, r25	; 0x07
     512:	86 83       	std	Z+6, r24	; 0x06
	char str[16];
	char *tmpsign=(number<0)?"-":"";
	float tempvalue=(number<0)?-number:number;
	
	int tmpint1=tempvalue;
	float tmpfrac= tempvalue - tmpint1;
     514:	9c 01       	movw	r18, r24
     516:	b9 01       	movw	r22, r18
     518:	88 27       	eor	r24, r24
     51a:	77 fd       	sbrc	r23, 7
     51c:	80 95       	com	r24
     51e:	98 2f       	mov	r25, r24
     520:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__floatsisf>
     524:	9b 01       	movw	r18, r22
     526:	ac 01       	movw	r20, r24
     528:	c7 01       	movw	r24, r14
     52a:	b6 01       	movw	r22, r12
     52c:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__subsf3>
	int tmpint2=tmpfrac * 10000;
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e4       	ldi	r19, 0x40	; 64
     534:	4c e1       	ldi	r20, 0x1C	; 28
     536:	56 e4       	ldi	r21, 0x46	; 70
     538:	0e 94 89 05 	call	0xb12	; 0xb12 <__mulsf3>
     53c:	0e 94 a6 04 	call	0x94c	; 0x94c <__fixsfsi>
     540:	dc 01       	movw	r26, r24
     542:	cb 01       	movw	r24, r22
	
	sprintf(str,"%s%d.%04d",tmpsign,tmpint1,tmpint2);
     544:	f8 01       	movw	r30, r16
     546:	91 87       	std	Z+9, r25	; 0x09
     548:	80 87       	std	Z+8, r24	; 0x08
     54a:	0e 94 16 06 	call	0xc2c	; 0xc2c <sprintf>
	lcd_send_string(str);
     54e:	2d b7       	in	r18, 0x3d	; 61
     550:	3e b7       	in	r19, 0x3e	; 62
     552:	26 5f       	subi	r18, 0xF6	; 246
     554:	3f 4f       	sbci	r19, 0xFF	; 255
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	f8 94       	cli
     55a:	3e bf       	out	0x3e, r19	; 62
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	2d bf       	out	0x3d, r18	; 61
     560:	c5 01       	movw	r24, r10
     562:	0e 94 cf 01 	call	0x39e	; 0x39e <lcd_send_string>
     566:	60 96       	adiw	r28, 0x10	; 16
     568:	0f b6       	in	r0, 0x3f	; 63
     56a:	f8 94       	cli
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	0f be       	out	0x3f, r0	; 63
     570:	cd bf       	out	0x3d, r28	; 61
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	ff 90       	pop	r15
     57c:	ef 90       	pop	r14
     57e:	df 90       	pop	r13
     580:	cf 90       	pop	r12
     582:	bf 90       	pop	r11
     584:	af 90       	pop	r10
     586:	9f 90       	pop	r9
     588:	8f 90       	pop	r8
     58a:	08 95       	ret

0000058c <calculate>:

#include "lcd.h"
#include "kepad.h"
#include <string.h>
#include <stdlib.h>
void calculate(char op1[],char op2[],char process){
     58c:	8f 92       	push	r8
     58e:	9f 92       	push	r9
     590:	af 92       	push	r10
     592:	bf 92       	push	r11
     594:	cf 92       	push	r12
     596:	df 92       	push	r13
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	7c 01       	movw	r14, r24
     5a6:	6b 01       	movw	r12, r22
     5a8:	c4 2f       	mov	r28, r20
	lcd_GotoXY(2,0);
     5aa:	82 e0       	ldi	r24, 0x02	; 2
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	0e 94 bd 01 	call	0x37a	; 0x37a <lcd_GotoXY>
	if(process == '+'){
     5b2:	cb 32       	cpi	r28, 0x2B	; 43
     5b4:	61 f4       	brne	.+24     	; 0x5ce <calculate+0x42>
		int num = atoi(op1) + atoi(op2);
     5b6:	c7 01       	movw	r24, r14
     5b8:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
     5bc:	8c 01       	movw	r16, r24
     5be:	c6 01       	movw	r24, r12
     5c0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
		lcd_display_number(num);
     5c4:	80 0f       	add	r24, r16
     5c6:	91 1f       	adc	r25, r17
     5c8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_display_number>
     5cc:	24 c0       	rjmp	.+72     	; 0x616 <calculate+0x8a>
	}
	if(process == '-'){
     5ce:	cd 32       	cpi	r28, 0x2D	; 45
     5d0:	71 f4       	brne	.+28     	; 0x5ee <calculate+0x62>
		int num = atoi(op1) - atoi(op2);
     5d2:	c7 01       	movw	r24, r14
     5d4:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
     5d8:	ec 01       	movw	r28, r24
     5da:	c6 01       	movw	r24, r12
     5dc:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
		lcd_display_number(num);
     5e0:	9e 01       	movw	r18, r28
     5e2:	28 1b       	sub	r18, r24
     5e4:	39 0b       	sbc	r19, r25
     5e6:	c9 01       	movw	r24, r18
     5e8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_display_number>
     5ec:	2a c0       	rjmp	.+84     	; 0x642 <calculate+0xb6>
	}
	if(process == '*'){
     5ee:	ca 32       	cpi	r28, 0x2A	; 42
     5f0:	91 f4       	brne	.+36     	; 0x616 <calculate+0x8a>
		int num = atoi(op1) * atoi(op2);
     5f2:	c7 01       	movw	r24, r14
     5f4:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
     5f8:	ec 01       	movw	r28, r24
     5fa:	c6 01       	movw	r24, r12
     5fc:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <atoi>
		lcd_display_number(num);
     600:	9c 01       	movw	r18, r24
     602:	c2 9f       	mul	r28, r18
     604:	c0 01       	movw	r24, r0
     606:	c3 9f       	mul	r28, r19
     608:	90 0d       	add	r25, r0
     60a:	d2 9f       	mul	r29, r18
     60c:	90 0d       	add	r25, r0
     60e:	11 24       	eor	r1, r1
     610:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_display_number>
     614:	16 c0       	rjmp	.+44     	; 0x642 <calculate+0xb6>
	}
	if(process == '/'){
     616:	cf 32       	cpi	r28, 0x2F	; 47
     618:	a1 f4       	brne	.+40     	; 0x642 <calculate+0xb6>
		float num = atof(op1) / atof(op2);
     61a:	c7 01       	movw	r24, r14
     61c:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <atof>
     620:	4b 01       	movw	r8, r22
     622:	5c 01       	movw	r10, r24
     624:	c6 01       	movw	r24, r12
     626:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <atof>
     62a:	9b 01       	movw	r18, r22
     62c:	ac 01       	movw	r20, r24
     62e:	c5 01       	movw	r24, r10
     630:	b4 01       	movw	r22, r8
     632:	0e 94 3e 04 	call	0x87c	; 0x87c <__divsf3>
		lcd_display_number(num);
     636:	0e 94 a6 04 	call	0x94c	; 0x94c <__fixsfsi>
     63a:	dc 01       	movw	r26, r24
     63c:	cb 01       	movw	r24, r22
     63e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_display_number>
	}
	
}
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	bf 90       	pop	r11
     654:	af 90       	pop	r10
     656:	9f 90       	pop	r9
     658:	8f 90       	pop	r8
     65a:	08 95       	ret

0000065c <main>:
int main(void)
{
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	cd b7       	in	r28, 0x3d	; 61
     662:	de b7       	in	r29, 0x3e	; 62
     664:	a0 97       	sbiw	r28, 0x20	; 32
     666:	0f b6       	in	r0, 0x3f	; 63
     668:	f8 94       	cli
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	cd bf       	out	0x3d, r28	; 61
	char keypad_pressed;
	lcd_init();
     670:	0e 94 9a 01 	call	0x334	; 0x334 <lcd_init>
	keypad_init();
     674:	0e 94 67 00 	call	0xce	; 0xce <keypad_init>
char operand1[16]={};
     678:	80 e1       	ldi	r24, 0x10	; 16
     67a:	fe 01       	movw	r30, r28
     67c:	31 96       	adiw	r30, 0x01	; 1
     67e:	df 01       	movw	r26, r30
     680:	98 2f       	mov	r25, r24
     682:	1d 92       	st	X+, r1
     684:	9a 95       	dec	r25
     686:	e9 f7       	brne	.-6      	; 0x682 <main+0x26>
char operand2[16] ={};
     688:	fe 01       	movw	r30, r28
     68a:	71 96       	adiw	r30, 0x11	; 17
     68c:	df 01       	movw	r26, r30
     68e:	1d 92       	st	X+, r1
     690:	8a 95       	dec	r24
     692:	e9 f7       	brne	.-6      	; 0x68e <main+0x32>
int count1 =0;
int count2 =0;
char process;
int flag=0;
     694:	cc 24       	eor	r12, r12
     696:	dd 24       	eor	r13, r13
	lcd_init();
	keypad_init();
char operand1[16]={};
char operand2[16] ={};
int count1 =0;
int count2 =0;
     698:	22 24       	eor	r2, r2
     69a:	33 24       	eor	r3, r3
	char keypad_pressed;
	lcd_init();
	keypad_init();
char operand1[16]={};
char operand2[16] ={};
int count1 =0;
     69c:	66 24       	eor	r6, r6
     69e:	77 24       	eor	r7, r7
				count1=0;
				count2=0;
				flag=0;
				break;
			default:
				 if((keypad_pressed == '+') | (keypad_pressed == '-')| (keypad_pressed == '*')|(keypad_pressed == '/')){
     6a0:	aa 24       	eor	r10, r10
     6a2:	bb 24       	eor	r11, r11
     6a4:	a3 94       	inc	r10
     6a6:	01 e0       	ldi	r16, 0x01	; 1
						 count1++;
					 }
					 else if(flag == 1){
						 lcd_send_char(keypad_pressed);
						 _delay_ms(1);
						 operand2[count2] = keypad_pressed;
     6a8:	4f 01       	movw	r8, r30
					 lcd_send_char(keypad_pressed);
					 _delay_ms(1);
					 calculate(operand1,operand2,process);
					 count1 =0;
					 count2=0;
					 flag=0;
     6aa:	ee 24       	eor	r14, r14
     6ac:	ff 24       	eor	r15, r15
				count1=0;
				count2=0;
				flag=0;
				break;
			default:
				 if((keypad_pressed == '+') | (keypad_pressed == '-')| (keypad_pressed == '*')|(keypad_pressed == '/')){
     6ae:	55 24       	eor	r5, r5
int count2 =0;
char process;
int flag=0;
    while(1)
    {
		keypad_pressed=keypad_getkey();
     6b0:	0e 94 70 00 	call	0xe0	; 0xe0 <keypad_getkey>
     6b4:	18 2f       	mov	r17, r24
		switch(keypad_pressed){
     6b6:	8f 33       	cpi	r24, 0x3F	; 63
     6b8:	19 f0       	breq	.+6      	; 0x6c0 <main+0x64>
     6ba:	81 34       	cpi	r24, 0x41	; 65
     6bc:	81 f4       	brne	.+32     	; 0x6de <main+0x82>
     6be:	f8 cf       	rjmp	.-16     	; 0x6b0 <main+0x54>
			case 'A':
				break;
			case '?':
				lcd_clear_screen();
     6c0:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_clear_screen>
     6c4:	fe 01       	movw	r30, r28
     6c6:	31 96       	adiw	r30, 0x01	; 1
     6c8:	d4 01       	movw	r26, r8
		float num = atof(op1) / atof(op2);
		lcd_display_number(num);
	}
	
}
int main(void)
     6ca:	c4 01       	movw	r24, r8
			case 'A':
				break;
			case '?':
				lcd_clear_screen();
				for(int i=0; i<16; i++){
					operand1[i] ='\0';
     6cc:	11 92       	st	Z+, r1
					operand2[i] ='\0';
     6ce:	1d 92       	st	X+, r1
		switch(keypad_pressed){
			case 'A':
				break;
			case '?':
				lcd_clear_screen();
				for(int i=0; i<16; i++){
     6d0:	e8 17       	cp	r30, r24
     6d2:	f9 07       	cpc	r31, r25
     6d4:	d9 f7       	brne	.-10     	; 0x6cc <main+0x70>
					operand1[i] ='\0';
					operand2[i] ='\0';
				}
				count1=0;
				count2=0;
				flag=0;
     6d6:	67 01       	movw	r12, r14
				for(int i=0; i<16; i++){
					operand1[i] ='\0';
					operand2[i] ='\0';
				}
				count1=0;
				count2=0;
     6d8:	17 01       	movw	r2, r14
				lcd_clear_screen();
				for(int i=0; i<16; i++){
					operand1[i] ='\0';
					operand2[i] ='\0';
				}
				count1=0;
     6da:	37 01       	movw	r6, r14
     6dc:	e9 cf       	rjmp	.-46     	; 0x6b0 <main+0x54>
				count2=0;
				flag=0;
				break;
			default:
				 if((keypad_pressed == '+') | (keypad_pressed == '-')| (keypad_pressed == '*')|(keypad_pressed == '/')){
     6de:	95 01       	movw	r18, r10
     6e0:	8f 32       	cpi	r24, 0x2F	; 47
     6e2:	09 f0       	breq	.+2      	; 0x6e6 <main+0x8a>
     6e4:	97 01       	movw	r18, r14
     6e6:	c5 01       	movw	r24, r10
     6e8:	1a 32       	cpi	r17, 0x2A	; 42
     6ea:	09 f0       	breq	.+2      	; 0x6ee <main+0x92>
     6ec:	c7 01       	movw	r24, r14
     6ee:	28 2b       	or	r18, r24
     6f0:	39 2b       	or	r19, r25
     6f2:	90 2f       	mov	r25, r16
     6f4:	1b 32       	cpi	r17, 0x2B	; 43
     6f6:	09 f0       	breq	.+2      	; 0x6fa <main+0x9e>
     6f8:	95 2d       	mov	r25, r5
     6fa:	80 2f       	mov	r24, r16
     6fc:	1d 32       	cpi	r17, 0x2D	; 45
     6fe:	09 f0       	breq	.+2      	; 0x702 <main+0xa6>
     700:	85 2d       	mov	r24, r5
     702:	89 2b       	or	r24, r25
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	82 2b       	or	r24, r18
     708:	93 2b       	or	r25, r19
     70a:	00 97       	sbiw	r24, 0x00	; 0
     70c:	61 f0       	breq	.+24     	; 0x726 <main+0xca>
					 lcd_send_char(keypad_pressed);
     70e:	81 2f       	mov	r24, r17
     710:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_send_char>
     714:	89 ef       	ldi	r24, 0xF9	; 249
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	01 97       	sbiw	r24, 0x01	; 1
     71a:	f1 f7       	brne	.-4      	; 0x718 <main+0xbc>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <main+0xc2>
     71e:	00 00       	nop
					 _delay_ms(1);
					 flag =1;
					 process = keypad_pressed;
     720:	41 2e       	mov	r4, r17
				break;
			default:
				 if((keypad_pressed == '+') | (keypad_pressed == '-')| (keypad_pressed == '*')|(keypad_pressed == '/')){
					 lcd_send_char(keypad_pressed);
					 _delay_ms(1);
					 flag =1;
     722:	65 01       	movw	r12, r10
     724:	c5 cf       	rjmp	.-118    	; 0x6b0 <main+0x54>
					 process = keypad_pressed;
				 }
				 else if(keypad_pressed == '='){
     726:	1d 33       	cpi	r17, 0x3D	; 61
     728:	99 f4       	brne	.+38     	; 0x750 <main+0xf4>
					 lcd_send_char(keypad_pressed);
     72a:	8d e3       	ldi	r24, 0x3D	; 61
     72c:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_send_char>
     730:	a9 ef       	ldi	r26, 0xF9	; 249
     732:	b0 e0       	ldi	r27, 0x00	; 0
     734:	11 97       	sbiw	r26, 0x01	; 1
     736:	f1 f7       	brne	.-4      	; 0x734 <main+0xd8>
     738:	00 c0       	rjmp	.+0      	; 0x73a <main+0xde>
     73a:	00 00       	nop
					 _delay_ms(1);
					 calculate(operand1,operand2,process);
     73c:	ce 01       	movw	r24, r28
     73e:	01 96       	adiw	r24, 0x01	; 1
     740:	b4 01       	movw	r22, r8
     742:	44 2d       	mov	r20, r4
     744:	0e 94 c6 02 	call	0x58c	; 0x58c <calculate>
					 count1 =0;
					 count2=0;
					 flag=0;
     748:	67 01       	movw	r12, r14
				 else if(keypad_pressed == '='){
					 lcd_send_char(keypad_pressed);
					 _delay_ms(1);
					 calculate(operand1,operand2,process);
					 count1 =0;
					 count2=0;
     74a:	17 01       	movw	r2, r14
				 }
				 else if(keypad_pressed == '='){
					 lcd_send_char(keypad_pressed);
					 _delay_ms(1);
					 calculate(operand1,operand2,process);
					 count1 =0;
     74c:	37 01       	movw	r6, r14
     74e:	b0 cf       	rjmp	.-160    	; 0x6b0 <main+0x54>
					 count2=0;
					 flag=0;
				 }
				 else{
					 if(flag == 0){
     750:	c1 14       	cp	r12, r1
     752:	d1 04       	cpc	r13, r1
     754:	a1 f4       	brne	.+40     	; 0x77e <main+0x122>
						 lcd_send_char(keypad_pressed);
     756:	81 2f       	mov	r24, r17
     758:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_send_char>
     75c:	89 ef       	ldi	r24, 0xF9	; 249
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <main+0x104>
     764:	00 c0       	rjmp	.+0      	; 0x766 <main+0x10a>
     766:	00 00       	nop
						 _delay_ms(1);
						 operand1[count1] = keypad_pressed;
     768:	e1 e0       	ldi	r30, 0x01	; 1
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	ec 0f       	add	r30, r28
     76e:	fd 1f       	adc	r31, r29
     770:	e6 0d       	add	r30, r6
     772:	f7 1d       	adc	r31, r7
     774:	10 83       	st	Z, r17
						 count1++;
     776:	08 94       	sec
     778:	61 1c       	adc	r6, r1
     77a:	71 1c       	adc	r7, r1
     77c:	99 cf       	rjmp	.-206    	; 0x6b0 <main+0x54>
					 }
					 else if(flag == 1){
     77e:	91 e0       	ldi	r25, 0x01	; 1
     780:	c9 16       	cp	r12, r25
     782:	d1 04       	cpc	r13, r1
     784:	09 f0       	breq	.+2      	; 0x788 <main+0x12c>
     786:	94 cf       	rjmp	.-216    	; 0x6b0 <main+0x54>
						 lcd_send_char(keypad_pressed);
     788:	81 2f       	mov	r24, r17
     78a:	0e 94 8b 01 	call	0x316	; 0x316 <lcd_send_char>
     78e:	a9 ef       	ldi	r26, 0xF9	; 249
     790:	b0 e0       	ldi	r27, 0x00	; 0
     792:	11 97       	sbiw	r26, 0x01	; 1
     794:	f1 f7       	brne	.-4      	; 0x792 <main+0x136>
     796:	00 c0       	rjmp	.+0      	; 0x798 <main+0x13c>
     798:	00 00       	nop
						 _delay_ms(1);
						 operand2[count2] = keypad_pressed;
     79a:	f4 01       	movw	r30, r8
     79c:	e2 0d       	add	r30, r2
     79e:	f3 1d       	adc	r31, r3
     7a0:	10 83       	st	Z, r17
						 count2++;
     7a2:	08 94       	sec
     7a4:	21 1c       	adc	r2, r1
     7a6:	31 1c       	adc	r3, r1
     7a8:	83 cf       	rjmp	.-250    	; 0x6b0 <main+0x54>

000007aa <__subsf3>:
     7aa:	50 58       	subi	r21, 0x80	; 128

000007ac <__addsf3>:
     7ac:	bb 27       	eor	r27, r27
     7ae:	aa 27       	eor	r26, r26
     7b0:	0e d0       	rcall	.+28     	; 0x7ce <__addsf3x>
     7b2:	75 c1       	rjmp	.+746    	; 0xa9e <__fp_round>
     7b4:	66 d1       	rcall	.+716    	; 0xa82 <__fp_pscA>
     7b6:	30 f0       	brcs	.+12     	; 0x7c4 <__addsf3+0x18>
     7b8:	6b d1       	rcall	.+726    	; 0xa90 <__fp_pscB>
     7ba:	20 f0       	brcs	.+8      	; 0x7c4 <__addsf3+0x18>
     7bc:	31 f4       	brne	.+12     	; 0x7ca <__addsf3+0x1e>
     7be:	9f 3f       	cpi	r25, 0xFF	; 255
     7c0:	11 f4       	brne	.+4      	; 0x7c6 <__addsf3+0x1a>
     7c2:	1e f4       	brtc	.+6      	; 0x7ca <__addsf3+0x1e>
     7c4:	5b c1       	rjmp	.+694    	; 0xa7c <__fp_nan>
     7c6:	0e f4       	brtc	.+2      	; 0x7ca <__addsf3+0x1e>
     7c8:	e0 95       	com	r30
     7ca:	e7 fb       	bst	r30, 7
     7cc:	51 c1       	rjmp	.+674    	; 0xa70 <__fp_inf>

000007ce <__addsf3x>:
     7ce:	e9 2f       	mov	r30, r25
     7d0:	77 d1       	rcall	.+750    	; 0xac0 <__fp_split3>
     7d2:	80 f3       	brcs	.-32     	; 0x7b4 <__addsf3+0x8>
     7d4:	ba 17       	cp	r27, r26
     7d6:	62 07       	cpc	r22, r18
     7d8:	73 07       	cpc	r23, r19
     7da:	84 07       	cpc	r24, r20
     7dc:	95 07       	cpc	r25, r21
     7de:	18 f0       	brcs	.+6      	; 0x7e6 <__addsf3x+0x18>
     7e0:	71 f4       	brne	.+28     	; 0x7fe <__addsf3x+0x30>
     7e2:	9e f5       	brtc	.+102    	; 0x84a <__addsf3x+0x7c>
     7e4:	8f c1       	rjmp	.+798    	; 0xb04 <__fp_zero>
     7e6:	0e f4       	brtc	.+2      	; 0x7ea <__addsf3x+0x1c>
     7e8:	e0 95       	com	r30
     7ea:	0b 2e       	mov	r0, r27
     7ec:	ba 2f       	mov	r27, r26
     7ee:	a0 2d       	mov	r26, r0
     7f0:	0b 01       	movw	r0, r22
     7f2:	b9 01       	movw	r22, r18
     7f4:	90 01       	movw	r18, r0
     7f6:	0c 01       	movw	r0, r24
     7f8:	ca 01       	movw	r24, r20
     7fa:	a0 01       	movw	r20, r0
     7fc:	11 24       	eor	r1, r1
     7fe:	ff 27       	eor	r31, r31
     800:	59 1b       	sub	r21, r25
     802:	99 f0       	breq	.+38     	; 0x82a <__addsf3x+0x5c>
     804:	59 3f       	cpi	r21, 0xF9	; 249
     806:	50 f4       	brcc	.+20     	; 0x81c <__addsf3x+0x4e>
     808:	50 3e       	cpi	r21, 0xE0	; 224
     80a:	68 f1       	brcs	.+90     	; 0x866 <__addsf3x+0x98>
     80c:	1a 16       	cp	r1, r26
     80e:	f0 40       	sbci	r31, 0x00	; 0
     810:	a2 2f       	mov	r26, r18
     812:	23 2f       	mov	r18, r19
     814:	34 2f       	mov	r19, r20
     816:	44 27       	eor	r20, r20
     818:	58 5f       	subi	r21, 0xF8	; 248
     81a:	f3 cf       	rjmp	.-26     	; 0x802 <__addsf3x+0x34>
     81c:	46 95       	lsr	r20
     81e:	37 95       	ror	r19
     820:	27 95       	ror	r18
     822:	a7 95       	ror	r26
     824:	f0 40       	sbci	r31, 0x00	; 0
     826:	53 95       	inc	r21
     828:	c9 f7       	brne	.-14     	; 0x81c <__addsf3x+0x4e>
     82a:	7e f4       	brtc	.+30     	; 0x84a <__addsf3x+0x7c>
     82c:	1f 16       	cp	r1, r31
     82e:	ba 0b       	sbc	r27, r26
     830:	62 0b       	sbc	r22, r18
     832:	73 0b       	sbc	r23, r19
     834:	84 0b       	sbc	r24, r20
     836:	ba f0       	brmi	.+46     	; 0x866 <__addsf3x+0x98>
     838:	91 50       	subi	r25, 0x01	; 1
     83a:	a1 f0       	breq	.+40     	; 0x864 <__addsf3x+0x96>
     83c:	ff 0f       	add	r31, r31
     83e:	bb 1f       	adc	r27, r27
     840:	66 1f       	adc	r22, r22
     842:	77 1f       	adc	r23, r23
     844:	88 1f       	adc	r24, r24
     846:	c2 f7       	brpl	.-16     	; 0x838 <__addsf3x+0x6a>
     848:	0e c0       	rjmp	.+28     	; 0x866 <__addsf3x+0x98>
     84a:	ba 0f       	add	r27, r26
     84c:	62 1f       	adc	r22, r18
     84e:	73 1f       	adc	r23, r19
     850:	84 1f       	adc	r24, r20
     852:	48 f4       	brcc	.+18     	; 0x866 <__addsf3x+0x98>
     854:	87 95       	ror	r24
     856:	77 95       	ror	r23
     858:	67 95       	ror	r22
     85a:	b7 95       	ror	r27
     85c:	f7 95       	ror	r31
     85e:	9e 3f       	cpi	r25, 0xFE	; 254
     860:	08 f0       	brcs	.+2      	; 0x864 <__addsf3x+0x96>
     862:	b3 cf       	rjmp	.-154    	; 0x7ca <__addsf3+0x1e>
     864:	93 95       	inc	r25
     866:	88 0f       	add	r24, r24
     868:	08 f0       	brcs	.+2      	; 0x86c <__addsf3x+0x9e>
     86a:	99 27       	eor	r25, r25
     86c:	ee 0f       	add	r30, r30
     86e:	97 95       	ror	r25
     870:	87 95       	ror	r24
     872:	08 95       	ret

00000874 <__cmpsf2>:
     874:	d9 d0       	rcall	.+434    	; 0xa28 <__fp_cmp>
     876:	08 f4       	brcc	.+2      	; 0x87a <__cmpsf2+0x6>
     878:	81 e0       	ldi	r24, 0x01	; 1
     87a:	08 95       	ret

0000087c <__divsf3>:
     87c:	0c d0       	rcall	.+24     	; 0x896 <__divsf3x>
     87e:	0f c1       	rjmp	.+542    	; 0xa9e <__fp_round>
     880:	07 d1       	rcall	.+526    	; 0xa90 <__fp_pscB>
     882:	40 f0       	brcs	.+16     	; 0x894 <__divsf3+0x18>
     884:	fe d0       	rcall	.+508    	; 0xa82 <__fp_pscA>
     886:	30 f0       	brcs	.+12     	; 0x894 <__divsf3+0x18>
     888:	21 f4       	brne	.+8      	; 0x892 <__divsf3+0x16>
     88a:	5f 3f       	cpi	r21, 0xFF	; 255
     88c:	19 f0       	breq	.+6      	; 0x894 <__divsf3+0x18>
     88e:	f0 c0       	rjmp	.+480    	; 0xa70 <__fp_inf>
     890:	51 11       	cpse	r21, r1
     892:	39 c1       	rjmp	.+626    	; 0xb06 <__fp_szero>
     894:	f3 c0       	rjmp	.+486    	; 0xa7c <__fp_nan>

00000896 <__divsf3x>:
     896:	14 d1       	rcall	.+552    	; 0xac0 <__fp_split3>
     898:	98 f3       	brcs	.-26     	; 0x880 <__divsf3+0x4>

0000089a <__divsf3_pse>:
     89a:	99 23       	and	r25, r25
     89c:	c9 f3       	breq	.-14     	; 0x890 <__divsf3+0x14>
     89e:	55 23       	and	r21, r21
     8a0:	b1 f3       	breq	.-20     	; 0x88e <__divsf3+0x12>
     8a2:	95 1b       	sub	r25, r21
     8a4:	55 0b       	sbc	r21, r21
     8a6:	bb 27       	eor	r27, r27
     8a8:	aa 27       	eor	r26, r26
     8aa:	62 17       	cp	r22, r18
     8ac:	73 07       	cpc	r23, r19
     8ae:	84 07       	cpc	r24, r20
     8b0:	38 f0       	brcs	.+14     	; 0x8c0 <__divsf3_pse+0x26>
     8b2:	9f 5f       	subi	r25, 0xFF	; 255
     8b4:	5f 4f       	sbci	r21, 0xFF	; 255
     8b6:	22 0f       	add	r18, r18
     8b8:	33 1f       	adc	r19, r19
     8ba:	44 1f       	adc	r20, r20
     8bc:	aa 1f       	adc	r26, r26
     8be:	a9 f3       	breq	.-22     	; 0x8aa <__divsf3_pse+0x10>
     8c0:	33 d0       	rcall	.+102    	; 0x928 <__divsf3_pse+0x8e>
     8c2:	0e 2e       	mov	r0, r30
     8c4:	3a f0       	brmi	.+14     	; 0x8d4 <__divsf3_pse+0x3a>
     8c6:	e0 e8       	ldi	r30, 0x80	; 128
     8c8:	30 d0       	rcall	.+96     	; 0x92a <__divsf3_pse+0x90>
     8ca:	91 50       	subi	r25, 0x01	; 1
     8cc:	50 40       	sbci	r21, 0x00	; 0
     8ce:	e6 95       	lsr	r30
     8d0:	00 1c       	adc	r0, r0
     8d2:	ca f7       	brpl	.-14     	; 0x8c6 <__divsf3_pse+0x2c>
     8d4:	29 d0       	rcall	.+82     	; 0x928 <__divsf3_pse+0x8e>
     8d6:	fe 2f       	mov	r31, r30
     8d8:	27 d0       	rcall	.+78     	; 0x928 <__divsf3_pse+0x8e>
     8da:	66 0f       	add	r22, r22
     8dc:	77 1f       	adc	r23, r23
     8de:	88 1f       	adc	r24, r24
     8e0:	bb 1f       	adc	r27, r27
     8e2:	26 17       	cp	r18, r22
     8e4:	37 07       	cpc	r19, r23
     8e6:	48 07       	cpc	r20, r24
     8e8:	ab 07       	cpc	r26, r27
     8ea:	b0 e8       	ldi	r27, 0x80	; 128
     8ec:	09 f0       	breq	.+2      	; 0x8f0 <__divsf3_pse+0x56>
     8ee:	bb 0b       	sbc	r27, r27
     8f0:	80 2d       	mov	r24, r0
     8f2:	bf 01       	movw	r22, r30
     8f4:	ff 27       	eor	r31, r31
     8f6:	93 58       	subi	r25, 0x83	; 131
     8f8:	5f 4f       	sbci	r21, 0xFF	; 255
     8fa:	2a f0       	brmi	.+10     	; 0x906 <__divsf3_pse+0x6c>
     8fc:	9e 3f       	cpi	r25, 0xFE	; 254
     8fe:	51 05       	cpc	r21, r1
     900:	68 f0       	brcs	.+26     	; 0x91c <__divsf3_pse+0x82>
     902:	b6 c0       	rjmp	.+364    	; 0xa70 <__fp_inf>
     904:	00 c1       	rjmp	.+512    	; 0xb06 <__fp_szero>
     906:	5f 3f       	cpi	r21, 0xFF	; 255
     908:	ec f3       	brlt	.-6      	; 0x904 <__divsf3_pse+0x6a>
     90a:	98 3e       	cpi	r25, 0xE8	; 232
     90c:	dc f3       	brlt	.-10     	; 0x904 <__divsf3_pse+0x6a>
     90e:	86 95       	lsr	r24
     910:	77 95       	ror	r23
     912:	67 95       	ror	r22
     914:	b7 95       	ror	r27
     916:	f7 95       	ror	r31
     918:	9f 5f       	subi	r25, 0xFF	; 255
     91a:	c9 f7       	brne	.-14     	; 0x90e <__divsf3_pse+0x74>
     91c:	88 0f       	add	r24, r24
     91e:	91 1d       	adc	r25, r1
     920:	96 95       	lsr	r25
     922:	87 95       	ror	r24
     924:	97 f9       	bld	r25, 7
     926:	08 95       	ret
     928:	e1 e0       	ldi	r30, 0x01	; 1
     92a:	66 0f       	add	r22, r22
     92c:	77 1f       	adc	r23, r23
     92e:	88 1f       	adc	r24, r24
     930:	bb 1f       	adc	r27, r27
     932:	62 17       	cp	r22, r18
     934:	73 07       	cpc	r23, r19
     936:	84 07       	cpc	r24, r20
     938:	ba 07       	cpc	r27, r26
     93a:	20 f0       	brcs	.+8      	; 0x944 <__divsf3_pse+0xaa>
     93c:	62 1b       	sub	r22, r18
     93e:	73 0b       	sbc	r23, r19
     940:	84 0b       	sbc	r24, r20
     942:	ba 0b       	sbc	r27, r26
     944:	ee 1f       	adc	r30, r30
     946:	88 f7       	brcc	.-30     	; 0x92a <__divsf3_pse+0x90>
     948:	e0 95       	com	r30
     94a:	08 95       	ret

0000094c <__fixsfsi>:
     94c:	04 d0       	rcall	.+8      	; 0x956 <__fixunssfsi>
     94e:	68 94       	set
     950:	b1 11       	cpse	r27, r1
     952:	d9 c0       	rjmp	.+434    	; 0xb06 <__fp_szero>
     954:	08 95       	ret

00000956 <__fixunssfsi>:
     956:	bc d0       	rcall	.+376    	; 0xad0 <__fp_splitA>
     958:	88 f0       	brcs	.+34     	; 0x97c <__fixunssfsi+0x26>
     95a:	9f 57       	subi	r25, 0x7F	; 127
     95c:	90 f0       	brcs	.+36     	; 0x982 <__fixunssfsi+0x2c>
     95e:	b9 2f       	mov	r27, r25
     960:	99 27       	eor	r25, r25
     962:	b7 51       	subi	r27, 0x17	; 23
     964:	a0 f0       	brcs	.+40     	; 0x98e <__fixunssfsi+0x38>
     966:	d1 f0       	breq	.+52     	; 0x99c <__fixunssfsi+0x46>
     968:	66 0f       	add	r22, r22
     96a:	77 1f       	adc	r23, r23
     96c:	88 1f       	adc	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	1a f0       	brmi	.+6      	; 0x978 <__fixunssfsi+0x22>
     972:	ba 95       	dec	r27
     974:	c9 f7       	brne	.-14     	; 0x968 <__fixunssfsi+0x12>
     976:	12 c0       	rjmp	.+36     	; 0x99c <__fixunssfsi+0x46>
     978:	b1 30       	cpi	r27, 0x01	; 1
     97a:	81 f0       	breq	.+32     	; 0x99c <__fixunssfsi+0x46>
     97c:	c3 d0       	rcall	.+390    	; 0xb04 <__fp_zero>
     97e:	b1 e0       	ldi	r27, 0x01	; 1
     980:	08 95       	ret
     982:	c0 c0       	rjmp	.+384    	; 0xb04 <__fp_zero>
     984:	67 2f       	mov	r22, r23
     986:	78 2f       	mov	r23, r24
     988:	88 27       	eor	r24, r24
     98a:	b8 5f       	subi	r27, 0xF8	; 248
     98c:	39 f0       	breq	.+14     	; 0x99c <__fixunssfsi+0x46>
     98e:	b9 3f       	cpi	r27, 0xF9	; 249
     990:	cc f3       	brlt	.-14     	; 0x984 <__fixunssfsi+0x2e>
     992:	86 95       	lsr	r24
     994:	77 95       	ror	r23
     996:	67 95       	ror	r22
     998:	b3 95       	inc	r27
     99a:	d9 f7       	brne	.-10     	; 0x992 <__fixunssfsi+0x3c>
     99c:	3e f4       	brtc	.+14     	; 0x9ac <__fixunssfsi+0x56>
     99e:	90 95       	com	r25
     9a0:	80 95       	com	r24
     9a2:	70 95       	com	r23
     9a4:	61 95       	neg	r22
     9a6:	7f 4f       	sbci	r23, 0xFF	; 255
     9a8:	8f 4f       	sbci	r24, 0xFF	; 255
     9aa:	9f 4f       	sbci	r25, 0xFF	; 255
     9ac:	08 95       	ret

000009ae <__floatunsisf>:
     9ae:	e8 94       	clt
     9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <__floatsisf+0x12>

000009b2 <__floatsisf>:
     9b2:	97 fb       	bst	r25, 7
     9b4:	3e f4       	brtc	.+14     	; 0x9c4 <__floatsisf+0x12>
     9b6:	90 95       	com	r25
     9b8:	80 95       	com	r24
     9ba:	70 95       	com	r23
     9bc:	61 95       	neg	r22
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	8f 4f       	sbci	r24, 0xFF	; 255
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	99 23       	and	r25, r25
     9c6:	a9 f0       	breq	.+42     	; 0x9f2 <__floatsisf+0x40>
     9c8:	f9 2f       	mov	r31, r25
     9ca:	96 e9       	ldi	r25, 0x96	; 150
     9cc:	bb 27       	eor	r27, r27
     9ce:	93 95       	inc	r25
     9d0:	f6 95       	lsr	r31
     9d2:	87 95       	ror	r24
     9d4:	77 95       	ror	r23
     9d6:	67 95       	ror	r22
     9d8:	b7 95       	ror	r27
     9da:	f1 11       	cpse	r31, r1
     9dc:	f8 cf       	rjmp	.-16     	; 0x9ce <__floatsisf+0x1c>
     9de:	fa f4       	brpl	.+62     	; 0xa1e <__floatsisf+0x6c>
     9e0:	bb 0f       	add	r27, r27
     9e2:	11 f4       	brne	.+4      	; 0x9e8 <__floatsisf+0x36>
     9e4:	60 ff       	sbrs	r22, 0
     9e6:	1b c0       	rjmp	.+54     	; 0xa1e <__floatsisf+0x6c>
     9e8:	6f 5f       	subi	r22, 0xFF	; 255
     9ea:	7f 4f       	sbci	r23, 0xFF	; 255
     9ec:	8f 4f       	sbci	r24, 0xFF	; 255
     9ee:	9f 4f       	sbci	r25, 0xFF	; 255
     9f0:	16 c0       	rjmp	.+44     	; 0xa1e <__floatsisf+0x6c>
     9f2:	88 23       	and	r24, r24
     9f4:	11 f0       	breq	.+4      	; 0x9fa <__floatsisf+0x48>
     9f6:	96 e9       	ldi	r25, 0x96	; 150
     9f8:	11 c0       	rjmp	.+34     	; 0xa1c <__floatsisf+0x6a>
     9fa:	77 23       	and	r23, r23
     9fc:	21 f0       	breq	.+8      	; 0xa06 <__floatsisf+0x54>
     9fe:	9e e8       	ldi	r25, 0x8E	; 142
     a00:	87 2f       	mov	r24, r23
     a02:	76 2f       	mov	r23, r22
     a04:	05 c0       	rjmp	.+10     	; 0xa10 <__floatsisf+0x5e>
     a06:	66 23       	and	r22, r22
     a08:	71 f0       	breq	.+28     	; 0xa26 <__floatsisf+0x74>
     a0a:	96 e8       	ldi	r25, 0x86	; 134
     a0c:	86 2f       	mov	r24, r22
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	2a f0       	brmi	.+10     	; 0xa1e <__floatsisf+0x6c>
     a14:	9a 95       	dec	r25
     a16:	66 0f       	add	r22, r22
     a18:	77 1f       	adc	r23, r23
     a1a:	88 1f       	adc	r24, r24
     a1c:	da f7       	brpl	.-10     	; 0xa14 <__floatsisf+0x62>
     a1e:	88 0f       	add	r24, r24
     a20:	96 95       	lsr	r25
     a22:	87 95       	ror	r24
     a24:	97 f9       	bld	r25, 7
     a26:	08 95       	ret

00000a28 <__fp_cmp>:
     a28:	99 0f       	add	r25, r25
     a2a:	00 08       	sbc	r0, r0
     a2c:	55 0f       	add	r21, r21
     a2e:	aa 0b       	sbc	r26, r26
     a30:	e0 e8       	ldi	r30, 0x80	; 128
     a32:	fe ef       	ldi	r31, 0xFE	; 254
     a34:	16 16       	cp	r1, r22
     a36:	17 06       	cpc	r1, r23
     a38:	e8 07       	cpc	r30, r24
     a3a:	f9 07       	cpc	r31, r25
     a3c:	c0 f0       	brcs	.+48     	; 0xa6e <__fp_cmp+0x46>
     a3e:	12 16       	cp	r1, r18
     a40:	13 06       	cpc	r1, r19
     a42:	e4 07       	cpc	r30, r20
     a44:	f5 07       	cpc	r31, r21
     a46:	98 f0       	brcs	.+38     	; 0xa6e <__fp_cmp+0x46>
     a48:	62 1b       	sub	r22, r18
     a4a:	73 0b       	sbc	r23, r19
     a4c:	84 0b       	sbc	r24, r20
     a4e:	95 0b       	sbc	r25, r21
     a50:	39 f4       	brne	.+14     	; 0xa60 <__fp_cmp+0x38>
     a52:	0a 26       	eor	r0, r26
     a54:	61 f0       	breq	.+24     	; 0xa6e <__fp_cmp+0x46>
     a56:	23 2b       	or	r18, r19
     a58:	24 2b       	or	r18, r20
     a5a:	25 2b       	or	r18, r21
     a5c:	21 f4       	brne	.+8      	; 0xa66 <__fp_cmp+0x3e>
     a5e:	08 95       	ret
     a60:	0a 26       	eor	r0, r26
     a62:	09 f4       	brne	.+2      	; 0xa66 <__fp_cmp+0x3e>
     a64:	a1 40       	sbci	r26, 0x01	; 1
     a66:	a6 95       	lsr	r26
     a68:	8f ef       	ldi	r24, 0xFF	; 255
     a6a:	81 1d       	adc	r24, r1
     a6c:	81 1d       	adc	r24, r1
     a6e:	08 95       	ret

00000a70 <__fp_inf>:
     a70:	97 f9       	bld	r25, 7
     a72:	9f 67       	ori	r25, 0x7F	; 127
     a74:	80 e8       	ldi	r24, 0x80	; 128
     a76:	70 e0       	ldi	r23, 0x00	; 0
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	08 95       	ret

00000a7c <__fp_nan>:
     a7c:	9f ef       	ldi	r25, 0xFF	; 255
     a7e:	80 ec       	ldi	r24, 0xC0	; 192
     a80:	08 95       	ret

00000a82 <__fp_pscA>:
     a82:	00 24       	eor	r0, r0
     a84:	0a 94       	dec	r0
     a86:	16 16       	cp	r1, r22
     a88:	17 06       	cpc	r1, r23
     a8a:	18 06       	cpc	r1, r24
     a8c:	09 06       	cpc	r0, r25
     a8e:	08 95       	ret

00000a90 <__fp_pscB>:
     a90:	00 24       	eor	r0, r0
     a92:	0a 94       	dec	r0
     a94:	12 16       	cp	r1, r18
     a96:	13 06       	cpc	r1, r19
     a98:	14 06       	cpc	r1, r20
     a9a:	05 06       	cpc	r0, r21
     a9c:	08 95       	ret

00000a9e <__fp_round>:
     a9e:	09 2e       	mov	r0, r25
     aa0:	03 94       	inc	r0
     aa2:	00 0c       	add	r0, r0
     aa4:	11 f4       	brne	.+4      	; 0xaaa <__fp_round+0xc>
     aa6:	88 23       	and	r24, r24
     aa8:	52 f0       	brmi	.+20     	; 0xabe <__fp_round+0x20>
     aaa:	bb 0f       	add	r27, r27
     aac:	40 f4       	brcc	.+16     	; 0xabe <__fp_round+0x20>
     aae:	bf 2b       	or	r27, r31
     ab0:	11 f4       	brne	.+4      	; 0xab6 <__fp_round+0x18>
     ab2:	60 ff       	sbrs	r22, 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <__fp_round+0x20>
     ab6:	6f 5f       	subi	r22, 0xFF	; 255
     ab8:	7f 4f       	sbci	r23, 0xFF	; 255
     aba:	8f 4f       	sbci	r24, 0xFF	; 255
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	08 95       	ret

00000ac0 <__fp_split3>:
     ac0:	57 fd       	sbrc	r21, 7
     ac2:	90 58       	subi	r25, 0x80	; 128
     ac4:	44 0f       	add	r20, r20
     ac6:	55 1f       	adc	r21, r21
     ac8:	59 f0       	breq	.+22     	; 0xae0 <__fp_splitA+0x10>
     aca:	5f 3f       	cpi	r21, 0xFF	; 255
     acc:	71 f0       	breq	.+28     	; 0xaea <__fp_splitA+0x1a>
     ace:	47 95       	ror	r20

00000ad0 <__fp_splitA>:
     ad0:	88 0f       	add	r24, r24
     ad2:	97 fb       	bst	r25, 7
     ad4:	99 1f       	adc	r25, r25
     ad6:	61 f0       	breq	.+24     	; 0xaf0 <__fp_splitA+0x20>
     ad8:	9f 3f       	cpi	r25, 0xFF	; 255
     ada:	79 f0       	breq	.+30     	; 0xafa <__fp_splitA+0x2a>
     adc:	87 95       	ror	r24
     ade:	08 95       	ret
     ae0:	12 16       	cp	r1, r18
     ae2:	13 06       	cpc	r1, r19
     ae4:	14 06       	cpc	r1, r20
     ae6:	55 1f       	adc	r21, r21
     ae8:	f2 cf       	rjmp	.-28     	; 0xace <__fp_split3+0xe>
     aea:	46 95       	lsr	r20
     aec:	f1 df       	rcall	.-30     	; 0xad0 <__fp_splitA>
     aee:	08 c0       	rjmp	.+16     	; 0xb00 <__fp_splitA+0x30>
     af0:	16 16       	cp	r1, r22
     af2:	17 06       	cpc	r1, r23
     af4:	18 06       	cpc	r1, r24
     af6:	99 1f       	adc	r25, r25
     af8:	f1 cf       	rjmp	.-30     	; 0xadc <__fp_splitA+0xc>
     afa:	86 95       	lsr	r24
     afc:	71 05       	cpc	r23, r1
     afe:	61 05       	cpc	r22, r1
     b00:	08 94       	sec
     b02:	08 95       	ret

00000b04 <__fp_zero>:
     b04:	e8 94       	clt

00000b06 <__fp_szero>:
     b06:	bb 27       	eor	r27, r27
     b08:	66 27       	eor	r22, r22
     b0a:	77 27       	eor	r23, r23
     b0c:	cb 01       	movw	r24, r22
     b0e:	97 f9       	bld	r25, 7
     b10:	08 95       	ret

00000b12 <__mulsf3>:
     b12:	0b d0       	rcall	.+22     	; 0xb2a <__mulsf3x>
     b14:	c4 cf       	rjmp	.-120    	; 0xa9e <__fp_round>
     b16:	b5 df       	rcall	.-150    	; 0xa82 <__fp_pscA>
     b18:	28 f0       	brcs	.+10     	; 0xb24 <__mulsf3+0x12>
     b1a:	ba df       	rcall	.-140    	; 0xa90 <__fp_pscB>
     b1c:	18 f0       	brcs	.+6      	; 0xb24 <__mulsf3+0x12>
     b1e:	95 23       	and	r25, r21
     b20:	09 f0       	breq	.+2      	; 0xb24 <__mulsf3+0x12>
     b22:	a6 cf       	rjmp	.-180    	; 0xa70 <__fp_inf>
     b24:	ab cf       	rjmp	.-170    	; 0xa7c <__fp_nan>
     b26:	11 24       	eor	r1, r1
     b28:	ee cf       	rjmp	.-36     	; 0xb06 <__fp_szero>

00000b2a <__mulsf3x>:
     b2a:	ca df       	rcall	.-108    	; 0xac0 <__fp_split3>
     b2c:	a0 f3       	brcs	.-24     	; 0xb16 <__mulsf3+0x4>

00000b2e <__mulsf3_pse>:
     b2e:	95 9f       	mul	r25, r21
     b30:	d1 f3       	breq	.-12     	; 0xb26 <__mulsf3+0x14>
     b32:	95 0f       	add	r25, r21
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	55 1f       	adc	r21, r21
     b38:	62 9f       	mul	r22, r18
     b3a:	f0 01       	movw	r30, r0
     b3c:	72 9f       	mul	r23, r18
     b3e:	bb 27       	eor	r27, r27
     b40:	f0 0d       	add	r31, r0
     b42:	b1 1d       	adc	r27, r1
     b44:	63 9f       	mul	r22, r19
     b46:	aa 27       	eor	r26, r26
     b48:	f0 0d       	add	r31, r0
     b4a:	b1 1d       	adc	r27, r1
     b4c:	aa 1f       	adc	r26, r26
     b4e:	64 9f       	mul	r22, r20
     b50:	66 27       	eor	r22, r22
     b52:	b0 0d       	add	r27, r0
     b54:	a1 1d       	adc	r26, r1
     b56:	66 1f       	adc	r22, r22
     b58:	82 9f       	mul	r24, r18
     b5a:	22 27       	eor	r18, r18
     b5c:	b0 0d       	add	r27, r0
     b5e:	a1 1d       	adc	r26, r1
     b60:	62 1f       	adc	r22, r18
     b62:	73 9f       	mul	r23, r19
     b64:	b0 0d       	add	r27, r0
     b66:	a1 1d       	adc	r26, r1
     b68:	62 1f       	adc	r22, r18
     b6a:	83 9f       	mul	r24, r19
     b6c:	a0 0d       	add	r26, r0
     b6e:	61 1d       	adc	r22, r1
     b70:	22 1f       	adc	r18, r18
     b72:	74 9f       	mul	r23, r20
     b74:	33 27       	eor	r19, r19
     b76:	a0 0d       	add	r26, r0
     b78:	61 1d       	adc	r22, r1
     b7a:	23 1f       	adc	r18, r19
     b7c:	84 9f       	mul	r24, r20
     b7e:	60 0d       	add	r22, r0
     b80:	21 1d       	adc	r18, r1
     b82:	82 2f       	mov	r24, r18
     b84:	76 2f       	mov	r23, r22
     b86:	6a 2f       	mov	r22, r26
     b88:	11 24       	eor	r1, r1
     b8a:	9f 57       	subi	r25, 0x7F	; 127
     b8c:	50 40       	sbci	r21, 0x00	; 0
     b8e:	8a f0       	brmi	.+34     	; 0xbb2 <__mulsf3_pse+0x84>
     b90:	e1 f0       	breq	.+56     	; 0xbca <__mulsf3_pse+0x9c>
     b92:	88 23       	and	r24, r24
     b94:	4a f0       	brmi	.+18     	; 0xba8 <__mulsf3_pse+0x7a>
     b96:	ee 0f       	add	r30, r30
     b98:	ff 1f       	adc	r31, r31
     b9a:	bb 1f       	adc	r27, r27
     b9c:	66 1f       	adc	r22, r22
     b9e:	77 1f       	adc	r23, r23
     ba0:	88 1f       	adc	r24, r24
     ba2:	91 50       	subi	r25, 0x01	; 1
     ba4:	50 40       	sbci	r21, 0x00	; 0
     ba6:	a9 f7       	brne	.-22     	; 0xb92 <__mulsf3_pse+0x64>
     ba8:	9e 3f       	cpi	r25, 0xFE	; 254
     baa:	51 05       	cpc	r21, r1
     bac:	70 f0       	brcs	.+28     	; 0xbca <__mulsf3_pse+0x9c>
     bae:	60 cf       	rjmp	.-320    	; 0xa70 <__fp_inf>
     bb0:	aa cf       	rjmp	.-172    	; 0xb06 <__fp_szero>
     bb2:	5f 3f       	cpi	r21, 0xFF	; 255
     bb4:	ec f3       	brlt	.-6      	; 0xbb0 <__mulsf3_pse+0x82>
     bb6:	98 3e       	cpi	r25, 0xE8	; 232
     bb8:	dc f3       	brlt	.-10     	; 0xbb0 <__mulsf3_pse+0x82>
     bba:	86 95       	lsr	r24
     bbc:	77 95       	ror	r23
     bbe:	67 95       	ror	r22
     bc0:	b7 95       	ror	r27
     bc2:	f7 95       	ror	r31
     bc4:	e7 95       	ror	r30
     bc6:	9f 5f       	subi	r25, 0xFF	; 255
     bc8:	c1 f7       	brne	.-16     	; 0xbba <__mulsf3_pse+0x8c>
     bca:	fe 2b       	or	r31, r30
     bcc:	88 0f       	add	r24, r24
     bce:	91 1d       	adc	r25, r1
     bd0:	96 95       	lsr	r25
     bd2:	87 95       	ror	r24
     bd4:	97 f9       	bld	r25, 7
     bd6:	08 95       	ret

00000bd8 <atof>:
     bd8:	66 27       	eor	r22, r22
     bda:	77 27       	eor	r23, r23
     bdc:	0c 94 16 08 	jmp	0x102c	; 0x102c <strtod>

00000be0 <atoi>:
     be0:	fc 01       	movw	r30, r24
     be2:	88 27       	eor	r24, r24
     be4:	99 27       	eor	r25, r25
     be6:	e8 94       	clt
     be8:	21 91       	ld	r18, Z+
     bea:	20 32       	cpi	r18, 0x20	; 32
     bec:	e9 f3       	breq	.-6      	; 0xbe8 <atoi+0x8>
     bee:	29 30       	cpi	r18, 0x09	; 9
     bf0:	10 f0       	brcs	.+4      	; 0xbf6 <atoi+0x16>
     bf2:	2e 30       	cpi	r18, 0x0E	; 14
     bf4:	c8 f3       	brcs	.-14     	; 0xbe8 <atoi+0x8>
     bf6:	2b 32       	cpi	r18, 0x2B	; 43
     bf8:	41 f0       	breq	.+16     	; 0xc0a <atoi+0x2a>
     bfa:	2d 32       	cpi	r18, 0x2D	; 45
     bfc:	39 f4       	brne	.+14     	; 0xc0c <atoi+0x2c>
     bfe:	68 94       	set
     c00:	04 c0       	rjmp	.+8      	; 0xc0a <atoi+0x2a>
     c02:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__mulhi_const_10>
     c06:	82 0f       	add	r24, r18
     c08:	91 1d       	adc	r25, r1
     c0a:	21 91       	ld	r18, Z+
     c0c:	20 53       	subi	r18, 0x30	; 48
     c0e:	2a 30       	cpi	r18, 0x0A	; 10
     c10:	c0 f3       	brcs	.-16     	; 0xc02 <atoi+0x22>
     c12:	1e f4       	brtc	.+6      	; 0xc1a <atoi+0x3a>
     c14:	90 95       	com	r25
     c16:	81 95       	neg	r24
     c18:	9f 4f       	sbci	r25, 0xFF	; 255
     c1a:	08 95       	ret

00000c1c <__mulhi_const_10>:
     c1c:	7a e0       	ldi	r23, 0x0A	; 10
     c1e:	97 9f       	mul	r25, r23
     c20:	90 2d       	mov	r25, r0
     c22:	87 9f       	mul	r24, r23
     c24:	80 2d       	mov	r24, r0
     c26:	91 0d       	add	r25, r1
     c28:	11 24       	eor	r1, r1
     c2a:	08 95       	ret

00000c2c <sprintf>:
     c2c:	ae e0       	ldi	r26, 0x0E	; 14
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	ec e1       	ldi	r30, 0x1C	; 28
     c32:	f6 e0       	ldi	r31, 0x06	; 6
     c34:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__prologue_saves__+0x1c>
     c38:	0d 89       	ldd	r16, Y+21	; 0x15
     c3a:	1e 89       	ldd	r17, Y+22	; 0x16
     c3c:	86 e0       	ldi	r24, 0x06	; 6
     c3e:	8c 83       	std	Y+4, r24	; 0x04
     c40:	1a 83       	std	Y+2, r17	; 0x02
     c42:	09 83       	std	Y+1, r16	; 0x01
     c44:	8f ef       	ldi	r24, 0xFF	; 255
     c46:	9f e7       	ldi	r25, 0x7F	; 127
     c48:	9e 83       	std	Y+6, r25	; 0x06
     c4a:	8d 83       	std	Y+5, r24	; 0x05
     c4c:	ae 01       	movw	r20, r28
     c4e:	47 5e       	subi	r20, 0xE7	; 231
     c50:	5f 4f       	sbci	r21, 0xFF	; 255
     c52:	ce 01       	movw	r24, r28
     c54:	01 96       	adiw	r24, 0x01	; 1
     c56:	6f 89       	ldd	r22, Y+23	; 0x17
     c58:	78 8d       	ldd	r23, Y+24	; 0x18
     c5a:	0e 94 38 06 	call	0xc70	; 0xc70 <vfprintf>
     c5e:	ef 81       	ldd	r30, Y+7	; 0x07
     c60:	f8 85       	ldd	r31, Y+8	; 0x08
     c62:	e0 0f       	add	r30, r16
     c64:	f1 1f       	adc	r31, r17
     c66:	10 82       	st	Z, r1
     c68:	2e 96       	adiw	r28, 0x0e	; 14
     c6a:	e4 e0       	ldi	r30, 0x04	; 4
     c6c:	0c 94 6d 0a 	jmp	0x14da	; 0x14da <__epilogue_restores__+0x1c>

00000c70 <vfprintf>:
     c70:	ad e0       	ldi	r26, 0x0D	; 13
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	ee e3       	ldi	r30, 0x3E	; 62
     c76:	f6 e0       	ldi	r31, 0x06	; 6
     c78:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <__prologue_saves__>
     c7c:	3c 01       	movw	r6, r24
     c7e:	7d 87       	std	Y+13, r23	; 0x0d
     c80:	6c 87       	std	Y+12, r22	; 0x0c
     c82:	5a 01       	movw	r10, r20
     c84:	fc 01       	movw	r30, r24
     c86:	17 82       	std	Z+7, r1	; 0x07
     c88:	16 82       	std	Z+6, r1	; 0x06
     c8a:	83 81       	ldd	r24, Z+3	; 0x03
     c8c:	81 ff       	sbrs	r24, 1
     c8e:	c8 c1       	rjmp	.+912    	; 0x1020 <vfprintf+0x3b0>
     c90:	2e 01       	movw	r4, r28
     c92:	08 94       	sec
     c94:	41 1c       	adc	r4, r1
     c96:	51 1c       	adc	r5, r1
     c98:	f3 01       	movw	r30, r6
     c9a:	93 81       	ldd	r25, Z+3	; 0x03
     c9c:	ec 85       	ldd	r30, Y+12	; 0x0c
     c9e:	fd 85       	ldd	r31, Y+13	; 0x0d
     ca0:	93 fd       	sbrc	r25, 3
     ca2:	85 91       	lpm	r24, Z+
     ca4:	93 ff       	sbrs	r25, 3
     ca6:	81 91       	ld	r24, Z+
     ca8:	fd 87       	std	Y+13, r31	; 0x0d
     caa:	ec 87       	std	Y+12, r30	; 0x0c
     cac:	88 23       	and	r24, r24
     cae:	09 f4       	brne	.+2      	; 0xcb2 <vfprintf+0x42>
     cb0:	b3 c1       	rjmp	.+870    	; 0x1018 <vfprintf+0x3a8>
     cb2:	85 32       	cpi	r24, 0x25	; 37
     cb4:	41 f4       	brne	.+16     	; 0xcc6 <vfprintf+0x56>
     cb6:	93 fd       	sbrc	r25, 3
     cb8:	85 91       	lpm	r24, Z+
     cba:	93 ff       	sbrs	r25, 3
     cbc:	81 91       	ld	r24, Z+
     cbe:	fd 87       	std	Y+13, r31	; 0x0d
     cc0:	ec 87       	std	Y+12, r30	; 0x0c
     cc2:	85 32       	cpi	r24, 0x25	; 37
     cc4:	29 f4       	brne	.+10     	; 0xcd0 <vfprintf+0x60>
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	b3 01       	movw	r22, r6
     cca:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     cce:	e4 cf       	rjmp	.-56     	; 0xc98 <vfprintf+0x28>
     cd0:	ff 24       	eor	r15, r15
     cd2:	ee 24       	eor	r14, r14
     cd4:	10 e0       	ldi	r17, 0x00	; 0
     cd6:	10 32       	cpi	r17, 0x20	; 32
     cd8:	b0 f4       	brcc	.+44     	; 0xd06 <vfprintf+0x96>
     cda:	8b 32       	cpi	r24, 0x2B	; 43
     cdc:	69 f0       	breq	.+26     	; 0xcf8 <vfprintf+0x88>
     cde:	8c 32       	cpi	r24, 0x2C	; 44
     ce0:	28 f4       	brcc	.+10     	; 0xcec <vfprintf+0x7c>
     ce2:	80 32       	cpi	r24, 0x20	; 32
     ce4:	51 f0       	breq	.+20     	; 0xcfa <vfprintf+0x8a>
     ce6:	83 32       	cpi	r24, 0x23	; 35
     ce8:	71 f4       	brne	.+28     	; 0xd06 <vfprintf+0x96>
     cea:	0b c0       	rjmp	.+22     	; 0xd02 <vfprintf+0x92>
     cec:	8d 32       	cpi	r24, 0x2D	; 45
     cee:	39 f0       	breq	.+14     	; 0xcfe <vfprintf+0x8e>
     cf0:	80 33       	cpi	r24, 0x30	; 48
     cf2:	49 f4       	brne	.+18     	; 0xd06 <vfprintf+0x96>
     cf4:	11 60       	ori	r17, 0x01	; 1
     cf6:	2c c0       	rjmp	.+88     	; 0xd50 <vfprintf+0xe0>
     cf8:	12 60       	ori	r17, 0x02	; 2
     cfa:	14 60       	ori	r17, 0x04	; 4
     cfc:	29 c0       	rjmp	.+82     	; 0xd50 <vfprintf+0xe0>
     cfe:	18 60       	ori	r17, 0x08	; 8
     d00:	27 c0       	rjmp	.+78     	; 0xd50 <vfprintf+0xe0>
     d02:	10 61       	ori	r17, 0x10	; 16
     d04:	25 c0       	rjmp	.+74     	; 0xd50 <vfprintf+0xe0>
     d06:	17 fd       	sbrc	r17, 7
     d08:	2e c0       	rjmp	.+92     	; 0xd66 <vfprintf+0xf6>
     d0a:	28 2f       	mov	r18, r24
     d0c:	20 53       	subi	r18, 0x30	; 48
     d0e:	2a 30       	cpi	r18, 0x0A	; 10
     d10:	98 f4       	brcc	.+38     	; 0xd38 <vfprintf+0xc8>
     d12:	16 ff       	sbrs	r17, 6
     d14:	08 c0       	rjmp	.+16     	; 0xd26 <vfprintf+0xb6>
     d16:	8f 2d       	mov	r24, r15
     d18:	88 0f       	add	r24, r24
     d1a:	f8 2e       	mov	r15, r24
     d1c:	ff 0c       	add	r15, r15
     d1e:	ff 0c       	add	r15, r15
     d20:	f8 0e       	add	r15, r24
     d22:	f2 0e       	add	r15, r18
     d24:	15 c0       	rjmp	.+42     	; 0xd50 <vfprintf+0xe0>
     d26:	8e 2d       	mov	r24, r14
     d28:	88 0f       	add	r24, r24
     d2a:	e8 2e       	mov	r14, r24
     d2c:	ee 0c       	add	r14, r14
     d2e:	ee 0c       	add	r14, r14
     d30:	e8 0e       	add	r14, r24
     d32:	e2 0e       	add	r14, r18
     d34:	10 62       	ori	r17, 0x20	; 32
     d36:	0c c0       	rjmp	.+24     	; 0xd50 <vfprintf+0xe0>
     d38:	8e 32       	cpi	r24, 0x2E	; 46
     d3a:	21 f4       	brne	.+8      	; 0xd44 <vfprintf+0xd4>
     d3c:	16 fd       	sbrc	r17, 6
     d3e:	6c c1       	rjmp	.+728    	; 0x1018 <vfprintf+0x3a8>
     d40:	10 64       	ori	r17, 0x40	; 64
     d42:	06 c0       	rjmp	.+12     	; 0xd50 <vfprintf+0xe0>
     d44:	8c 36       	cpi	r24, 0x6C	; 108
     d46:	11 f4       	brne	.+4      	; 0xd4c <vfprintf+0xdc>
     d48:	10 68       	ori	r17, 0x80	; 128
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0xe0>
     d4c:	88 36       	cpi	r24, 0x68	; 104
     d4e:	59 f4       	brne	.+22     	; 0xd66 <vfprintf+0xf6>
     d50:	ec 85       	ldd	r30, Y+12	; 0x0c
     d52:	fd 85       	ldd	r31, Y+13	; 0x0d
     d54:	93 fd       	sbrc	r25, 3
     d56:	85 91       	lpm	r24, Z+
     d58:	93 ff       	sbrs	r25, 3
     d5a:	81 91       	ld	r24, Z+
     d5c:	fd 87       	std	Y+13, r31	; 0x0d
     d5e:	ec 87       	std	Y+12, r30	; 0x0c
     d60:	88 23       	and	r24, r24
     d62:	09 f0       	breq	.+2      	; 0xd66 <vfprintf+0xf6>
     d64:	b8 cf       	rjmp	.-144    	; 0xcd6 <vfprintf+0x66>
     d66:	98 2f       	mov	r25, r24
     d68:	95 54       	subi	r25, 0x45	; 69
     d6a:	93 30       	cpi	r25, 0x03	; 3
     d6c:	18 f0       	brcs	.+6      	; 0xd74 <vfprintf+0x104>
     d6e:	90 52       	subi	r25, 0x20	; 32
     d70:	93 30       	cpi	r25, 0x03	; 3
     d72:	38 f4       	brcc	.+14     	; 0xd82 <vfprintf+0x112>
     d74:	24 e0       	ldi	r18, 0x04	; 4
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	a2 0e       	add	r10, r18
     d7a:	b3 1e       	adc	r11, r19
     d7c:	3f e3       	ldi	r19, 0x3F	; 63
     d7e:	39 83       	std	Y+1, r19	; 0x01
     d80:	0f c0       	rjmp	.+30     	; 0xda0 <vfprintf+0x130>
     d82:	83 36       	cpi	r24, 0x63	; 99
     d84:	31 f0       	breq	.+12     	; 0xd92 <vfprintf+0x122>
     d86:	83 37       	cpi	r24, 0x73	; 115
     d88:	81 f0       	breq	.+32     	; 0xdaa <vfprintf+0x13a>
     d8a:	83 35       	cpi	r24, 0x53	; 83
     d8c:	09 f0       	breq	.+2      	; 0xd90 <vfprintf+0x120>
     d8e:	5a c0       	rjmp	.+180    	; 0xe44 <vfprintf+0x1d4>
     d90:	22 c0       	rjmp	.+68     	; 0xdd6 <vfprintf+0x166>
     d92:	f5 01       	movw	r30, r10
     d94:	80 81       	ld	r24, Z
     d96:	89 83       	std	Y+1, r24	; 0x01
     d98:	22 e0       	ldi	r18, 0x02	; 2
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	a2 0e       	add	r10, r18
     d9e:	b3 1e       	adc	r11, r19
     da0:	21 e0       	ldi	r18, 0x01	; 1
     da2:	c2 2e       	mov	r12, r18
     da4:	d1 2c       	mov	r13, r1
     da6:	42 01       	movw	r8, r4
     da8:	14 c0       	rjmp	.+40     	; 0xdd2 <vfprintf+0x162>
     daa:	92 e0       	ldi	r25, 0x02	; 2
     dac:	29 2e       	mov	r2, r25
     dae:	31 2c       	mov	r3, r1
     db0:	2a 0c       	add	r2, r10
     db2:	3b 1c       	adc	r3, r11
     db4:	f5 01       	movw	r30, r10
     db6:	80 80       	ld	r8, Z
     db8:	91 80       	ldd	r9, Z+1	; 0x01
     dba:	16 ff       	sbrs	r17, 6
     dbc:	03 c0       	rjmp	.+6      	; 0xdc4 <vfprintf+0x154>
     dbe:	6f 2d       	mov	r22, r15
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <vfprintf+0x158>
     dc4:	6f ef       	ldi	r22, 0xFF	; 255
     dc6:	7f ef       	ldi	r23, 0xFF	; 255
     dc8:	c4 01       	movw	r24, r8
     dca:	0e 94 ab 09 	call	0x1356	; 0x1356 <strnlen>
     dce:	6c 01       	movw	r12, r24
     dd0:	51 01       	movw	r10, r2
     dd2:	1f 77       	andi	r17, 0x7F	; 127
     dd4:	15 c0       	rjmp	.+42     	; 0xe00 <vfprintf+0x190>
     dd6:	82 e0       	ldi	r24, 0x02	; 2
     dd8:	28 2e       	mov	r2, r24
     dda:	31 2c       	mov	r3, r1
     ddc:	2a 0c       	add	r2, r10
     dde:	3b 1c       	adc	r3, r11
     de0:	f5 01       	movw	r30, r10
     de2:	80 80       	ld	r8, Z
     de4:	91 80       	ldd	r9, Z+1	; 0x01
     de6:	16 ff       	sbrs	r17, 6
     de8:	03 c0       	rjmp	.+6      	; 0xdf0 <vfprintf+0x180>
     dea:	6f 2d       	mov	r22, r15
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	02 c0       	rjmp	.+4      	; 0xdf4 <vfprintf+0x184>
     df0:	6f ef       	ldi	r22, 0xFF	; 255
     df2:	7f ef       	ldi	r23, 0xFF	; 255
     df4:	c4 01       	movw	r24, r8
     df6:	0e 94 a0 09 	call	0x1340	; 0x1340 <strnlen_P>
     dfa:	6c 01       	movw	r12, r24
     dfc:	10 68       	ori	r17, 0x80	; 128
     dfe:	51 01       	movw	r10, r2
     e00:	13 fd       	sbrc	r17, 3
     e02:	1c c0       	rjmp	.+56     	; 0xe3c <vfprintf+0x1cc>
     e04:	06 c0       	rjmp	.+12     	; 0xe12 <vfprintf+0x1a2>
     e06:	80 e2       	ldi	r24, 0x20	; 32
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	b3 01       	movw	r22, r6
     e0c:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     e10:	ea 94       	dec	r14
     e12:	8e 2d       	mov	r24, r14
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	c8 16       	cp	r12, r24
     e18:	d9 06       	cpc	r13, r25
     e1a:	a8 f3       	brcs	.-22     	; 0xe06 <vfprintf+0x196>
     e1c:	0f c0       	rjmp	.+30     	; 0xe3c <vfprintf+0x1cc>
     e1e:	f4 01       	movw	r30, r8
     e20:	17 fd       	sbrc	r17, 7
     e22:	85 91       	lpm	r24, Z+
     e24:	17 ff       	sbrs	r17, 7
     e26:	81 91       	ld	r24, Z+
     e28:	4f 01       	movw	r8, r30
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	b3 01       	movw	r22, r6
     e2e:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     e32:	e1 10       	cpse	r14, r1
     e34:	ea 94       	dec	r14
     e36:	08 94       	sec
     e38:	c1 08       	sbc	r12, r1
     e3a:	d1 08       	sbc	r13, r1
     e3c:	c1 14       	cp	r12, r1
     e3e:	d1 04       	cpc	r13, r1
     e40:	71 f7       	brne	.-36     	; 0xe1e <vfprintf+0x1ae>
     e42:	e7 c0       	rjmp	.+462    	; 0x1012 <vfprintf+0x3a2>
     e44:	84 36       	cpi	r24, 0x64	; 100
     e46:	11 f0       	breq	.+4      	; 0xe4c <vfprintf+0x1dc>
     e48:	89 36       	cpi	r24, 0x69	; 105
     e4a:	51 f5       	brne	.+84     	; 0xea0 <vfprintf+0x230>
     e4c:	f5 01       	movw	r30, r10
     e4e:	17 ff       	sbrs	r17, 7
     e50:	07 c0       	rjmp	.+14     	; 0xe60 <vfprintf+0x1f0>
     e52:	80 81       	ld	r24, Z
     e54:	91 81       	ldd	r25, Z+1	; 0x01
     e56:	a2 81       	ldd	r26, Z+2	; 0x02
     e58:	b3 81       	ldd	r27, Z+3	; 0x03
     e5a:	24 e0       	ldi	r18, 0x04	; 4
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	08 c0       	rjmp	.+16     	; 0xe70 <vfprintf+0x200>
     e60:	80 81       	ld	r24, Z
     e62:	91 81       	ldd	r25, Z+1	; 0x01
     e64:	aa 27       	eor	r26, r26
     e66:	97 fd       	sbrc	r25, 7
     e68:	a0 95       	com	r26
     e6a:	ba 2f       	mov	r27, r26
     e6c:	22 e0       	ldi	r18, 0x02	; 2
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	a2 0e       	add	r10, r18
     e72:	b3 1e       	adc	r11, r19
     e74:	01 2f       	mov	r16, r17
     e76:	0f 76       	andi	r16, 0x6F	; 111
     e78:	b7 ff       	sbrs	r27, 7
     e7a:	08 c0       	rjmp	.+16     	; 0xe8c <vfprintf+0x21c>
     e7c:	b0 95       	com	r27
     e7e:	a0 95       	com	r26
     e80:	90 95       	com	r25
     e82:	81 95       	neg	r24
     e84:	9f 4f       	sbci	r25, 0xFF	; 255
     e86:	af 4f       	sbci	r26, 0xFF	; 255
     e88:	bf 4f       	sbci	r27, 0xFF	; 255
     e8a:	00 68       	ori	r16, 0x80	; 128
     e8c:	bc 01       	movw	r22, r24
     e8e:	cd 01       	movw	r24, r26
     e90:	a2 01       	movw	r20, r4
     e92:	2a e0       	ldi	r18, 0x0A	; 10
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <__ultoa_invert>
     e9a:	d8 2e       	mov	r13, r24
     e9c:	d4 18       	sub	r13, r4
     e9e:	3f c0       	rjmp	.+126    	; 0xf1e <vfprintf+0x2ae>
     ea0:	85 37       	cpi	r24, 0x75	; 117
     ea2:	21 f4       	brne	.+8      	; 0xeac <vfprintf+0x23c>
     ea4:	1f 7e       	andi	r17, 0xEF	; 239
     ea6:	2a e0       	ldi	r18, 0x0A	; 10
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	20 c0       	rjmp	.+64     	; 0xeec <vfprintf+0x27c>
     eac:	19 7f       	andi	r17, 0xF9	; 249
     eae:	8f 36       	cpi	r24, 0x6F	; 111
     eb0:	a9 f0       	breq	.+42     	; 0xedc <vfprintf+0x26c>
     eb2:	80 37       	cpi	r24, 0x70	; 112
     eb4:	20 f4       	brcc	.+8      	; 0xebe <vfprintf+0x24e>
     eb6:	88 35       	cpi	r24, 0x58	; 88
     eb8:	09 f0       	breq	.+2      	; 0xebc <vfprintf+0x24c>
     eba:	ae c0       	rjmp	.+348    	; 0x1018 <vfprintf+0x3a8>
     ebc:	0b c0       	rjmp	.+22     	; 0xed4 <vfprintf+0x264>
     ebe:	80 37       	cpi	r24, 0x70	; 112
     ec0:	21 f0       	breq	.+8      	; 0xeca <vfprintf+0x25a>
     ec2:	88 37       	cpi	r24, 0x78	; 120
     ec4:	09 f0       	breq	.+2      	; 0xec8 <vfprintf+0x258>
     ec6:	a8 c0       	rjmp	.+336    	; 0x1018 <vfprintf+0x3a8>
     ec8:	01 c0       	rjmp	.+2      	; 0xecc <vfprintf+0x25c>
     eca:	10 61       	ori	r17, 0x10	; 16
     ecc:	14 ff       	sbrs	r17, 4
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <vfprintf+0x272>
     ed0:	14 60       	ori	r17, 0x04	; 4
     ed2:	07 c0       	rjmp	.+14     	; 0xee2 <vfprintf+0x272>
     ed4:	14 ff       	sbrs	r17, 4
     ed6:	08 c0       	rjmp	.+16     	; 0xee8 <vfprintf+0x278>
     ed8:	16 60       	ori	r17, 0x06	; 6
     eda:	06 c0       	rjmp	.+12     	; 0xee8 <vfprintf+0x278>
     edc:	28 e0       	ldi	r18, 0x08	; 8
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <vfprintf+0x27c>
     ee2:	20 e1       	ldi	r18, 0x10	; 16
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <vfprintf+0x27c>
     ee8:	20 e1       	ldi	r18, 0x10	; 16
     eea:	32 e0       	ldi	r19, 0x02	; 2
     eec:	f5 01       	movw	r30, r10
     eee:	17 ff       	sbrs	r17, 7
     ef0:	07 c0       	rjmp	.+14     	; 0xf00 <vfprintf+0x290>
     ef2:	60 81       	ld	r22, Z
     ef4:	71 81       	ldd	r23, Z+1	; 0x01
     ef6:	82 81       	ldd	r24, Z+2	; 0x02
     ef8:	93 81       	ldd	r25, Z+3	; 0x03
     efa:	44 e0       	ldi	r20, 0x04	; 4
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0x29c>
     f00:	60 81       	ld	r22, Z
     f02:	71 81       	ldd	r23, Z+1	; 0x01
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	42 e0       	ldi	r20, 0x02	; 2
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	a4 0e       	add	r10, r20
     f0e:	b5 1e       	adc	r11, r21
     f10:	a2 01       	movw	r20, r4
     f12:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <__ultoa_invert>
     f16:	d8 2e       	mov	r13, r24
     f18:	d4 18       	sub	r13, r4
     f1a:	01 2f       	mov	r16, r17
     f1c:	0f 77       	andi	r16, 0x7F	; 127
     f1e:	06 ff       	sbrs	r16, 6
     f20:	09 c0       	rjmp	.+18     	; 0xf34 <vfprintf+0x2c4>
     f22:	0e 7f       	andi	r16, 0xFE	; 254
     f24:	df 14       	cp	r13, r15
     f26:	30 f4       	brcc	.+12     	; 0xf34 <vfprintf+0x2c4>
     f28:	04 ff       	sbrs	r16, 4
     f2a:	06 c0       	rjmp	.+12     	; 0xf38 <vfprintf+0x2c8>
     f2c:	02 fd       	sbrc	r16, 2
     f2e:	04 c0       	rjmp	.+8      	; 0xf38 <vfprintf+0x2c8>
     f30:	0f 7e       	andi	r16, 0xEF	; 239
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <vfprintf+0x2c8>
     f34:	1d 2d       	mov	r17, r13
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <vfprintf+0x2ca>
     f38:	1f 2d       	mov	r17, r15
     f3a:	80 2f       	mov	r24, r16
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	04 ff       	sbrs	r16, 4
     f40:	0c c0       	rjmp	.+24     	; 0xf5a <vfprintf+0x2ea>
     f42:	fe 01       	movw	r30, r28
     f44:	ed 0d       	add	r30, r13
     f46:	f1 1d       	adc	r31, r1
     f48:	20 81       	ld	r18, Z
     f4a:	20 33       	cpi	r18, 0x30	; 48
     f4c:	11 f4       	brne	.+4      	; 0xf52 <vfprintf+0x2e2>
     f4e:	09 7e       	andi	r16, 0xE9	; 233
     f50:	09 c0       	rjmp	.+18     	; 0xf64 <vfprintf+0x2f4>
     f52:	02 ff       	sbrs	r16, 2
     f54:	06 c0       	rjmp	.+12     	; 0xf62 <vfprintf+0x2f2>
     f56:	1e 5f       	subi	r17, 0xFE	; 254
     f58:	05 c0       	rjmp	.+10     	; 0xf64 <vfprintf+0x2f4>
     f5a:	86 78       	andi	r24, 0x86	; 134
     f5c:	90 70       	andi	r25, 0x00	; 0
     f5e:	00 97       	sbiw	r24, 0x00	; 0
     f60:	09 f0       	breq	.+2      	; 0xf64 <vfprintf+0x2f4>
     f62:	1f 5f       	subi	r17, 0xFF	; 255
     f64:	80 2e       	mov	r8, r16
     f66:	99 24       	eor	r9, r9
     f68:	03 fd       	sbrc	r16, 3
     f6a:	12 c0       	rjmp	.+36     	; 0xf90 <vfprintf+0x320>
     f6c:	00 ff       	sbrs	r16, 0
     f6e:	0d c0       	rjmp	.+26     	; 0xf8a <vfprintf+0x31a>
     f70:	fd 2c       	mov	r15, r13
     f72:	1e 15       	cp	r17, r14
     f74:	50 f4       	brcc	.+20     	; 0xf8a <vfprintf+0x31a>
     f76:	fe 0c       	add	r15, r14
     f78:	f1 1a       	sub	r15, r17
     f7a:	1e 2d       	mov	r17, r14
     f7c:	06 c0       	rjmp	.+12     	; 0xf8a <vfprintf+0x31a>
     f7e:	80 e2       	ldi	r24, 0x20	; 32
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	b3 01       	movw	r22, r6
     f84:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     f88:	1f 5f       	subi	r17, 0xFF	; 255
     f8a:	1e 15       	cp	r17, r14
     f8c:	c0 f3       	brcs	.-16     	; 0xf7e <vfprintf+0x30e>
     f8e:	04 c0       	rjmp	.+8      	; 0xf98 <vfprintf+0x328>
     f90:	1e 15       	cp	r17, r14
     f92:	10 f4       	brcc	.+4      	; 0xf98 <vfprintf+0x328>
     f94:	e1 1a       	sub	r14, r17
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <vfprintf+0x32a>
     f98:	ee 24       	eor	r14, r14
     f9a:	84 fe       	sbrs	r8, 4
     f9c:	0f c0       	rjmp	.+30     	; 0xfbc <vfprintf+0x34c>
     f9e:	80 e3       	ldi	r24, 0x30	; 48
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	b3 01       	movw	r22, r6
     fa4:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     fa8:	82 fe       	sbrs	r8, 2
     faa:	1f c0       	rjmp	.+62     	; 0xfea <vfprintf+0x37a>
     fac:	81 fe       	sbrs	r8, 1
     fae:	03 c0       	rjmp	.+6      	; 0xfb6 <vfprintf+0x346>
     fb0:	88 e5       	ldi	r24, 0x58	; 88
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	10 c0       	rjmp	.+32     	; 0xfd6 <vfprintf+0x366>
     fb6:	88 e7       	ldi	r24, 0x78	; 120
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	0d c0       	rjmp	.+26     	; 0xfd6 <vfprintf+0x366>
     fbc:	c4 01       	movw	r24, r8
     fbe:	86 78       	andi	r24, 0x86	; 134
     fc0:	90 70       	andi	r25, 0x00	; 0
     fc2:	00 97       	sbiw	r24, 0x00	; 0
     fc4:	91 f0       	breq	.+36     	; 0xfea <vfprintf+0x37a>
     fc6:	81 fc       	sbrc	r8, 1
     fc8:	02 c0       	rjmp	.+4      	; 0xfce <vfprintf+0x35e>
     fca:	80 e2       	ldi	r24, 0x20	; 32
     fcc:	01 c0       	rjmp	.+2      	; 0xfd0 <vfprintf+0x360>
     fce:	8b e2       	ldi	r24, 0x2B	; 43
     fd0:	07 fd       	sbrc	r16, 7
     fd2:	8d e2       	ldi	r24, 0x2D	; 45
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	b3 01       	movw	r22, r6
     fd8:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     fdc:	06 c0       	rjmp	.+12     	; 0xfea <vfprintf+0x37a>
     fde:	80 e3       	ldi	r24, 0x30	; 48
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	b3 01       	movw	r22, r6
     fe4:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
     fe8:	fa 94       	dec	r15
     fea:	df 14       	cp	r13, r15
     fec:	c0 f3       	brcs	.-16     	; 0xfde <vfprintf+0x36e>
     fee:	da 94       	dec	r13
     ff0:	f2 01       	movw	r30, r4
     ff2:	ed 0d       	add	r30, r13
     ff4:	f1 1d       	adc	r31, r1
     ff6:	80 81       	ld	r24, Z
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	b3 01       	movw	r22, r6
     ffc:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
    1000:	dd 20       	and	r13, r13
    1002:	a9 f7       	brne	.-22     	; 0xfee <vfprintf+0x37e>
    1004:	06 c0       	rjmp	.+12     	; 0x1012 <vfprintf+0x3a2>
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	b3 01       	movw	r22, r6
    100c:	0e 94 b6 09 	call	0x136c	; 0x136c <fputc>
    1010:	ea 94       	dec	r14
    1012:	ee 20       	and	r14, r14
    1014:	c1 f7       	brne	.-16     	; 0x1006 <vfprintf+0x396>
    1016:	40 ce       	rjmp	.-896    	; 0xc98 <vfprintf+0x28>
    1018:	f3 01       	movw	r30, r6
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	97 81       	ldd	r25, Z+7	; 0x07
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <vfprintf+0x3b4>
    1020:	8f ef       	ldi	r24, 0xFF	; 255
    1022:	9f ef       	ldi	r25, 0xFF	; 255
    1024:	2d 96       	adiw	r28, 0x0d	; 13
    1026:	e2 e1       	ldi	r30, 0x12	; 18
    1028:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <__epilogue_restores__>

0000102c <strtod>:
    102c:	a0 e0       	ldi	r26, 0x00	; 0
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	ec e1       	ldi	r30, 0x1C	; 28
    1032:	f8 e0       	ldi	r31, 0x08	; 8
    1034:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__prologue_saves__+0x8>
    1038:	5b 01       	movw	r10, r22
    103a:	61 15       	cp	r22, r1
    103c:	71 05       	cpc	r23, r1
    103e:	21 f0       	breq	.+8      	; 0x1048 <strtod+0x1c>
    1040:	db 01       	movw	r26, r22
    1042:	8c 93       	st	X, r24
    1044:	11 96       	adiw	r26, 0x01	; 1
    1046:	9c 93       	st	X, r25
    1048:	7c 01       	movw	r14, r24
    104a:	e7 01       	movw	r28, r14
    104c:	08 94       	sec
    104e:	e1 1c       	adc	r14, r1
    1050:	f1 1c       	adc	r15, r1
    1052:	08 81       	ld	r16, Y
    1054:	67 01       	movw	r12, r14
    1056:	80 2f       	mov	r24, r16
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	0e 94 80 09 	call	0x1300	; 0x1300 <isspace>
    105e:	00 97       	sbiw	r24, 0x00	; 0
    1060:	a1 f7       	brne	.-24     	; 0x104a <strtod+0x1e>
    1062:	0d 32       	cpi	r16, 0x2D	; 45
    1064:	41 f4       	brne	.+16     	; 0x1076 <strtod+0x4a>
    1066:	09 81       	ldd	r16, Y+1	; 0x01
    1068:	42 e0       	ldi	r20, 0x02	; 2
    106a:	c4 2e       	mov	r12, r20
    106c:	d1 2c       	mov	r13, r1
    106e:	cc 0e       	add	r12, r28
    1070:	dd 1e       	adc	r13, r29
    1072:	11 e0       	ldi	r17, 0x01	; 1
    1074:	09 c0       	rjmp	.+18     	; 0x1088 <strtod+0x5c>
    1076:	0b 32       	cpi	r16, 0x2B	; 43
    1078:	31 f4       	brne	.+12     	; 0x1086 <strtod+0x5a>
    107a:	09 81       	ldd	r16, Y+1	; 0x01
    107c:	32 e0       	ldi	r19, 0x02	; 2
    107e:	c3 2e       	mov	r12, r19
    1080:	d1 2c       	mov	r13, r1
    1082:	cc 0e       	add	r12, r28
    1084:	dd 1e       	adc	r13, r29
    1086:	10 e0       	ldi	r17, 0x00	; 0
    1088:	e6 01       	movw	r28, r12
    108a:	21 97       	sbiw	r28, 0x01	; 1
    108c:	ce 01       	movw	r24, r28
    108e:	64 e5       	ldi	r22, 0x54	; 84
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	43 e0       	ldi	r20, 0x03	; 3
    1094:	50 e0       	ldi	r21, 0x00	; 0
    1096:	0e 94 88 09 	call	0x1310	; 0x1310 <strncasecmp_P>
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	d1 f4       	brne	.+52     	; 0x10d2 <strtod+0xa6>
    109e:	e6 01       	movw	r28, r12
    10a0:	22 96       	adiw	r28, 0x02	; 2
    10a2:	ce 01       	movw	r24, r28
    10a4:	67 e5       	ldi	r22, 0x57	; 87
    10a6:	70 e0       	ldi	r23, 0x00	; 0
    10a8:	45 e0       	ldi	r20, 0x05	; 5
    10aa:	50 e0       	ldi	r21, 0x00	; 0
    10ac:	0e 94 88 09 	call	0x1310	; 0x1310 <strncasecmp_P>
    10b0:	00 97       	sbiw	r24, 0x00	; 0
    10b2:	11 f4       	brne	.+4      	; 0x10b8 <strtod+0x8c>
    10b4:	e6 01       	movw	r28, r12
    10b6:	27 96       	adiw	r28, 0x07	; 7
    10b8:	a1 14       	cp	r10, r1
    10ba:	b1 04       	cpc	r11, r1
    10bc:	19 f0       	breq	.+6      	; 0x10c4 <strtod+0x98>
    10be:	f5 01       	movw	r30, r10
    10c0:	d1 83       	std	Z+1, r29	; 0x01
    10c2:	c0 83       	st	Z, r28
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	20 e0       	ldi	r18, 0x00	; 0
    10c8:	90 e8       	ldi	r25, 0x80	; 128
    10ca:	11 23       	and	r17, r17
    10cc:	09 f4       	brne	.+2      	; 0x10d0 <strtod+0xa4>
    10ce:	0a c1       	rjmp	.+532    	; 0x12e4 <strtod+0x2b8>
    10d0:	04 c1       	rjmp	.+520    	; 0x12da <strtod+0x2ae>
    10d2:	ce 01       	movw	r24, r28
    10d4:	6c e5       	ldi	r22, 0x5C	; 92
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	43 e0       	ldi	r20, 0x03	; 3
    10da:	50 e0       	ldi	r21, 0x00	; 0
    10dc:	0e 94 88 09 	call	0x1310	; 0x1310 <strncasecmp_P>
    10e0:	00 97       	sbiw	r24, 0x00	; 0
    10e2:	59 f4       	brne	.+22     	; 0x10fa <strtod+0xce>
    10e4:	a1 14       	cp	r10, r1
    10e6:	b1 04       	cpc	r11, r1
    10e8:	09 f4       	brne	.+2      	; 0x10ec <strtod+0xc0>
    10ea:	f9 c0       	rjmp	.+498    	; 0x12de <strtod+0x2b2>
    10ec:	c6 01       	movw	r24, r12
    10ee:	02 96       	adiw	r24, 0x02	; 2
    10f0:	d5 01       	movw	r26, r10
    10f2:	11 96       	adiw	r26, 0x01	; 1
    10f4:	9c 93       	st	X, r25
    10f6:	8e 93       	st	-X, r24
    10f8:	f2 c0       	rjmp	.+484    	; 0x12de <strtod+0x2b2>
    10fa:	40 e0       	ldi	r20, 0x00	; 0
    10fc:	50 e0       	ldi	r21, 0x00	; 0
    10fe:	ba 01       	movw	r22, r20
    1100:	88 24       	eor	r8, r8
    1102:	99 24       	eor	r9, r9
    1104:	00 53       	subi	r16, 0x30	; 48
    1106:	0a 30       	cpi	r16, 0x0A	; 10
    1108:	90 f5       	brcc	.+100    	; 0x116e <strtod+0x142>
    110a:	12 60       	ori	r17, 0x02	; 2
    110c:	21 2f       	mov	r18, r17
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	c9 01       	movw	r24, r18
    1112:	88 70       	andi	r24, 0x08	; 8
    1114:	90 70       	andi	r25, 0x00	; 0
    1116:	12 ff       	sbrs	r17, 2
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <strtod+0xfa>
    111a:	00 97       	sbiw	r24, 0x00	; 0
    111c:	69 f5       	brne	.+90     	; 0x1178 <strtod+0x14c>
    111e:	08 94       	sec
    1120:	81 1c       	adc	r8, r1
    1122:	91 1c       	adc	r9, r1
    1124:	29 c0       	rjmp	.+82     	; 0x1178 <strtod+0x14c>
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	19 f0       	breq	.+6      	; 0x1130 <strtod+0x104>
    112a:	08 94       	sec
    112c:	81 08       	sbc	r8, r1
    112e:	91 08       	sbc	r9, r1
    1130:	db 01       	movw	r26, r22
    1132:	ca 01       	movw	r24, r20
    1134:	d2 e0       	ldi	r29, 0x02	; 2
    1136:	88 0f       	add	r24, r24
    1138:	99 1f       	adc	r25, r25
    113a:	aa 1f       	adc	r26, r26
    113c:	bb 1f       	adc	r27, r27
    113e:	da 95       	dec	r29
    1140:	d1 f7       	brne	.-12     	; 0x1136 <strtod+0x10a>
    1142:	48 0f       	add	r20, r24
    1144:	59 1f       	adc	r21, r25
    1146:	6a 1f       	adc	r22, r26
    1148:	7b 1f       	adc	r23, r27
    114a:	44 0f       	add	r20, r20
    114c:	55 1f       	adc	r21, r21
    114e:	66 1f       	adc	r22, r22
    1150:	77 1f       	adc	r23, r23
    1152:	40 0f       	add	r20, r16
    1154:	51 1d       	adc	r21, r1
    1156:	61 1d       	adc	r22, r1
    1158:	71 1d       	adc	r23, r1
    115a:	48 39       	cpi	r20, 0x98	; 152
    115c:	b9 e9       	ldi	r27, 0x99	; 153
    115e:	5b 07       	cpc	r21, r27
    1160:	b9 e9       	ldi	r27, 0x99	; 153
    1162:	6b 07       	cpc	r22, r27
    1164:	b9 e1       	ldi	r27, 0x19	; 25
    1166:	7b 07       	cpc	r23, r27
    1168:	38 f0       	brcs	.+14     	; 0x1178 <strtod+0x14c>
    116a:	14 60       	ori	r17, 0x04	; 4
    116c:	05 c0       	rjmp	.+10     	; 0x1178 <strtod+0x14c>
    116e:	0e 3f       	cpi	r16, 0xFE	; 254
    1170:	39 f4       	brne	.+14     	; 0x1180 <strtod+0x154>
    1172:	13 fd       	sbrc	r17, 3
    1174:	43 c0       	rjmp	.+134    	; 0x11fc <strtod+0x1d0>
    1176:	18 60       	ori	r17, 0x08	; 8
    1178:	f6 01       	movw	r30, r12
    117a:	01 91       	ld	r16, Z+
    117c:	6f 01       	movw	r12, r30
    117e:	c2 cf       	rjmp	.-124    	; 0x1104 <strtod+0xd8>
    1180:	05 33       	cpi	r16, 0x35	; 53
    1182:	11 f0       	breq	.+4      	; 0x1188 <strtod+0x15c>
    1184:	05 31       	cpi	r16, 0x15	; 21
    1186:	d1 f5       	brne	.+116    	; 0x11fc <strtod+0x1d0>
    1188:	d6 01       	movw	r26, r12
    118a:	ec 91       	ld	r30, X
    118c:	ed 32       	cpi	r30, 0x2D	; 45
    118e:	11 f4       	brne	.+4      	; 0x1194 <strtod+0x168>
    1190:	10 61       	ori	r17, 0x10	; 16
    1192:	08 c0       	rjmp	.+16     	; 0x11a4 <strtod+0x178>
    1194:	eb 32       	cpi	r30, 0x2B	; 43
    1196:	29 f0       	breq	.+10     	; 0x11a2 <strtod+0x176>
    1198:	c6 01       	movw	r24, r12
    119a:	01 96       	adiw	r24, 0x01	; 1
    119c:	21 e0       	ldi	r18, 0x01	; 1
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	08 c0       	rjmp	.+16     	; 0x11b2 <strtod+0x186>
    11a2:	d6 01       	movw	r26, r12
    11a4:	11 96       	adiw	r26, 0x01	; 1
    11a6:	ec 91       	ld	r30, X
    11a8:	11 97       	sbiw	r26, 0x01	; 1
    11aa:	c6 01       	movw	r24, r12
    11ac:	02 96       	adiw	r24, 0x02	; 2
    11ae:	22 e0       	ldi	r18, 0x02	; 2
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	e0 53       	subi	r30, 0x30	; 48
    11b4:	ea 30       	cpi	r30, 0x0A	; 10
    11b6:	20 f0       	brcs	.+8      	; 0x11c0 <strtod+0x194>
    11b8:	6c 01       	movw	r12, r24
    11ba:	c2 1a       	sub	r12, r18
    11bc:	d3 0a       	sbc	r13, r19
    11be:	1e c0       	rjmp	.+60     	; 0x11fc <strtod+0x1d0>
    11c0:	dc 01       	movw	r26, r24
    11c2:	20 e0       	ldi	r18, 0x00	; 0
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	fc e0       	ldi	r31, 0x0C	; 12
    11c8:	20 38       	cpi	r18, 0x80	; 128
    11ca:	3f 07       	cpc	r19, r31
    11cc:	5c f4       	brge	.+22     	; 0x11e4 <strtod+0x1b8>
    11ce:	c9 01       	movw	r24, r18
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	88 0f       	add	r24, r24
    11d6:	99 1f       	adc	r25, r25
    11d8:	28 0f       	add	r18, r24
    11da:	39 1f       	adc	r19, r25
    11dc:	22 0f       	add	r18, r18
    11de:	33 1f       	adc	r19, r19
    11e0:	2e 0f       	add	r18, r30
    11e2:	31 1d       	adc	r19, r1
    11e4:	ed 91       	ld	r30, X+
    11e6:	e0 53       	subi	r30, 0x30	; 48
    11e8:	6d 01       	movw	r12, r26
    11ea:	ea 30       	cpi	r30, 0x0A	; 10
    11ec:	60 f3       	brcs	.-40     	; 0x11c6 <strtod+0x19a>
    11ee:	14 ff       	sbrs	r17, 4
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <strtod+0x1cc>
    11f2:	30 95       	com	r19
    11f4:	21 95       	neg	r18
    11f6:	3f 4f       	sbci	r19, 0xFF	; 255
    11f8:	82 0e       	add	r8, r18
    11fa:	93 1e       	adc	r9, r19
    11fc:	c1 2f       	mov	r28, r17
    11fe:	d0 e0       	ldi	r29, 0x00	; 0
    1200:	11 ff       	sbrs	r17, 1
    1202:	08 c0       	rjmp	.+16     	; 0x1214 <strtod+0x1e8>
    1204:	a1 14       	cp	r10, r1
    1206:	b1 04       	cpc	r11, r1
    1208:	29 f0       	breq	.+10     	; 0x1214 <strtod+0x1e8>
    120a:	c6 01       	movw	r24, r12
    120c:	01 97       	sbiw	r24, 0x01	; 1
    120e:	d5 01       	movw	r26, r10
    1210:	8d 93       	st	X+, r24
    1212:	9c 93       	st	X, r25
    1214:	cb 01       	movw	r24, r22
    1216:	ba 01       	movw	r22, r20
    1218:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__floatunsisf>
    121c:	6b 01       	movw	r12, r22
    121e:	7c 01       	movw	r14, r24
    1220:	ce 01       	movw	r24, r28
    1222:	83 70       	andi	r24, 0x03	; 3
    1224:	90 70       	andi	r25, 0x00	; 0
    1226:	83 30       	cpi	r24, 0x03	; 3
    1228:	91 05       	cpc	r25, r1
    122a:	21 f4       	brne	.+8      	; 0x1234 <strtod+0x208>
    122c:	f7 fa       	bst	r15, 7
    122e:	f0 94       	com	r15
    1230:	f7 f8       	bld	r15, 7
    1232:	f0 94       	com	r15
    1234:	c7 01       	movw	r24, r14
    1236:	b6 01       	movw	r22, r12
    1238:	20 e0       	ldi	r18, 0x00	; 0
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	a9 01       	movw	r20, r18
    123e:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
    1242:	88 23       	and	r24, r24
    1244:	09 f4       	brne	.+2      	; 0x1248 <strtod+0x21c>
    1246:	44 c0       	rjmp	.+136    	; 0x12d0 <strtod+0x2a4>
    1248:	97 fe       	sbrs	r9, 7
    124a:	07 c0       	rjmp	.+14     	; 0x125a <strtod+0x22e>
    124c:	90 94       	com	r9
    124e:	81 94       	neg	r8
    1250:	91 08       	sbc	r9, r1
    1252:	93 94       	inc	r9
    1254:	cb e8       	ldi	r28, 0x8B	; 139
    1256:	d0 e0       	ldi	r29, 0x00	; 0
    1258:	02 c0       	rjmp	.+4      	; 0x125e <strtod+0x232>
    125a:	c3 e7       	ldi	r28, 0x73	; 115
    125c:	d0 e0       	ldi	r29, 0x00	; 0
    125e:	98 ee       	ldi	r25, 0xE8	; 232
    1260:	69 2e       	mov	r6, r25
    1262:	9f ef       	ldi	r25, 0xFF	; 255
    1264:	79 2e       	mov	r7, r25
    1266:	6c 0e       	add	r6, r28
    1268:	7d 1e       	adc	r7, r29
    126a:	20 e2       	ldi	r18, 0x20	; 32
    126c:	a2 2e       	mov	r10, r18
    126e:	b1 2c       	mov	r11, r1
    1270:	0f c0       	rjmp	.+30     	; 0x1290 <strtod+0x264>
    1272:	fe 01       	movw	r30, r28
    1274:	05 91       	lpm	r16, Z+
    1276:	15 91       	lpm	r17, Z+
    1278:	25 91       	lpm	r18, Z+
    127a:	34 91       	lpm	r19, Z
    127c:	c7 01       	movw	r24, r14
    127e:	b6 01       	movw	r22, r12
    1280:	a9 01       	movw	r20, r18
    1282:	98 01       	movw	r18, r16
    1284:	0e 94 89 05 	call	0xb12	; 0xb12 <__mulsf3>
    1288:	6b 01       	movw	r12, r22
    128a:	7c 01       	movw	r14, r24
    128c:	8a 18       	sub	r8, r10
    128e:	9b 08       	sbc	r9, r11
    1290:	8a 14       	cp	r8, r10
    1292:	9b 04       	cpc	r9, r11
    1294:	74 f7       	brge	.-36     	; 0x1272 <strtod+0x246>
    1296:	24 97       	sbiw	r28, 0x04	; 4
    1298:	b5 94       	asr	r11
    129a:	a7 94       	ror	r10
    129c:	c6 15       	cp	r28, r6
    129e:	d7 05       	cpc	r29, r7
    12a0:	b9 f7       	brne	.-18     	; 0x1290 <strtod+0x264>
    12a2:	c6 01       	movw	r24, r12
    12a4:	d7 01       	movw	r26, r14
    12a6:	2a 2f       	mov	r18, r26
    12a8:	22 0f       	add	r18, r18
    12aa:	2b 2f       	mov	r18, r27
    12ac:	22 1f       	adc	r18, r18
    12ae:	2f 3f       	cpi	r18, 0xFF	; 255
    12b0:	49 f0       	breq	.+18     	; 0x12c4 <strtod+0x298>
    12b2:	bc 01       	movw	r22, r24
    12b4:	cd 01       	movw	r24, r26
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	a9 01       	movw	r20, r18
    12bc:	0e 94 3a 04 	call	0x874	; 0x874 <__cmpsf2>
    12c0:	88 23       	and	r24, r24
    12c2:	31 f4       	brne	.+12     	; 0x12d0 <strtod+0x2a4>
    12c4:	82 e2       	ldi	r24, 0x22	; 34
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	90 93 81 00 	sts	0x0081, r25
    12cc:	80 93 80 00 	sts	0x0080, r24
    12d0:	3c 2d       	mov	r19, r12
    12d2:	2d 2d       	mov	r18, r13
    12d4:	9e 2d       	mov	r25, r14
    12d6:	8f 2d       	mov	r24, r15
    12d8:	06 c0       	rjmp	.+12     	; 0x12e6 <strtod+0x2ba>
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	04 c0       	rjmp	.+8      	; 0x12e6 <strtod+0x2ba>
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	90 ec       	ldi	r25, 0xC0	; 192
    12e4:	8f e7       	ldi	r24, 0x7F	; 127
    12e6:	b9 01       	movw	r22, r18
    12e8:	ac 01       	movw	r20, r24
    12ea:	87 2f       	mov	r24, r23
    12ec:	92 2f       	mov	r25, r18
    12ee:	a5 2f       	mov	r26, r21
    12f0:	b4 2f       	mov	r27, r20
    12f2:	bc 01       	movw	r22, r24
    12f4:	cd 01       	movw	r24, r26
    12f6:	cd b7       	in	r28, 0x3d	; 61
    12f8:	de b7       	in	r29, 0x3e	; 62
    12fa:	ee e0       	ldi	r30, 0x0E	; 14
    12fc:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <__epilogue_restores__+0x8>

00001300 <isspace>:
    1300:	91 11       	cpse	r25, r1
    1302:	be c0       	rjmp	.+380    	; 0x1480 <__ctype_isfalse>
    1304:	80 32       	cpi	r24, 0x20	; 32
    1306:	19 f0       	breq	.+6      	; 0x130e <isspace+0xe>
    1308:	89 50       	subi	r24, 0x09	; 9
    130a:	85 50       	subi	r24, 0x05	; 5
    130c:	d0 f7       	brcc	.-12     	; 0x1302 <isspace+0x2>
    130e:	08 95       	ret

00001310 <strncasecmp_P>:
    1310:	fb 01       	movw	r30, r22
    1312:	dc 01       	movw	r26, r24
    1314:	41 50       	subi	r20, 0x01	; 1
    1316:	50 40       	sbci	r21, 0x00	; 0
    1318:	88 f0       	brcs	.+34     	; 0x133c <strncasecmp_P+0x2c>
    131a:	8d 91       	ld	r24, X+
    131c:	81 34       	cpi	r24, 0x41	; 65
    131e:	1c f0       	brlt	.+6      	; 0x1326 <strncasecmp_P+0x16>
    1320:	8b 35       	cpi	r24, 0x5B	; 91
    1322:	0c f4       	brge	.+2      	; 0x1326 <strncasecmp_P+0x16>
    1324:	80 5e       	subi	r24, 0xE0	; 224
    1326:	65 91       	lpm	r22, Z+
    1328:	61 34       	cpi	r22, 0x41	; 65
    132a:	1c f0       	brlt	.+6      	; 0x1332 <strncasecmp_P+0x22>
    132c:	6b 35       	cpi	r22, 0x5B	; 91
    132e:	0c f4       	brge	.+2      	; 0x1332 <strncasecmp_P+0x22>
    1330:	60 5e       	subi	r22, 0xE0	; 224
    1332:	86 1b       	sub	r24, r22
    1334:	61 11       	cpse	r22, r1
    1336:	71 f3       	breq	.-36     	; 0x1314 <strncasecmp_P+0x4>
    1338:	99 0b       	sbc	r25, r25
    133a:	08 95       	ret
    133c:	88 1b       	sub	r24, r24
    133e:	fc cf       	rjmp	.-8      	; 0x1338 <strncasecmp_P+0x28>

00001340 <strnlen_P>:
    1340:	fc 01       	movw	r30, r24
    1342:	05 90       	lpm	r0, Z+
    1344:	61 50       	subi	r22, 0x01	; 1
    1346:	70 40       	sbci	r23, 0x00	; 0
    1348:	01 10       	cpse	r0, r1
    134a:	d8 f7       	brcc	.-10     	; 0x1342 <strnlen_P+0x2>
    134c:	80 95       	com	r24
    134e:	90 95       	com	r25
    1350:	8e 0f       	add	r24, r30
    1352:	9f 1f       	adc	r25, r31
    1354:	08 95       	ret

00001356 <strnlen>:
    1356:	fc 01       	movw	r30, r24
    1358:	61 50       	subi	r22, 0x01	; 1
    135a:	70 40       	sbci	r23, 0x00	; 0
    135c:	01 90       	ld	r0, Z+
    135e:	01 10       	cpse	r0, r1
    1360:	d8 f7       	brcc	.-10     	; 0x1358 <strnlen+0x2>
    1362:	80 95       	com	r24
    1364:	90 95       	com	r25
    1366:	8e 0f       	add	r24, r30
    1368:	9f 1f       	adc	r25, r31
    136a:	08 95       	ret

0000136c <fputc>:
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	8c 01       	movw	r16, r24
    1376:	eb 01       	movw	r28, r22
    1378:	8b 81       	ldd	r24, Y+3	; 0x03
    137a:	81 ff       	sbrs	r24, 1
    137c:	1b c0       	rjmp	.+54     	; 0x13b4 <fputc+0x48>
    137e:	82 ff       	sbrs	r24, 2
    1380:	0d c0       	rjmp	.+26     	; 0x139c <fputc+0x30>
    1382:	2e 81       	ldd	r18, Y+6	; 0x06
    1384:	3f 81       	ldd	r19, Y+7	; 0x07
    1386:	8c 81       	ldd	r24, Y+4	; 0x04
    1388:	9d 81       	ldd	r25, Y+5	; 0x05
    138a:	28 17       	cp	r18, r24
    138c:	39 07       	cpc	r19, r25
    138e:	64 f4       	brge	.+24     	; 0x13a8 <fputc+0x3c>
    1390:	e8 81       	ld	r30, Y
    1392:	f9 81       	ldd	r31, Y+1	; 0x01
    1394:	01 93       	st	Z+, r16
    1396:	f9 83       	std	Y+1, r31	; 0x01
    1398:	e8 83       	st	Y, r30
    139a:	06 c0       	rjmp	.+12     	; 0x13a8 <fputc+0x3c>
    139c:	e8 85       	ldd	r30, Y+8	; 0x08
    139e:	f9 85       	ldd	r31, Y+9	; 0x09
    13a0:	80 2f       	mov	r24, r16
    13a2:	09 95       	icall
    13a4:	00 97       	sbiw	r24, 0x00	; 0
    13a6:	31 f4       	brne	.+12     	; 0x13b4 <fputc+0x48>
    13a8:	8e 81       	ldd	r24, Y+6	; 0x06
    13aa:	9f 81       	ldd	r25, Y+7	; 0x07
    13ac:	01 96       	adiw	r24, 0x01	; 1
    13ae:	9f 83       	std	Y+7, r25	; 0x07
    13b0:	8e 83       	std	Y+6, r24	; 0x06
    13b2:	02 c0       	rjmp	.+4      	; 0x13b8 <fputc+0x4c>
    13b4:	0f ef       	ldi	r16, 0xFF	; 255
    13b6:	1f ef       	ldi	r17, 0xFF	; 255
    13b8:	c8 01       	movw	r24, r16
    13ba:	df 91       	pop	r29
    13bc:	cf 91       	pop	r28
    13be:	1f 91       	pop	r17
    13c0:	0f 91       	pop	r16
    13c2:	08 95       	ret

000013c4 <__ultoa_invert>:
    13c4:	fa 01       	movw	r30, r20
    13c6:	aa 27       	eor	r26, r26
    13c8:	28 30       	cpi	r18, 0x08	; 8
    13ca:	51 f1       	breq	.+84     	; 0x1420 <__ultoa_invert+0x5c>
    13cc:	20 31       	cpi	r18, 0x10	; 16
    13ce:	81 f1       	breq	.+96     	; 0x1430 <__ultoa_invert+0x6c>
    13d0:	e8 94       	clt
    13d2:	6f 93       	push	r22
    13d4:	6e 7f       	andi	r22, 0xFE	; 254
    13d6:	6e 5f       	subi	r22, 0xFE	; 254
    13d8:	7f 4f       	sbci	r23, 0xFF	; 255
    13da:	8f 4f       	sbci	r24, 0xFF	; 255
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	af 4f       	sbci	r26, 0xFF	; 255
    13e0:	b1 e0       	ldi	r27, 0x01	; 1
    13e2:	3e d0       	rcall	.+124    	; 0x1460 <__ultoa_invert+0x9c>
    13e4:	b4 e0       	ldi	r27, 0x04	; 4
    13e6:	3c d0       	rcall	.+120    	; 0x1460 <__ultoa_invert+0x9c>
    13e8:	67 0f       	add	r22, r23
    13ea:	78 1f       	adc	r23, r24
    13ec:	89 1f       	adc	r24, r25
    13ee:	9a 1f       	adc	r25, r26
    13f0:	a1 1d       	adc	r26, r1
    13f2:	68 0f       	add	r22, r24
    13f4:	79 1f       	adc	r23, r25
    13f6:	8a 1f       	adc	r24, r26
    13f8:	91 1d       	adc	r25, r1
    13fa:	a1 1d       	adc	r26, r1
    13fc:	6a 0f       	add	r22, r26
    13fe:	71 1d       	adc	r23, r1
    1400:	81 1d       	adc	r24, r1
    1402:	91 1d       	adc	r25, r1
    1404:	a1 1d       	adc	r26, r1
    1406:	20 d0       	rcall	.+64     	; 0x1448 <__ultoa_invert+0x84>
    1408:	09 f4       	brne	.+2      	; 0x140c <__ultoa_invert+0x48>
    140a:	68 94       	set
    140c:	3f 91       	pop	r19
    140e:	2a e0       	ldi	r18, 0x0A	; 10
    1410:	26 9f       	mul	r18, r22
    1412:	11 24       	eor	r1, r1
    1414:	30 19       	sub	r19, r0
    1416:	30 5d       	subi	r19, 0xD0	; 208
    1418:	31 93       	st	Z+, r19
    141a:	de f6       	brtc	.-74     	; 0x13d2 <__ultoa_invert+0xe>
    141c:	cf 01       	movw	r24, r30
    141e:	08 95       	ret
    1420:	46 2f       	mov	r20, r22
    1422:	47 70       	andi	r20, 0x07	; 7
    1424:	40 5d       	subi	r20, 0xD0	; 208
    1426:	41 93       	st	Z+, r20
    1428:	b3 e0       	ldi	r27, 0x03	; 3
    142a:	0f d0       	rcall	.+30     	; 0x144a <__ultoa_invert+0x86>
    142c:	c9 f7       	brne	.-14     	; 0x1420 <__ultoa_invert+0x5c>
    142e:	f6 cf       	rjmp	.-20     	; 0x141c <__ultoa_invert+0x58>
    1430:	46 2f       	mov	r20, r22
    1432:	4f 70       	andi	r20, 0x0F	; 15
    1434:	40 5d       	subi	r20, 0xD0	; 208
    1436:	4a 33       	cpi	r20, 0x3A	; 58
    1438:	18 f0       	brcs	.+6      	; 0x1440 <__ultoa_invert+0x7c>
    143a:	49 5d       	subi	r20, 0xD9	; 217
    143c:	31 fd       	sbrc	r19, 1
    143e:	40 52       	subi	r20, 0x20	; 32
    1440:	41 93       	st	Z+, r20
    1442:	02 d0       	rcall	.+4      	; 0x1448 <__ultoa_invert+0x84>
    1444:	a9 f7       	brne	.-22     	; 0x1430 <__ultoa_invert+0x6c>
    1446:	ea cf       	rjmp	.-44     	; 0x141c <__ultoa_invert+0x58>
    1448:	b4 e0       	ldi	r27, 0x04	; 4
    144a:	a6 95       	lsr	r26
    144c:	97 95       	ror	r25
    144e:	87 95       	ror	r24
    1450:	77 95       	ror	r23
    1452:	67 95       	ror	r22
    1454:	ba 95       	dec	r27
    1456:	c9 f7       	brne	.-14     	; 0x144a <__ultoa_invert+0x86>
    1458:	00 97       	sbiw	r24, 0x00	; 0
    145a:	61 05       	cpc	r22, r1
    145c:	71 05       	cpc	r23, r1
    145e:	08 95       	ret
    1460:	9b 01       	movw	r18, r22
    1462:	ac 01       	movw	r20, r24
    1464:	0a 2e       	mov	r0, r26
    1466:	06 94       	lsr	r0
    1468:	57 95       	ror	r21
    146a:	47 95       	ror	r20
    146c:	37 95       	ror	r19
    146e:	27 95       	ror	r18
    1470:	ba 95       	dec	r27
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0xa2>
    1474:	62 0f       	add	r22, r18
    1476:	73 1f       	adc	r23, r19
    1478:	84 1f       	adc	r24, r20
    147a:	95 1f       	adc	r25, r21
    147c:	a0 1d       	adc	r26, r0
    147e:	08 95       	ret

00001480 <__ctype_isfalse>:
    1480:	99 27       	eor	r25, r25
    1482:	88 27       	eor	r24, r24

00001484 <__ctype_istrue>:
    1484:	08 95       	ret

00001486 <__prologue_saves__>:
    1486:	2f 92       	push	r2
    1488:	3f 92       	push	r3
    148a:	4f 92       	push	r4
    148c:	5f 92       	push	r5
    148e:	6f 92       	push	r6
    1490:	7f 92       	push	r7
    1492:	8f 92       	push	r8
    1494:	9f 92       	push	r9
    1496:	af 92       	push	r10
    1498:	bf 92       	push	r11
    149a:	cf 92       	push	r12
    149c:	df 92       	push	r13
    149e:	ef 92       	push	r14
    14a0:	ff 92       	push	r15
    14a2:	0f 93       	push	r16
    14a4:	1f 93       	push	r17
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	ca 1b       	sub	r28, r26
    14b0:	db 0b       	sbc	r29, r27
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	f8 94       	cli
    14b6:	de bf       	out	0x3e, r29	; 62
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	cd bf       	out	0x3d, r28	; 61
    14bc:	09 94       	ijmp

000014be <__epilogue_restores__>:
    14be:	2a 88       	ldd	r2, Y+18	; 0x12
    14c0:	39 88       	ldd	r3, Y+17	; 0x11
    14c2:	48 88       	ldd	r4, Y+16	; 0x10
    14c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    14c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    14c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    14cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    14ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    14d0:	b9 84       	ldd	r11, Y+9	; 0x09
    14d2:	c8 84       	ldd	r12, Y+8	; 0x08
    14d4:	df 80       	ldd	r13, Y+7	; 0x07
    14d6:	ee 80       	ldd	r14, Y+6	; 0x06
    14d8:	fd 80       	ldd	r15, Y+5	; 0x05
    14da:	0c 81       	ldd	r16, Y+4	; 0x04
    14dc:	1b 81       	ldd	r17, Y+3	; 0x03
    14de:	aa 81       	ldd	r26, Y+2	; 0x02
    14e0:	b9 81       	ldd	r27, Y+1	; 0x01
    14e2:	ce 0f       	add	r28, r30
    14e4:	d1 1d       	adc	r29, r1
    14e6:	0f b6       	in	r0, 0x3f	; 63
    14e8:	f8 94       	cli
    14ea:	de bf       	out	0x3e, r29	; 62
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	cd bf       	out	0x3d, r28	; 61
    14f0:	ed 01       	movw	r28, r26
    14f2:	08 95       	ret

000014f4 <_exit>:
    14f4:	f8 94       	cli

000014f6 <__stop_program>:
    14f6:	ff cf       	rjmp	.-2      	; 0x14f6 <__stop_program>
