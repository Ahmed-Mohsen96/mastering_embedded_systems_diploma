
;; Function wait_ms (wait_ms, funcdef_no=3, decl_uid=5657, cgraph_uid=3, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 17:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 27:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) r {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 39: point = 0, n_alt = -1
  BB 7
   Insn 35: point = 0, n_alt = -1
   Insn 34: point = 0, n_alt = 1
   Insn 33: point = 1, n_alt = 5
   Insn 32: point = 2, n_alt = 5
  BB 2
   Insn 40: point = 3, n_alt = -1
   Insn 7: point = 3, n_alt = 7
   Insn 6: point = 4, n_alt = 1
   Insn 2: point = 5, n_alt = 7
  BB 6
   Insn 28: point = 5, n_alt = 7
   Insn 27: point = 6, n_alt = 2
   Insn 26: point = 8, n_alt = 5
  BB 5
   Insn 24: point = 9, n_alt = -1
   Insn 23: point = 9, n_alt = 0
   Insn 22: point = 10, n_alt = 5
  BB 3
   Insn 42: point = 11, n_alt = -1
   Insn 12: point = 11, n_alt = 7
   Insn 11: point = 12, n_alt = 1
  BB 4
   Insn 18: point = 13, n_alt = 7
   Insn 17: point = 14, n_alt = 2
   Insn 16: point = 16, n_alt = 5
 r110: [3..4]
 r111: [11..12]
 r112: [13..14]
 r113: [15..16]
 r114: [9..10]
 r115: [5..6]
 r116: [7..8]
 r117: [0..2]
 r118: [0..1]
Compressing live ranges: from 17 to 16 - 94%
Ranges after the compression:
 r110: [2..3]
 r111: [10..11]
 r112: [12..13]
 r113: [14..15]
 r114: [8..9]
 r115: [4..5]
 r116: [6..7]
 r117: [0..1]
 r118: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 16
changing reg in insn 17
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
starting the processing of deferred insns
ending the processing of deferred insns


wait_ms

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d,1u} r3={9d,8u} r7={1d,18u} r12={1d} r13={1d,8u} r14={1d} r100={2d,2u} r102={1d,1u} 
;;    total ref usage 59{20d,39u,0e} in 21{21 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 x+0 S4 A32])
        (reg:SI 0 r0 [ x ])) "../HAL_driver/LCD_driver/lcd.c":13 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [110])
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 40 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (reg:SI 3 r3 [110])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 40 7 41 2 (set (pc)
        (label_ref 29)) "../HAL_driver/LCD_driver/lcd.c":15 214 {*arm_jump}
     (nil)
 -> 29)
;;  succ:       7 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 41 40 31)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 111
(code_label 31 41 10 3 5 (nil) [1 uses])
(note 10 31 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 3 r3 [111])
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 42 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 j+0 S4 A32])
        (reg:SI 3 r3 [111])) "../HAL_driver/LCD_driver/lcd.c":16 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 42 12 43 3 (set (pc)
        (label_ref 19)) "../HAL_driver/LCD_driver/lcd.c":16 214 {*arm_jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 43 42 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 112 113
(code_label 21 43 15 4 4 (nil) [1 uses])
(note 15 21 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 3 r3 [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 j+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 4 (set (reg:SI 3 r3 [112])
        (plus:SI (reg:SI 3 r3 [113])
            (const_int 1 [0x1]))) "../HAL_driver/LCD_driver/lcd.c":16 4 {*arm_addsi3}
     (nil))
(insn 18 17 19 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 j+0 S4 A32])
        (reg:SI 3 r3 [112])) "../HAL_driver/LCD_driver/lcd.c":16 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114
(code_label 19 18 20 5 3 (nil) [1 uses])
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 20 23 5 (set (reg:SI 3 r3 [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 j+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":16 878 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 254 [0xfe]))) "../HAL_driver/LCD_driver/lcd.c":16 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":16 204 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 115 116
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 3 r3 [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 6 (set (reg:SI 3 r3 [115])
        (plus:SI (reg:SI 3 r3 [116])
            (const_int 1 [0x1]))) "../HAL_driver/LCD_driver/lcd.c":15 4 {*arm_addsi3}
     (nil))
(insn 28 27 29 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (reg:SI 3 r3 [115])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 118
(code_label 29 28 30 7 2 (nil) [1 uses])
(note 30 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 7 (set (reg:SI 2 r2 [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 7 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 x+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":15 878 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [117])
            (reg:SI 3 r3 [118]))) "../HAL_driver/LCD_driver/lcd.c":15 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":15 204 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 36 35 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 44 8 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":17 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 44 39 0 NOTE_INSN_DELETED)

;; Function lcd_init (lcd_init, funcdef_no=4, decl_uid=5647, cgraph_uid=4, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 33:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 40:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 44:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 48:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 55:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 59:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 63:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 70:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 74:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 78:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 85:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 89:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 93:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 100:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 104:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 105:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 108:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 112:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 115:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 116:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 119:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 120:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 123:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 124:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 125:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 127:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 130:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 134:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 138:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 139:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 140:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 145:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 146:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 149:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 153:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 154:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 157:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 160:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 161:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 164:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 165:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 168:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 169:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 174:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 178:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 197: point = 0, n_alt = -1
   Insn 194: point = 0, n_alt = -1
   Insn 193: point = 0, n_alt = 1
   Insn 192: point = 0, n_alt = -1
   Insn 191: point = 0, n_alt = 1
   Insn 190: point = 0, n_alt = -1
   Insn 189: point = 0, n_alt = 1
   Insn 188: point = 0, n_alt = -1
   Insn 187: point = 0, n_alt = 1
   Insn 186: point = 0, n_alt = -1
   Insn 185: point = 0, n_alt = -1
   Insn 184: point = 0, n_alt = 1
   Insn 183: point = 0, n_alt = -1
   Insn 182: point = 0, n_alt = 5
   Insn 181: point = 0, n_alt = 1
   Insn 180: point = 0, n_alt = 1
   Insn 179: point = 0, n_alt = -1
   Insn 178: point = 0, n_alt = 5
   Insn 177: point = 0, n_alt = 1
   Insn 176: point = 0, n_alt = 1
   Insn 175: point = 0, n_alt = -1
   Insn 174: point = 0, n_alt = 5
   Insn 173: point = 0, n_alt = 1
   Insn 172: point = 0, n_alt = 1
   Insn 171: point = 0, n_alt = -1
   Insn 170: point = 0, n_alt = 5
   Insn 169: point = 0, n_alt = 5
   Insn 168: point = 0, n_alt = 6
   Insn 167: point = 1, n_alt = 0
   Insn 166: point = 3, n_alt = 1
   Insn 165: point = 4, n_alt = 5
   Insn 164: point = 5, n_alt = 6
   Insn 163: point = 6, n_alt = 0
   Insn 162: point = 8, n_alt = 1
   Insn 161: point = 9, n_alt = 5
   Insn 160: point = 10, n_alt = 4
   Insn 159: point = 11, n_alt = 0
   Insn 158: point = 13, n_alt = 1
   Insn 157: point = 14, n_alt = 5
   Insn 156: point = 15, n_alt = -1
   Insn 155: point = 15, n_alt = 5
   Insn 154: point = 15, n_alt = 5
   Insn 153: point = 15, n_alt = 6
   Insn 152: point = 16, n_alt = 0
   Insn 151: point = 18, n_alt = 1
   Insn 150: point = 19, n_alt = 5
   Insn 149: point = 20, n_alt = 6
   Insn 148: point = 21, n_alt = 0
   Insn 147: point = 23, n_alt = 1
   Insn 146: point = 24, n_alt = 5
   Insn 145: point = 25, n_alt = 4
   Insn 144: point = 26, n_alt = 0
   Insn 143: point = 28, n_alt = 1
   Insn 142: point = 29, n_alt = 5
   Insn 141: point = 30, n_alt = -1
   Insn 140: point = 30, n_alt = 5
   Insn 139: point = 30, n_alt = 5
   Insn 138: point = 30, n_alt = 6
   Insn 137: point = 31, n_alt = 0
   Insn 136: point = 33, n_alt = 1
   Insn 135: point = 34, n_alt = 5
   Insn 134: point = 35, n_alt = 6
   Insn 133: point = 36, n_alt = 0
   Insn 132: point = 38, n_alt = 1
   Insn 131: point = 39, n_alt = 5
   Insn 130: point = 40, n_alt = 4
   Insn 129: point = 41, n_alt = 0
   Insn 128: point = 43, n_alt = 1
   Insn 127: point = 44, n_alt = 5
   Insn 126: point = 45, n_alt = -1
   Insn 125: point = 45, n_alt = 5
   Insn 124: point = 45, n_alt = 5
   Insn 123: point = 45, n_alt = 6
   Insn 122: point = 46, n_alt = 0
   Insn 121: point = 48, n_alt = 1
   Insn 120: point = 49, n_alt = 5
   Insn 119: point = 50, n_alt = 6
   Insn 118: point = 51, n_alt = 0
   Insn 117: point = 53, n_alt = 1
   Insn 116: point = 54, n_alt = 5
   Insn 115: point = 55, n_alt = 4
   Insn 114: point = 56, n_alt = 0
   Insn 113: point = 58, n_alt = 1
   Insn 112: point = 59, n_alt = 5
   Insn 111: point = 60, n_alt = -1
   Insn 110: point = 60, n_alt = 5
   Insn 109: point = 60, n_alt = 5
   Insn 108: point = 60, n_alt = 6
   Insn 107: point = 61, n_alt = 0
   Insn 106: point = 63, n_alt = 1
   Insn 105: point = 64, n_alt = 5
   Insn 104: point = 65, n_alt = 6
   Insn 103: point = 66, n_alt = 0
   Insn 102: point = 68, n_alt = 1
   Insn 101: point = 69, n_alt = 5
   Insn 100: point = 70, n_alt = 4
   Insn 99: point = 71, n_alt = 0
   Insn 98: point = 73, n_alt = 1
   Insn 97: point = 74, n_alt = 5
   Insn 96: point = 75, n_alt = -1
   Insn 95: point = 75, n_alt = 5
   Insn 94: point = 75, n_alt = 5
   Insn 93: point = 75, n_alt = 6
   Insn 92: point = 76, n_alt = 0
   Insn 91: point = 78, n_alt = 1
   Insn 90: point = 79, n_alt = 5
   Insn 89: point = 80, n_alt = 6
   Insn 88: point = 81, n_alt = 0
   Insn 87: point = 83, n_alt = 1
   Insn 86: point = 84, n_alt = 5
   Insn 85: point = 85, n_alt = 4
   Insn 84: point = 86, n_alt = 0
   Insn 83: point = 88, n_alt = 1
   Insn 82: point = 89, n_alt = 5
   Insn 81: point = 90, n_alt = -1
   Insn 80: point = 90, n_alt = 5
   Insn 79: point = 90, n_alt = 5
   Insn 78: point = 90, n_alt = 6
   Insn 77: point = 91, n_alt = 0
   Insn 76: point = 93, n_alt = 1
   Insn 75: point = 94, n_alt = 5
   Insn 74: point = 95, n_alt = 6
   Insn 73: point = 96, n_alt = 0
   Insn 72: point = 98, n_alt = 1
   Insn 71: point = 99, n_alt = 5
   Insn 70: point = 100, n_alt = 4
   Insn 69: point = 101, n_alt = 0
   Insn 68: point = 103, n_alt = 1
   Insn 67: point = 104, n_alt = 5
   Insn 66: point = 105, n_alt = -1
   Insn 65: point = 105, n_alt = 5
   Insn 64: point = 105, n_alt = 5
   Insn 63: point = 105, n_alt = 6
   Insn 62: point = 106, n_alt = 0
   Insn 61: point = 108, n_alt = 1
   Insn 60: point = 109, n_alt = 5
   Insn 59: point = 110, n_alt = 6
   Insn 58: point = 111, n_alt = 0
   Insn 57: point = 113, n_alt = 1
   Insn 56: point = 114, n_alt = 5
   Insn 55: point = 115, n_alt = 4
   Insn 54: point = 116, n_alt = 0
   Insn 53: point = 118, n_alt = 1
   Insn 52: point = 119, n_alt = 5
   Insn 51: point = 120, n_alt = -1
   Insn 50: point = 120, n_alt = 5
   Insn 49: point = 120, n_alt = 5
   Insn 48: point = 120, n_alt = 6
   Insn 47: point = 121, n_alt = 0
   Insn 46: point = 123, n_alt = 1
   Insn 45: point = 124, n_alt = 5
   Insn 44: point = 125, n_alt = 6
   Insn 43: point = 126, n_alt = 0
   Insn 42: point = 128, n_alt = 1
   Insn 41: point = 129, n_alt = 5
   Insn 40: point = 130, n_alt = 4
   Insn 39: point = 131, n_alt = 0
   Insn 38: point = 133, n_alt = 1
   Insn 37: point = 134, n_alt = 5
   Insn 36: point = 135, n_alt = -1
   Insn 35: point = 135, n_alt = 5
   Insn 34: point = 135, n_alt = 5
   Insn 33: point = 135, n_alt = 6
   Insn 32: point = 136, n_alt = 0
   Insn 31: point = 138, n_alt = 1
   Insn 30: point = 139, n_alt = 5
   Insn 29: point = 140, n_alt = 6
   Insn 28: point = 141, n_alt = 0
   Insn 27: point = 143, n_alt = 1
   Insn 26: point = 144, n_alt = 5
   Insn 25: point = 145, n_alt = 4
   Insn 24: point = 146, n_alt = 0
   Insn 23: point = 148, n_alt = 1
   Insn 22: point = 149, n_alt = 5
   Insn 21: point = 150, n_alt = -1
   Insn 20: point = 150, n_alt = 5
   Insn 19: point = 150, n_alt = 5
   Insn 18: point = 150, n_alt = 6
   Insn 17: point = 151, n_alt = 0
   Insn 16: point = 153, n_alt = 1
   Insn 15: point = 154, n_alt = 5
   Insn 14: point = 155, n_alt = 6
   Insn 13: point = 156, n_alt = 0
   Insn 12: point = 158, n_alt = 1
   Insn 11: point = 159, n_alt = 5
   Insn 10: point = 160, n_alt = 4
   Insn 9: point = 161, n_alt = 0
   Insn 8: point = 163, n_alt = 1
   Insn 7: point = 164, n_alt = 5
   Insn 6: point = 165, n_alt = -1
   Insn 5: point = 165, n_alt = 1
 r110: [160..164]
 r111: [160..161]
 r112: [162..163]
 r113: [155..159]
 r114: [157..158]
 r115: [155..156]
 r116: [150..154]
 r117: [152..153]
 r118: [150..151]
 r119: [145..149]
 r120: [145..146]
 r121: [147..148]
 r122: [140..144]
 r123: [142..143]
 r124: [140..141]
 r125: [135..139]
 r126: [137..138]
 r127: [135..136]
 r128: [130..134]
 r129: [130..131]
 r130: [132..133]
 r131: [125..129]
 r132: [127..128]
 r133: [125..126]
 r134: [120..124]
 r135: [122..123]
 r136: [120..121]
 r137: [115..119]
 r138: [115..116]
 r139: [117..118]
 r140: [110..114]
 r141: [112..113]
 r142: [110..111]
 r143: [105..109]
 r144: [107..108]
 r145: [105..106]
 r146: [100..104]
 r147: [100..101]
 r148: [102..103]
 r149: [95..99]
 r150: [97..98]
 r151: [95..96]
 r152: [90..94]
 r153: [92..93]
 r154: [90..91]
 r155: [85..89]
 r156: [85..86]
 r157: [87..88]
 r158: [80..84]
 r159: [82..83]
 r160: [80..81]
 r161: [75..79]
 r162: [77..78]
 r163: [75..76]
 r164: [70..74]
 r165: [70..71]
 r166: [72..73]
 r167: [65..69]
 r168: [67..68]
 r169: [65..66]
 r170: [60..64]
 r171: [62..63]
 r172: [60..61]
 r173: [55..59]
 r174: [55..56]
 r175: [57..58]
 r176: [50..54]
 r177: [52..53]
 r178: [50..51]
 r179: [45..49]
 r180: [47..48]
 r181: [45..46]
 r182: [40..44]
 r183: [40..41]
 r184: [42..43]
 r185: [35..39]
 r186: [37..38]
 r187: [35..36]
 r188: [30..34]
 r189: [32..33]
 r190: [30..31]
 r191: [25..29]
 r192: [25..26]
 r193: [27..28]
 r194: [20..24]
 r195: [22..23]
 r196: [20..21]
 r197: [15..19]
 r198: [17..18]
 r199: [15..16]
 r200: [10..14]
 r201: [10..11]
 r202: [12..13]
 r203: [5..9]
 r204: [7..8]
 r205: [5..6]
 r206: [0..4]
 r207: [2..3]
 r208: [0..1]
Compressing live ranges: from 165 to 132 - 80%
Ranges after the compression:
 r110: [128..131]
 r111: [128..129]
 r112: [130..131]
 r113: [124..127]
 r114: [126..127]
 r115: [124..125]
 r116: [120..123]
 r117: [122..123]
 r118: [120..121]
 r119: [116..119]
 r120: [116..117]
 r121: [118..119]
 r122: [112..115]
 r123: [114..115]
 r124: [112..113]
 r125: [108..111]
 r126: [110..111]
 r127: [108..109]
 r128: [104..107]
 r129: [104..105]
 r130: [106..107]
 r131: [100..103]
 r132: [102..103]
 r133: [100..101]
 r134: [96..99]
 r135: [98..99]
 r136: [96..97]
 r137: [92..95]
 r138: [92..93]
 r139: [94..95]
 r140: [88..91]
 r141: [90..91]
 r142: [88..89]
 r143: [84..87]
 r144: [86..87]
 r145: [84..85]
 r146: [80..83]
 r147: [80..81]
 r148: [82..83]
 r149: [76..79]
 r150: [78..79]
 r151: [76..77]
 r152: [72..75]
 r153: [74..75]
 r154: [72..73]
 r155: [68..71]
 r156: [68..69]
 r157: [70..71]
 r158: [64..67]
 r159: [66..67]
 r160: [64..65]
 r161: [60..63]
 r162: [62..63]
 r163: [60..61]
 r164: [56..59]
 r165: [56..57]
 r166: [58..59]
 r167: [52..55]
 r168: [54..55]
 r169: [52..53]
 r170: [48..51]
 r171: [50..51]
 r172: [48..49]
 r173: [44..47]
 r174: [44..45]
 r175: [46..47]
 r176: [40..43]
 r177: [42..43]
 r178: [40..41]
 r179: [36..39]
 r180: [38..39]
 r181: [36..37]
 r182: [32..35]
 r183: [32..33]
 r184: [34..35]
 r185: [28..31]
 r186: [30..31]
 r187: [28..29]
 r188: [24..27]
 r189: [26..27]
 r190: [24..25]
 r191: [20..23]
 r192: [20..21]
 r193: [22..23]
 r194: [16..19]
 r195: [18..19]
 r196: [16..17]
 r197: [12..15]
 r198: [14..15]
 r199: [12..13]
 r200: [8..11]
 r201: [8..9]
 r202: [10..11]
 r203: [4..7]
 r204: [6..7]
 r205: [4..5]
 r206: [0..3]
 r207: [2..3]
 r208: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 11
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 23
changing reg in insn 26
changing reg in insn 29
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 37
changing reg in insn 40
changing reg in insn 39
changing reg in insn 40
changing reg in insn 38
changing reg in insn 41
changing reg in insn 44
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 52
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 53
changing reg in insn 56
changing reg in insn 59
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 63
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 68
changing reg in insn 71
changing reg in insn 74
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 78
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 85
changing reg in insn 84
changing reg in insn 85
changing reg in insn 83
changing reg in insn 86
changing reg in insn 89
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 93
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 97
changing reg in insn 100
changing reg in insn 99
changing reg in insn 100
changing reg in insn 98
changing reg in insn 101
changing reg in insn 104
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 108
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 112
changing reg in insn 115
changing reg in insn 114
changing reg in insn 115
changing reg in insn 113
changing reg in insn 116
changing reg in insn 119
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 123
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 127
changing reg in insn 130
changing reg in insn 129
changing reg in insn 130
changing reg in insn 128
changing reg in insn 131
changing reg in insn 134
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 138
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 142
changing reg in insn 145
changing reg in insn 144
changing reg in insn 145
changing reg in insn 143
changing reg in insn 146
changing reg in insn 149
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 153
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 157
changing reg in insn 160
changing reg in insn 159
changing reg in insn 160
changing reg in insn 158
changing reg in insn 161
changing reg in insn 164
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 168
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 156.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 175.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 188.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 194.


lcd_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={42d,20u} r1={36d,14u} r2={91d,69u} r3={55d,33u} r7={1d,2u} r12={43d} r13={1d,23u} r14={22d} r15={21d} r16={21d} r17={21d} r18={21d} r19={21d} r20={21d} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={21d} r38={21d} r39={21d} r40={21d} r41={21d} r42={21d} r43={21d} r44={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} r76={21d} r77={21d} r78={21d} r79={21d} r80={21d} r81={21d} r82={21d} r83={21d} r84={21d} r85={21d} r86={21d} r87={21d} r88={21d} r89={21d} r90={21d} r91={21d} r92={21d} r93={21d} r94={21d} r95={21d} r96={21d} r97={21d} r98={21d} r99={21d} r100={21d} r101={21d} r102={1d,1u} 
;;    total ref usage 2281{2119d,162u,0e} in 191{170 regular + 21 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) "../HAL_driver/LCD_driver/lcd.c":20 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 6 5 7 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x3]  <function_decl 0000000005982400 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":20 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [110])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":23 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 r2 [112])
        (const_int 1024 [0x400])) "../HAL_driver/LCD_driver/lcd.c":23 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:HI 2 r2 [111])
        (reg:HI 2 r2 [112])) "../HAL_driver/LCD_driver/lcd.c":23 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 1024 [0x400])
        (nil)))
(insn 10 9 11 2 (set (mem/c:HI (reg/f:SI 3 r3 [110]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [111])) "../HAL_driver/LCD_driver/lcd.c":23 880 {*thumb2_movhi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [113])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":24 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [114])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":24 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:QI 2 r2 [115])
        (reg:QI 2 r2 [114])) "../HAL_driver/LCD_driver/lcd.c":24 192 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [113])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [115])) "../HAL_driver/LCD_driver/lcd.c":24 192 {*arm_movqi_insn}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 3 r3 [116])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":25 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 2 r2 [117])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":25 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:QI 2 r2 [118])
        (reg:QI 2 r2 [117])) "../HAL_driver/LCD_driver/lcd.c":25 192 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [118])) "../HAL_driver/LCD_driver/lcd.c":25 192 {*arm_movqi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":26 878 {*thumb2_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":26 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 21 20 22 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":26 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 22 21 23 2 (set (reg/f:SI 3 r3 [119])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":27 878 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2 [121])
        (const_int 256 [0x100])) "../HAL_driver/LCD_driver/lcd.c":27 878 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:HI 2 r2 [120])
        (reg:HI 2 r2 [121])) "../HAL_driver/LCD_driver/lcd.c":27 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 256 [0x100])
        (nil)))
(insn 25 24 26 2 (set (mem/c:HI (reg/f:SI 3 r3 [119]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [120])) "../HAL_driver/LCD_driver/lcd.c":27 880 {*thumb2_movhi_insn}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 3 r3 [122])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":28 878 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 2 (set (reg:SI 2 r2 [123])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":28 878 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:QI 2 r2 [124])
        (reg:QI 2 r2 [123])) "../HAL_driver/LCD_driver/lcd.c":28 192 {*arm_movqi_insn}
     (nil))
(insn 29 28 30 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [122])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [124])) "../HAL_driver/LCD_driver/lcd.c":28 192 {*arm_movqi_insn}
     (nil))
(insn 30 29 31 2 (set (reg/f:SI 3 r3 [125])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":29 878 {*thumb2_movsi_insn}
     (nil))
(insn 31 30 32 2 (set (reg:SI 2 r2 [126])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":29 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:QI 2 r2 [127])
        (reg:QI 2 r2 [126])) "../HAL_driver/LCD_driver/lcd.c":29 192 {*arm_movqi_insn}
     (nil))
(insn 33 32 34 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [127])) "../HAL_driver/LCD_driver/lcd.c":29 192 {*arm_movqi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":30 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":30 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 36 35 37 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":30 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 37 36 38 2 (set (reg/f:SI 3 r3 [128])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":31 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:SI 2 r2 [130])
        (const_int 512 [0x200])) "../HAL_driver/LCD_driver/lcd.c":31 878 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:HI 2 r2 [129])
        (reg:HI 2 r2 [130])) "../HAL_driver/LCD_driver/lcd.c":31 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 512 [0x200])
        (nil)))
(insn 40 39 41 2 (set (mem/c:HI (reg/f:SI 3 r3 [128]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [129])) "../HAL_driver/LCD_driver/lcd.c":31 880 {*thumb2_movhi_insn}
     (nil))
(insn 41 40 42 2 (set (reg/f:SI 3 r3 [131])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":32 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 2 (set (reg:SI 2 r2 [132])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":32 878 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:QI 2 r2 [133])
        (reg:QI 2 r2 [132])) "../HAL_driver/LCD_driver/lcd.c":32 192 {*arm_movqi_insn}
     (nil))
(insn 44 43 45 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [133])) "../HAL_driver/LCD_driver/lcd.c":32 192 {*arm_movqi_insn}
     (nil))
(insn 45 44 46 2 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":33 878 {*thumb2_movsi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 2 r2 [135])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":33 878 {*thumb2_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:QI 2 r2 [136])
        (reg:QI 2 r2 [135])) "../HAL_driver/LCD_driver/lcd.c":33 192 {*arm_movqi_insn}
     (nil))
(insn 48 47 49 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [136])) "../HAL_driver/LCD_driver/lcd.c":33 192 {*arm_movqi_insn}
     (nil))
(insn 49 48 50 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":34 878 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":34 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 51 50 52 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":34 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 52 51 53 2 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":40 878 {*thumb2_movsi_insn}
     (nil))
(insn 53 52 54 2 (set (reg:SI 2 r2 [139])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":40 878 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:HI 2 r2 [138])
        (reg:HI 2 r2 [139])) "../HAL_driver/LCD_driver/lcd.c":40 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 55 54 56 2 (set (mem/c:HI (reg/f:SI 3 r3 [137]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [138])) "../HAL_driver/LCD_driver/lcd.c":40 880 {*thumb2_movhi_insn}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":41 878 {*thumb2_movsi_insn}
     (nil))
(insn 57 56 58 2 (set (reg:SI 2 r2 [141])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":41 878 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:QI 2 r2 [142])
        (reg:QI 2 r2 [141])) "../HAL_driver/LCD_driver/lcd.c":41 192 {*arm_movqi_insn}
     (nil))
(insn 59 58 60 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [142])) "../HAL_driver/LCD_driver/lcd.c":41 192 {*arm_movqi_insn}
     (nil))
(insn 60 59 61 2 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":42 878 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (reg:SI 2 r2 [144])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":42 878 {*thumb2_movsi_insn}
     (nil))
(insn 62 61 63 2 (set (reg:QI 2 r2 [145])
        (reg:QI 2 r2 [144])) "../HAL_driver/LCD_driver/lcd.c":42 192 {*arm_movqi_insn}
     (nil))
(insn 63 62 64 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [145])) "../HAL_driver/LCD_driver/lcd.c":42 192 {*arm_movqi_insn}
     (nil))
(insn 64 63 65 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":43 878 {*thumb2_movsi_insn}
     (nil))
(insn 65 64 66 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":43 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 66 65 67 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":43 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 67 66 68 2 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 68 67 69 2 (set (reg:SI 2 r2 [148])
        (const_int 2 [0x2])) "../HAL_driver/LCD_driver/lcd.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 2 (set (reg:HI 2 r2 [147])
        (reg:HI 2 r2 [148])) "../HAL_driver/LCD_driver/lcd.c":44 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 70 69 71 2 (set (mem/c:HI (reg/f:SI 3 r3 [146]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [147])) "../HAL_driver/LCD_driver/lcd.c":44 880 {*thumb2_movhi_insn}
     (nil))
(insn 71 70 72 2 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":45 878 {*thumb2_movsi_insn}
     (nil))
(insn 72 71 73 2 (set (reg:SI 2 r2 [150])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":45 878 {*thumb2_movsi_insn}
     (nil))
(insn 73 72 74 2 (set (reg:QI 2 r2 [151])
        (reg:QI 2 r2 [150])) "../HAL_driver/LCD_driver/lcd.c":45 192 {*arm_movqi_insn}
     (nil))
(insn 74 73 75 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [149])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [151])) "../HAL_driver/LCD_driver/lcd.c":45 192 {*arm_movqi_insn}
     (nil))
(insn 75 74 76 2 (set (reg/f:SI 3 r3 [152])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 76 75 77 2 (set (reg:SI 2 r2 [153])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 77 76 78 2 (set (reg:QI 2 r2 [154])
        (reg:QI 2 r2 [153])) "../HAL_driver/LCD_driver/lcd.c":46 192 {*arm_movqi_insn}
     (nil))
(insn 78 77 79 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [152])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [154])) "../HAL_driver/LCD_driver/lcd.c":46 192 {*arm_movqi_insn}
     (nil))
(insn 79 78 80 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":47 878 {*thumb2_movsi_insn}
     (nil))
(insn 80 79 81 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":47 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 81 80 82 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":47 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 82 81 83 2 (set (reg/f:SI 3 r3 [155])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":48 878 {*thumb2_movsi_insn}
     (nil))
(insn 83 82 84 2 (set (reg:SI 2 r2 [157])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":48 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 2 (set (reg:HI 2 r2 [156])
        (reg:HI 2 r2 [157])) "../HAL_driver/LCD_driver/lcd.c":48 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(insn 85 84 86 2 (set (mem/c:HI (reg/f:SI 3 r3 [155]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [156])) "../HAL_driver/LCD_driver/lcd.c":48 880 {*thumb2_movhi_insn}
     (nil))
(insn 86 85 87 2 (set (reg/f:SI 3 r3 [158])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":49 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 2 (set (reg:SI 2 r2 [159])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":49 878 {*thumb2_movsi_insn}
     (nil))
(insn 88 87 89 2 (set (reg:QI 2 r2 [160])
        (reg:QI 2 r2 [159])) "../HAL_driver/LCD_driver/lcd.c":49 192 {*arm_movqi_insn}
     (nil))
(insn 89 88 90 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [160])) "../HAL_driver/LCD_driver/lcd.c":49 192 {*arm_movqi_insn}
     (nil))
(insn 90 89 91 2 (set (reg/f:SI 3 r3 [161])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":50 878 {*thumb2_movsi_insn}
     (nil))
(insn 91 90 92 2 (set (reg:SI 2 r2 [162])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":50 878 {*thumb2_movsi_insn}
     (nil))
(insn 92 91 93 2 (set (reg:QI 2 r2 [163])
        (reg:QI 2 r2 [162])) "../HAL_driver/LCD_driver/lcd.c":50 192 {*arm_movqi_insn}
     (nil))
(insn 93 92 94 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [161])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [163])) "../HAL_driver/LCD_driver/lcd.c":50 192 {*arm_movqi_insn}
     (nil))
(insn 94 93 95 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":51 878 {*thumb2_movsi_insn}
     (nil))
(insn 95 94 96 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":51 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 96 95 97 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":51 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 97 96 98 2 (set (reg/f:SI 3 r3 [164])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 98 97 99 2 (set (reg:SI 2 r2 [166])
        (const_int 8 [0x8])) "../HAL_driver/LCD_driver/lcd.c":52 878 {*thumb2_movsi_insn}
     (nil))
(insn 99 98 100 2 (set (reg:HI 2 r2 [165])
        (reg:HI 2 r2 [166])) "../HAL_driver/LCD_driver/lcd.c":52 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 100 99 101 2 (set (mem/c:HI (reg/f:SI 3 r3 [164]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [165])) "../HAL_driver/LCD_driver/lcd.c":52 880 {*thumb2_movhi_insn}
     (nil))
(insn 101 100 102 2 (set (reg/f:SI 3 r3 [167])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 102 101 103 2 (set (reg:SI 2 r2 [168])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":53 878 {*thumb2_movsi_insn}
     (nil))
(insn 103 102 104 2 (set (reg:QI 2 r2 [169])
        (reg:QI 2 r2 [168])) "../HAL_driver/LCD_driver/lcd.c":53 192 {*arm_movqi_insn}
     (nil))
(insn 104 103 105 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [167])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [169])) "../HAL_driver/LCD_driver/lcd.c":53 192 {*arm_movqi_insn}
     (nil))
(insn 105 104 106 2 (set (reg/f:SI 3 r3 [170])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":54 878 {*thumb2_movsi_insn}
     (nil))
(insn 106 105 107 2 (set (reg:SI 2 r2 [171])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":54 878 {*thumb2_movsi_insn}
     (nil))
(insn 107 106 108 2 (set (reg:QI 2 r2 [172])
        (reg:QI 2 r2 [171])) "../HAL_driver/LCD_driver/lcd.c":54 192 {*arm_movqi_insn}
     (nil))
(insn 108 107 109 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [170])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [172])) "../HAL_driver/LCD_driver/lcd.c":54 192 {*arm_movqi_insn}
     (nil))
(insn 109 108 110 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":55 878 {*thumb2_movsi_insn}
     (nil))
(insn 110 109 111 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":55 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 111 110 112 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":55 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 112 111 113 2 (set (reg/f:SI 3 r3 [173])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":56 878 {*thumb2_movsi_insn}
     (nil))
(insn 113 112 114 2 (set (reg:SI 2 r2 [175])
        (const_int 16 [0x10])) "../HAL_driver/LCD_driver/lcd.c":56 878 {*thumb2_movsi_insn}
     (nil))
(insn 114 113 115 2 (set (reg:HI 2 r2 [174])
        (reg:HI 2 r2 [175])) "../HAL_driver/LCD_driver/lcd.c":56 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 115 114 116 2 (set (mem/c:HI (reg/f:SI 3 r3 [173]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [174])) "../HAL_driver/LCD_driver/lcd.c":56 880 {*thumb2_movhi_insn}
     (nil))
(insn 116 115 117 2 (set (reg/f:SI 3 r3 [176])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":57 878 {*thumb2_movsi_insn}
     (nil))
(insn 117 116 118 2 (set (reg:SI 2 r2 [177])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":57 878 {*thumb2_movsi_insn}
     (nil))
(insn 118 117 119 2 (set (reg:QI 2 r2 [178])
        (reg:QI 2 r2 [177])) "../HAL_driver/LCD_driver/lcd.c":57 192 {*arm_movqi_insn}
     (nil))
(insn 119 118 120 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [176])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [178])) "../HAL_driver/LCD_driver/lcd.c":57 192 {*arm_movqi_insn}
     (nil))
(insn 120 119 121 2 (set (reg/f:SI 3 r3 [179])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":58 878 {*thumb2_movsi_insn}
     (nil))
(insn 121 120 122 2 (set (reg:SI 2 r2 [180])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":58 878 {*thumb2_movsi_insn}
     (nil))
(insn 122 121 123 2 (set (reg:QI 2 r2 [181])
        (reg:QI 2 r2 [180])) "../HAL_driver/LCD_driver/lcd.c":58 192 {*arm_movqi_insn}
     (nil))
(insn 123 122 124 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [179])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [181])) "../HAL_driver/LCD_driver/lcd.c":58 192 {*arm_movqi_insn}
     (nil))
(insn 124 123 125 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":59 878 {*thumb2_movsi_insn}
     (nil))
(insn 125 124 126 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":59 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 126 125 127 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":59 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 127 126 128 2 (set (reg/f:SI 3 r3 [182])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":60 878 {*thumb2_movsi_insn}
     (nil))
(insn 128 127 129 2 (set (reg:SI 2 r2 [184])
        (const_int 32 [0x20])) "../HAL_driver/LCD_driver/lcd.c":60 878 {*thumb2_movsi_insn}
     (nil))
(insn 129 128 130 2 (set (reg:HI 2 r2 [183])
        (reg:HI 2 r2 [184])) "../HAL_driver/LCD_driver/lcd.c":60 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 32 [0x20])
        (nil)))
(insn 130 129 131 2 (set (mem/c:HI (reg/f:SI 3 r3 [182]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [183])) "../HAL_driver/LCD_driver/lcd.c":60 880 {*thumb2_movhi_insn}
     (nil))
(insn 131 130 132 2 (set (reg/f:SI 3 r3 [185])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":61 878 {*thumb2_movsi_insn}
     (nil))
(insn 132 131 133 2 (set (reg:SI 2 r2 [186])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":61 878 {*thumb2_movsi_insn}
     (nil))
(insn 133 132 134 2 (set (reg:QI 2 r2 [187])
        (reg:QI 2 r2 [186])) "../HAL_driver/LCD_driver/lcd.c":61 192 {*arm_movqi_insn}
     (nil))
(insn 134 133 135 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [185])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [187])) "../HAL_driver/LCD_driver/lcd.c":61 192 {*arm_movqi_insn}
     (nil))
(insn 135 134 136 2 (set (reg/f:SI 3 r3 [188])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":62 878 {*thumb2_movsi_insn}
     (nil))
(insn 136 135 137 2 (set (reg:SI 2 r2 [189])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":62 878 {*thumb2_movsi_insn}
     (nil))
(insn 137 136 138 2 (set (reg:QI 2 r2 [190])
        (reg:QI 2 r2 [189])) "../HAL_driver/LCD_driver/lcd.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 138 137 139 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [190])) "../HAL_driver/LCD_driver/lcd.c":62 192 {*arm_movqi_insn}
     (nil))
(insn 139 138 140 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":63 878 {*thumb2_movsi_insn}
     (nil))
(insn 140 139 141 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":63 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 141 140 142 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":63 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 142 141 143 2 (set (reg/f:SI 3 r3 [191])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":64 878 {*thumb2_movsi_insn}
     (nil))
(insn 143 142 144 2 (set (reg:SI 2 r2 [193])
        (const_int 64 [0x40])) "../HAL_driver/LCD_driver/lcd.c":64 878 {*thumb2_movsi_insn}
     (nil))
(insn 144 143 145 2 (set (reg:HI 2 r2 [192])
        (reg:HI 2 r2 [193])) "../HAL_driver/LCD_driver/lcd.c":64 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
(insn 145 144 146 2 (set (mem/c:HI (reg/f:SI 3 r3 [191]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [192])) "../HAL_driver/LCD_driver/lcd.c":64 880 {*thumb2_movhi_insn}
     (nil))
(insn 146 145 147 2 (set (reg/f:SI 3 r3 [194])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 147 146 148 2 (set (reg:SI 2 r2 [195])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 148 147 149 2 (set (reg:QI 2 r2 [196])
        (reg:QI 2 r2 [195])) "../HAL_driver/LCD_driver/lcd.c":65 192 {*arm_movqi_insn}
     (nil))
(insn 149 148 150 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [194])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [196])) "../HAL_driver/LCD_driver/lcd.c":65 192 {*arm_movqi_insn}
     (nil))
(insn 150 149 151 2 (set (reg/f:SI 3 r3 [197])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 151 150 152 2 (set (reg:SI 2 r2 [198])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 152 151 153 2 (set (reg:QI 2 r2 [199])
        (reg:QI 2 r2 [198])) "../HAL_driver/LCD_driver/lcd.c":66 192 {*arm_movqi_insn}
     (nil))
(insn 153 152 154 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [197])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [199])) "../HAL_driver/LCD_driver/lcd.c":66 192 {*arm_movqi_insn}
     (nil))
(insn 154 153 155 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":67 878 {*thumb2_movsi_insn}
     (nil))
(insn 155 154 156 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":67 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 156 155 157 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":67 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 157 156 158 2 (set (reg/f:SI 3 r3 [200])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":68 878 {*thumb2_movsi_insn}
     (nil))
(insn 158 157 159 2 (set (reg:SI 2 r2 [202])
        (const_int 128 [0x80])) "../HAL_driver/LCD_driver/lcd.c":68 878 {*thumb2_movsi_insn}
     (nil))
(insn 159 158 160 2 (set (reg:HI 2 r2 [201])
        (reg:HI 2 r2 [202])) "../HAL_driver/LCD_driver/lcd.c":68 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(insn 160 159 161 2 (set (mem/c:HI (reg/f:SI 3 r3 [200]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [201])) "../HAL_driver/LCD_driver/lcd.c":68 880 {*thumb2_movhi_insn}
     (nil))
(insn 161 160 162 2 (set (reg/f:SI 3 r3 [203])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":69 878 {*thumb2_movsi_insn}
     (nil))
(insn 162 161 163 2 (set (reg:SI 2 r2 [204])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":69 878 {*thumb2_movsi_insn}
     (nil))
(insn 163 162 164 2 (set (reg:QI 2 r2 [205])
        (reg:QI 2 r2 [204])) "../HAL_driver/LCD_driver/lcd.c":69 192 {*arm_movqi_insn}
     (nil))
(insn 164 163 165 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [203])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [205])) "../HAL_driver/LCD_driver/lcd.c":69 192 {*arm_movqi_insn}
     (nil))
(insn 165 164 166 2 (set (reg/f:SI 3 r3 [206])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":70 878 {*thumb2_movsi_insn}
     (nil))
(insn 166 165 167 2 (set (reg:SI 2 r2 [207])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":70 878 {*thumb2_movsi_insn}
     (nil))
(insn 167 166 168 2 (set (reg:QI 2 r2 [208])
        (reg:QI 2 r2 [207])) "../HAL_driver/LCD_driver/lcd.c":70 192 {*arm_movqi_insn}
     (nil))
(insn 168 167 169 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [206])
                (const_int 3 [0x3])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 2 r2 [208])) "../HAL_driver/LCD_driver/lcd.c":70 192 {*arm_movqi_insn}
     (nil))
(insn 169 168 170 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 170 169 171 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":71 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 171 170 172 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":71 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 172 171 173 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":74 878 {*thumb2_movsi_insn}
     (nil))
(insn 173 172 174 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":74 878 {*thumb2_movsi_insn}
     (nil))
(insn 174 173 175 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":74 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 175 174 176 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":74 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 176 175 177 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 177 176 178 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 178 177 179 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":75 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 179 178 180 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":75 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 180 179 181 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 181 180 182 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 182 181 183 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":76 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 183 182 184 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":76 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 184 183 185 2 (set (reg:SI 0 r0)
        (const_int 15 [0xf])) "../HAL_driver/LCD_driver/lcd.c":77 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 185 184 186 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x3]  <function_decl 0000000005982400 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":77 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 186 185 187 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x3]  <function_decl 0000000005982000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":78 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 187 186 188 2 (set (reg:SI 0 r0)
        (const_int 56 [0x38])) "../HAL_driver/LCD_driver/lcd.c":81 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 188 187 189 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":81 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 189 188 190 2 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) "../HAL_driver/LCD_driver/lcd.c":82 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 190 189 191 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":82 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 191 190 192 2 (set (reg:SI 0 r0)
        (const_int 128 [0x80])) "../HAL_driver/LCD_driver/lcd.c":83 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 192 191 193 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":83 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 193 192 194 2 (set (reg:SI 0 r0)
        (const_int 15 [0xf])) "../HAL_driver/LCD_driver/lcd.c":84 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 194 193 197 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":84 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 197 194 212 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":85 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 212 197 0 NOTE_INSN_DELETED)

;; Function lcd_is_busy (lcd_is_busy, funcdef_no=5, decl_uid=5637, cgraph_uid=5, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 34:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 45:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 52:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 56:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 63:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 67:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 78:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 85:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 89:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 108: point = 0, n_alt = -1
   Insn 105: point = 0, n_alt = -1
   Insn 104: point = 0, n_alt = 5
   Insn 103: point = 0, n_alt = 1
   Insn 102: point = 0, n_alt = 1
   Insn 101: point = 0, n_alt = -1
   Insn 100: point = 0, n_alt = -1
   Insn 99: point = 0, n_alt = 5
   Insn 98: point = 0, n_alt = 1
   Insn 97: point = 0, n_alt = 1
   Insn 96: point = 0, n_alt = -1
   Insn 95: point = 0, n_alt = 5
   Insn 94: point = 0, n_alt = 1
   Insn 93: point = 0, n_alt = 1
   Insn 92: point = 0, n_alt = -1
   Insn 91: point = 0, n_alt = 5
   Insn 90: point = 0, n_alt = 5
   Insn 89: point = 0, n_alt = 6
   Insn 88: point = 1, n_alt = 0
   Insn 87: point = 3, n_alt = 1
   Insn 86: point = 4, n_alt = 5
   Insn 85: point = 5, n_alt = 4
   Insn 84: point = 6, n_alt = 0
   Insn 83: point = 8, n_alt = 1
   Insn 82: point = 9, n_alt = 5
   Insn 81: point = 10, n_alt = -1
   Insn 80: point = 10, n_alt = 5
   Insn 79: point = 10, n_alt = 5
   Insn 78: point = 10, n_alt = 6
   Insn 77: point = 11, n_alt = 0
   Insn 76: point = 13, n_alt = 1
   Insn 75: point = 14, n_alt = 5
   Insn 74: point = 15, n_alt = 4
   Insn 73: point = 16, n_alt = 0
   Insn 72: point = 18, n_alt = 1
   Insn 71: point = 19, n_alt = 5
   Insn 70: point = 20, n_alt = -1
   Insn 69: point = 20, n_alt = 5
   Insn 68: point = 20, n_alt = 5
   Insn 67: point = 20, n_alt = 6
   Insn 66: point = 21, n_alt = 0
   Insn 65: point = 23, n_alt = 1
   Insn 64: point = 24, n_alt = 5
   Insn 63: point = 25, n_alt = 4
   Insn 62: point = 26, n_alt = 0
   Insn 61: point = 28, n_alt = 1
   Insn 60: point = 29, n_alt = 5
   Insn 59: point = 30, n_alt = -1
   Insn 58: point = 30, n_alt = 5
   Insn 57: point = 30, n_alt = 5
   Insn 56: point = 30, n_alt = 6
   Insn 55: point = 31, n_alt = 0
   Insn 54: point = 33, n_alt = 1
   Insn 53: point = 34, n_alt = 5
   Insn 52: point = 35, n_alt = 4
   Insn 51: point = 36, n_alt = 0
   Insn 50: point = 38, n_alt = 1
   Insn 49: point = 39, n_alt = 5
   Insn 48: point = 40, n_alt = -1
   Insn 47: point = 40, n_alt = 5
   Insn 46: point = 40, n_alt = 5
   Insn 45: point = 40, n_alt = 6
   Insn 44: point = 41, n_alt = 0
   Insn 43: point = 43, n_alt = 1
   Insn 42: point = 44, n_alt = 5
   Insn 41: point = 45, n_alt = 4
   Insn 40: point = 46, n_alt = 0
   Insn 39: point = 48, n_alt = 1
   Insn 38: point = 49, n_alt = 5
   Insn 37: point = 50, n_alt = -1
   Insn 36: point = 50, n_alt = 5
   Insn 35: point = 50, n_alt = 5
   Insn 34: point = 50, n_alt = 6
   Insn 33: point = 51, n_alt = 0
   Insn 32: point = 53, n_alt = 1
   Insn 31: point = 54, n_alt = 5
   Insn 30: point = 55, n_alt = 4
   Insn 29: point = 56, n_alt = 0
   Insn 28: point = 58, n_alt = 1
   Insn 27: point = 59, n_alt = 5
   Insn 26: point = 60, n_alt = -1
   Insn 25: point = 60, n_alt = 5
   Insn 24: point = 60, n_alt = 5
   Insn 23: point = 60, n_alt = 6
   Insn 22: point = 61, n_alt = 0
   Insn 21: point = 63, n_alt = 1
   Insn 20: point = 64, n_alt = 5
   Insn 19: point = 65, n_alt = 4
   Insn 18: point = 66, n_alt = 0
   Insn 17: point = 68, n_alt = 1
   Insn 16: point = 69, n_alt = 5
   Insn 15: point = 70, n_alt = -1
   Insn 14: point = 70, n_alt = 5
   Insn 13: point = 70, n_alt = 5
   Insn 12: point = 70, n_alt = 6
   Insn 11: point = 71, n_alt = 0
   Insn 10: point = 73, n_alt = 1
   Insn 9: point = 74, n_alt = 5
   Insn 8: point = 75, n_alt = 4
   Insn 7: point = 76, n_alt = 0
   Insn 6: point = 78, n_alt = 1
   Insn 5: point = 79, n_alt = 5
 r110: [75..79]
 r111: [75..76]
 r112: [77..78]
 r113: [70..74]
 r114: [72..73]
 r115: [70..71]
 r116: [65..69]
 r117: [65..66]
 r118: [67..68]
 r119: [60..64]
 r120: [62..63]
 r121: [60..61]
 r122: [55..59]
 r123: [55..56]
 r124: [57..58]
 r125: [50..54]
 r126: [52..53]
 r127: [50..51]
 r128: [45..49]
 r129: [45..46]
 r130: [47..48]
 r131: [40..44]
 r132: [42..43]
 r133: [40..41]
 r134: [35..39]
 r135: [35..36]
 r136: [37..38]
 r137: [30..34]
 r138: [32..33]
 r139: [30..31]
 r140: [25..29]
 r141: [25..26]
 r142: [27..28]
 r143: [20..24]
 r144: [22..23]
 r145: [20..21]
 r146: [15..19]
 r147: [15..16]
 r148: [17..18]
 r149: [10..14]
 r150: [12..13]
 r151: [10..11]
 r152: [5..9]
 r153: [5..6]
 r154: [7..8]
 r155: [0..4]
 r156: [2..3]
 r157: [0..1]
Compressing live ranges: from 80 to 64 - 80%
Ranges after the compression:
 r110: [60..63]
 r111: [60..61]
 r112: [62..63]
 r113: [56..59]
 r114: [58..59]
 r115: [56..57]
 r116: [52..55]
 r117: [52..53]
 r118: [54..55]
 r119: [48..51]
 r120: [50..51]
 r121: [48..49]
 r122: [44..47]
 r123: [44..45]
 r124: [46..47]
 r125: [40..43]
 r126: [42..43]
 r127: [40..41]
 r128: [36..39]
 r129: [36..37]
 r130: [38..39]
 r131: [32..35]
 r132: [34..35]
 r133: [32..33]
 r134: [28..31]
 r135: [28..29]
 r136: [30..31]
 r137: [24..27]
 r138: [26..27]
 r139: [24..25]
 r140: [20..23]
 r141: [20..21]
 r142: [22..23]
 r143: [16..19]
 r144: [18..19]
 r145: [16..17]
 r146: [12..15]
 r147: [12..13]
 r148: [14..15]
 r149: [8..11]
 r150: [10..11]
 r151: [8..9]
 r152: [4..7]
 r153: [4..5]
 r154: [6..7]
 r155: [0..3]
 r156: [2..3]
 r157: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 6
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 17
changing reg in insn 20
changing reg in insn 23
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 28
changing reg in insn 31
changing reg in insn 34
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 39
changing reg in insn 42
changing reg in insn 45
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 49
changing reg in insn 52
changing reg in insn 51
changing reg in insn 52
changing reg in insn 50
changing reg in insn 53
changing reg in insn 56
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 63
changing reg in insn 62
changing reg in insn 63
changing reg in insn 61
changing reg in insn 64
changing reg in insn 67
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 71
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 72
changing reg in insn 75
changing reg in insn 78
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 85
changing reg in insn 84
changing reg in insn 85
changing reg in insn 83
changing reg in insn 86
changing reg in insn 89
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 105.


lcd_is_busy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={24d,11u} r1={24d,11u} r2={48d,35u} r3={29d,16u} r7={1d,2u} r12={25d} r13={1d,14u} r14={13d} r15={12d} r16={12d} r17={12d} r18={12d} r19={12d} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r81={12d} r82={12d} r83={12d} r84={12d} r85={12d} r86={12d} r87={12d} r88={12d} r89={12d} r90={12d} r91={12d} r92={12d} r93={12d} r94={12d} r95={12d} r96={12d} r97={12d} r98={12d} r99={12d} r100={12d} r101={12d} r102={1d,1u} 
;;    total ref usage 1300{1210d,90u,0e} in 102{90 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [110])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [112])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:HI 2 r2 [111])
        (reg:HI 2 r2 [112])) "../HAL_driver/LCD_driver/lcd.c":88 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 8 7 9 2 (set (mem/c:HI (reg/f:SI 3 r3 [110]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [111])) "../HAL_driver/LCD_driver/lcd.c":88 880 {*thumb2_movhi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [113])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":89 878 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [114])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":89 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:QI 2 r2 [115])
        (reg:QI 2 r2 [114])) "../HAL_driver/LCD_driver/lcd.c":89 192 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [113])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [115])) "../HAL_driver/LCD_driver/lcd.c":89 192 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":90 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":90 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 15 14 16 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":90 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [116])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 r2 [118])
        (const_int 2 [0x2])) "../HAL_driver/LCD_driver/lcd.c":91 878 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:HI 2 r2 [117])
        (reg:HI 2 r2 [118])) "../HAL_driver/LCD_driver/lcd.c":91 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 19 18 20 2 (set (mem/c:HI (reg/f:SI 3 r3 [116]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [117])) "../HAL_driver/LCD_driver/lcd.c":91 880 {*thumb2_movhi_insn}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [119])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":92 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 2 r2 [120])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":92 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:QI 2 r2 [121])
        (reg:QI 2 r2 [120])) "../HAL_driver/LCD_driver/lcd.c":92 192 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [119])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [121])) "../HAL_driver/LCD_driver/lcd.c":92 192 {*arm_movqi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":93 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":93 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 26 25 27 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":93 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 27 26 28 2 (set (reg/f:SI 3 r3 [122])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:SI 2 r2 [124])
        (const_int 4 [0x4])) "../HAL_driver/LCD_driver/lcd.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:HI 2 r2 [123])
        (reg:HI 2 r2 [124])) "../HAL_driver/LCD_driver/lcd.c":94 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
(insn 30 29 31 2 (set (mem/c:HI (reg/f:SI 3 r3 [122]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [123])) "../HAL_driver/LCD_driver/lcd.c":94 880 {*thumb2_movhi_insn}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 3 r3 [125])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":95 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:SI 2 r2 [126])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":95 878 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 2 (set (reg:QI 2 r2 [127])
        (reg:QI 2 r2 [126])) "../HAL_driver/LCD_driver/lcd.c":95 192 {*arm_movqi_insn}
     (nil))
(insn 34 33 35 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [127])) "../HAL_driver/LCD_driver/lcd.c":95 192 {*arm_movqi_insn}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":96 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 37 36 38 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":96 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 38 37 39 2 (set (reg/f:SI 3 r3 [128])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":97 878 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 40 2 (set (reg:SI 2 r2 [130])
        (const_int 8 [0x8])) "../HAL_driver/LCD_driver/lcd.c":97 878 {*thumb2_movsi_insn}
     (nil))
(insn 40 39 41 2 (set (reg:HI 2 r2 [129])
        (reg:HI 2 r2 [130])) "../HAL_driver/LCD_driver/lcd.c":97 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 41 40 42 2 (set (mem/c:HI (reg/f:SI 3 r3 [128]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [129])) "../HAL_driver/LCD_driver/lcd.c":97 880 {*thumb2_movhi_insn}
     (nil))
(insn 42 41 43 2 (set (reg/f:SI 3 r3 [131])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":98 878 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 44 2 (set (reg:SI 2 r2 [132])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":98 878 {*thumb2_movsi_insn}
     (nil))
(insn 44 43 45 2 (set (reg:QI 2 r2 [133])
        (reg:QI 2 r2 [132])) "../HAL_driver/LCD_driver/lcd.c":98 192 {*arm_movqi_insn}
     (nil))
(insn 45 44 46 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [133])) "../HAL_driver/LCD_driver/lcd.c":98 192 {*arm_movqi_insn}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":99 878 {*thumb2_movsi_insn}
     (nil))
(insn 47 46 48 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":99 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 48 47 49 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":99 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 49 48 50 2 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":100 878 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 2 (set (reg:SI 2 r2 [136])
        (const_int 16 [0x10])) "../HAL_driver/LCD_driver/lcd.c":100 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:HI 2 r2 [135])
        (reg:HI 2 r2 [136])) "../HAL_driver/LCD_driver/lcd.c":100 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 52 51 53 2 (set (mem/c:HI (reg/f:SI 3 r3 [134]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [135])) "../HAL_driver/LCD_driver/lcd.c":100 880 {*thumb2_movhi_insn}
     (nil))
(insn 53 52 54 2 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":101 878 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 2 (set (reg:SI 2 r2 [138])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":101 878 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 2 (set (reg:QI 2 r2 [139])
        (reg:QI 2 r2 [138])) "../HAL_driver/LCD_driver/lcd.c":101 192 {*arm_movqi_insn}
     (nil))
(insn 56 55 57 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [139])) "../HAL_driver/LCD_driver/lcd.c":101 192 {*arm_movqi_insn}
     (nil))
(insn 57 56 58 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":102 878 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":102 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 59 58 60 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":102 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 60 59 61 2 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":103 878 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (reg:SI 2 r2 [142])
        (const_int 32 [0x20])) "../HAL_driver/LCD_driver/lcd.c":103 878 {*thumb2_movsi_insn}
     (nil))
(insn 62 61 63 2 (set (reg:HI 2 r2 [141])
        (reg:HI 2 r2 [142])) "../HAL_driver/LCD_driver/lcd.c":103 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 32 [0x20])
        (nil)))
(insn 63 62 64 2 (set (mem/c:HI (reg/f:SI 3 r3 [140]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [141])) "../HAL_driver/LCD_driver/lcd.c":103 880 {*thumb2_movhi_insn}
     (nil))
(insn 64 63 65 2 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":104 878 {*thumb2_movsi_insn}
     (nil))
(insn 65 64 66 2 (set (reg:SI 2 r2 [144])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":104 878 {*thumb2_movsi_insn}
     (nil))
(insn 66 65 67 2 (set (reg:QI 2 r2 [145])
        (reg:QI 2 r2 [144])) "../HAL_driver/LCD_driver/lcd.c":104 192 {*arm_movqi_insn}
     (nil))
(insn 67 66 68 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [145])) "../HAL_driver/LCD_driver/lcd.c":104 192 {*arm_movqi_insn}
     (nil))
(insn 68 67 69 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":105 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":105 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 70 69 71 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":105 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 71 70 72 2 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":106 878 {*thumb2_movsi_insn}
     (nil))
(insn 72 71 73 2 (set (reg:SI 2 r2 [148])
        (const_int 64 [0x40])) "../HAL_driver/LCD_driver/lcd.c":106 878 {*thumb2_movsi_insn}
     (nil))
(insn 73 72 74 2 (set (reg:HI 2 r2 [147])
        (reg:HI 2 r2 [148])) "../HAL_driver/LCD_driver/lcd.c":106 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))
(insn 74 73 75 2 (set (mem/c:HI (reg/f:SI 3 r3 [146]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [147])) "../HAL_driver/LCD_driver/lcd.c":106 880 {*thumb2_movhi_insn}
     (nil))
(insn 75 74 76 2 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":107 878 {*thumb2_movsi_insn}
     (nil))
(insn 76 75 77 2 (set (reg:SI 2 r2 [150])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":107 878 {*thumb2_movsi_insn}
     (nil))
(insn 77 76 78 2 (set (reg:QI 2 r2 [151])
        (reg:QI 2 r2 [150])) "../HAL_driver/LCD_driver/lcd.c":107 192 {*arm_movqi_insn}
     (nil))
(insn 78 77 79 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [149])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [151])) "../HAL_driver/LCD_driver/lcd.c":107 192 {*arm_movqi_insn}
     (nil))
(insn 79 78 80 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":108 878 {*thumb2_movsi_insn}
     (nil))
(insn 80 79 81 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":108 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 81 80 82 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":108 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 82 81 83 2 (set (reg/f:SI 3 r3 [152])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":109 878 {*thumb2_movsi_insn}
     (nil))
(insn 83 82 84 2 (set (reg:SI 2 r2 [154])
        (const_int 128 [0x80])) "../HAL_driver/LCD_driver/lcd.c":109 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 2 (set (reg:HI 2 r2 [153])
        (reg:HI 2 r2 [154])) "../HAL_driver/LCD_driver/lcd.c":109 880 {*thumb2_movhi_insn}
     (expr_list:REG_EQUAL (const_int 128 [0x80])
        (nil)))
(insn 85 84 86 2 (set (mem/c:HI (reg/f:SI 3 r3 [152]) [2 pincfg.GPIO_pin_number+0 S2 A16])
        (reg:HI 2 r2 [153])) "../HAL_driver/LCD_driver/lcd.c":109 880 {*thumb2_movhi_insn}
     (nil))
(insn 86 85 87 2 (set (reg/f:SI 3 r3 [155])
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 2 (set (reg:SI 2 r2 [156])
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 88 87 89 2 (set (reg:QI 2 r2 [157])
        (reg:QI 2 r2 [156])) "../HAL_driver/LCD_driver/lcd.c":110 192 {*arm_movqi_insn}
     (nil))
(insn 89 88 90 2 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 2 [0x2])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 2 r2 [157])) "../HAL_driver/LCD_driver/lcd.c":110 192 {*arm_movqi_insn}
     (nil))
(insn 90 89 91 2 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pincfg")  <var_decl 000000000597d120 pincfg>)) "../HAL_driver/LCD_driver/lcd.c":111 878 {*thumb2_movsi_insn}
     (nil))
(insn 91 90 92 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":111 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 92 91 93 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 000000000594e300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":111 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 93 92 94 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":113 878 {*thumb2_movsi_insn}
     (nil))
(insn 94 93 95 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":113 878 {*thumb2_movsi_insn}
     (nil))
(insn 95 94 96 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":113 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 96 95 97 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":113 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 97 96 98 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":115 878 {*thumb2_movsi_insn}
     (nil))
(insn 98 97 99 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":115 878 {*thumb2_movsi_insn}
     (nil))
(insn 99 98 100 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":115 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 100 99 101 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":115 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(call_insn 101 100 102 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_kick") [flags 0x3]  <function_decl 000000000594ec00 lcd_kick>) [0 lcd_kick S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":116 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 102 101 103 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 103 102 104 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":151 878 {*thumb2_movsi_insn}
     (nil))
(insn 104 103 105 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":151 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 105 104 108 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":151 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 108 105 120 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":152 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 120 108 0 NOTE_INSN_DELETED)

;; Function lcd_kick (lcd_kick, funcdef_no=6, decl_uid=5639, cgraph_uid=6, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


lcd_kick

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={7d,3u} r1={6d,2u} r2={6d,2u} r3={4d} r7={1d,2u} r12={7d} r13={1d,5u} r14={4d} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={1d,1u} 
;;    total ref usage 313{298d,15u,0e} in 11{8 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":155 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":155 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":155 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":155 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 50 [0x32])) "../HAL_driver/LCD_driver/lcd.c":156 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x3]  <function_decl 0000000005982400 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":156 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":158 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":158 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":158 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 14 13 17 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":158 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 17 14 20 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":159 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 20 17 0 NOTE_INSN_DELETED)

;; Function lcd_send_command (lcd_send_command, funcdef_no=7, decl_uid=5641, cgraph_uid=7, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*thumb2_movhi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 25: point = 0, n_alt = -1
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = 5
   Insn 19: point = 0, n_alt = 1
   Insn 18: point = 0, n_alt = 1
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = 5
   Insn 15: point = 0, n_alt = 1
   Insn 14: point = 0, n_alt = 1
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = 5
   Insn 11: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = 0
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 1
   Insn 4: point = 6, n_alt = 6
   Insn 3: point = 7, n_alt = 0
   Insn 2: point = 9, n_alt = -2
 r110: [0..1]
 r111: [8..9]
 r112: [6..7]
 r113: [2..3]
 r114: [4..5]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r110: [0..1]
 r111: [8..9]
 r112: [6..7]
 r113: [2..3]
 r114: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 22.


lcd_send_command

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={8d,4u} r1={8d,3u} r2={7d,2u} r3={10d,5u} r7={1d,4u} r12={9d} r13={1d,6u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={1d,1u} 
;;    total ref usage 423{398d,25u,0e} in 19{15 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg:SI 3 r3 [111])
        (reg:SI 0 r0 [ command ])) "../HAL_driver/LCD_driver/lcd.c":160 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:QI 3 r3 [112])
        (reg:QI 3 r3 [111])) "../HAL_driver/LCD_driver/lcd.c":160 192 {*arm_movqi_insn}
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 command+0 S1 A8])
        (reg:QI 3 r3 [112])) "../HAL_driver/LCD_driver/lcd.c":160 192 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [114])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 command+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":164 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:HI 3 r3 [113])
        (reg:HI 3 r3 [114])) "../HAL_driver/LCD_driver/lcd.c":164 880 {*thumb2_movhi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (reg:HI 3 r3 [113]))) "../HAL_driver/LCD_driver/lcd.c":164 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:110 _1 ] [110])) "../HAL_driver/LCD_driver/lcd.c":164 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":164 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PORT") [flags 0x41]  <function_decl 000000000594e800 MCAL_GPIO_WRITE_PORT>) [0 MCAL_GPIO_WRITE_PORT S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":164 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":166 878 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":166 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":166 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":166 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 18 17 19 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":167 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":167 878 {*thumb2_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":167 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 21 20 22 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":167 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(call_insn 22 21 25 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_kick") [flags 0x3]  <function_decl 000000000594ec00 lcd_kick>) [0 lcd_kick S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":168 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 25 22 29 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":180 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 29 25 0 NOTE_INSN_DELETED)

;; Function lcd_send_char (lcd_send_char, funcdef_no=8, decl_uid=5643, cgraph_uid=8, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*thumb2_movhi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 25: point = 0, n_alt = -1
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = 5
   Insn 19: point = 0, n_alt = 1
   Insn 18: point = 0, n_alt = 1
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = 5
   Insn 15: point = 0, n_alt = 1
   Insn 14: point = 0, n_alt = 1
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = 5
   Insn 11: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = 0
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 1
   Insn 4: point = 6, n_alt = 6
   Insn 3: point = 7, n_alt = 0
   Insn 2: point = 9, n_alt = -2
 r110: [0..1]
 r111: [8..9]
 r112: [6..7]
 r113: [2..3]
 r114: [4..5]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r110: [0..1]
 r111: [8..9]
 r112: [6..7]
 r113: [2..3]
 r114: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 22.


lcd_send_char

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={8d,4u} r1={8d,3u} r2={7d,2u} r3={10d,5u} r7={1d,4u} r12={9d} r13={1d,6u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={1d,1u} 
;;    total ref usage 423{398d,25u,0e} in 19{15 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg:SI 3 r3 [111])
        (reg:SI 0 r0 [ character ])) "../HAL_driver/LCD_driver/lcd.c":181 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (reg:QI 3 r3 [112])
        (reg:QI 3 r3 [111])) "../HAL_driver/LCD_driver/lcd.c":181 192 {*arm_movqi_insn}
     (nil))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 character+0 S1 A8])
        (reg:QI 3 r3 [112])) "../HAL_driver/LCD_driver/lcd.c":181 192 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [114])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 character+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":185 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:HI 3 r3 [113])
        (reg:HI 3 r3 [114])) "../HAL_driver/LCD_driver/lcd.c":185 880 {*thumb2_movhi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (reg:HI 3 r3 [113]))) "../HAL_driver/LCD_driver/lcd.c":185 905 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:110 _1 ] [110])) "../HAL_driver/LCD_driver/lcd.c":185 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":185 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PORT") [flags 0x41]  <function_decl 000000000594e800 MCAL_GPIO_WRITE_PORT>) [0 MCAL_GPIO_WRITE_PORT S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":185 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 2 r2)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":187 878 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":187 878 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":187 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":187 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 18 17 19 2 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":189 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":189 878 {*thumb2_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 r0)
        (const_int 1073809408 [0x40010800])) "../HAL_driver/LCD_driver/lcd.c":189 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 21 20 22 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PIN") [flags 0x41]  <function_decl 000000000594e700 MCAL_GPIO_WRITE_PIN>) [0 MCAL_GPIO_WRITE_PIN S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":189 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(call_insn 22 21 25 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_kick") [flags 0x3]  <function_decl 000000000594ec00 lcd_kick>) [0 lcd_kick S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":192 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 25 22 29 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":206 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 29 25 0 NOTE_INSN_DELETED)

;; Function lcd_send_string (lcd_send_string, funcdef_no=9, decl_uid=5645, cgraph_uid=9, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 12:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 15:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 16:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 45:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) l  (1) Py {*arm_cmpsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 56: point = 0, n_alt = -1
  BB 8
   Insn 52: point = 0, n_alt = -1
   Insn 51: point = 0, n_alt = 0
   Insn 49: point = 1, n_alt = 1
   Insn 48: point = 3, n_alt = 5
  BB 4
   Insn 59: point = 4, n_alt = -1
   Insn 26: point = 4, n_alt = -1
   Insn 25: point = 4, n_alt = 1
   Insn 24: point = 4, n_alt = 1
  BB 2
   Insn 57: point = 4, n_alt = -1
   Insn 7: point = 4, n_alt = 7
   Insn 6: point = 5, n_alt = 1
   Insn 2: point = 6, n_alt = 7
  BB 7
   Insn 45: point = 6, n_alt = 7
   Insn 44: point = 7, n_alt = 1
   Insn 43: point = 8, n_alt = -1
   Insn 42: point = 8, n_alt = 1
   Insn 41: point = 8, n_alt = 1
   Insn 40: point = 8, n_alt = -1
  BB 6
   Insn 37: point = 8, n_alt = -1
   Insn 36: point = 8, n_alt = 0
   Insn 35: point = 9, n_alt = 5
  BB 5
   Insn 33: point = 10, n_alt = -1
   Insn 32: point = 10, n_alt = 0
   Insn 31: point = 11, n_alt = 5
  BB 3
   Insn 22: point = 12, n_alt = -1
   Insn 21: point = 12, n_alt = 0
   Insn 20: point = 13, n_alt = 5
   Insn 19: point = 14, n_alt = -1
   Insn 18: point = 14, n_alt = -2
   Insn 17: point = 15, n_alt = 1
   Insn 16: point = 17, n_alt = 7
   Insn 15: point = 18, n_alt = 3
   Insn 14: point = 19, n_alt = 5
   Insn 13: point = 20, n_alt = 7
   Insn 12: point = 21, n_alt = 2
   Insn 11: point = 23, n_alt = 5
 r110: [16..19]
 r111: [14..15]
 r112: [0..1]
 r113: [4..5]
 r114: [20..21]
 r115: [22..23]
 r116: [17..18]
 r117: [12..13]
 r118: [10..11]
 r119: [8..9]
 r120: [6..7]
 r121: [2..3]
Compressing live ranges: from 24 to 22 - 91%
Ranges after the compression:
 r110: [16..17]
 r111: [14..15]
 r112: [0..1]
 r113: [4..5]
 r114: [18..19]
 r115: [20..21]
 r116: [16..17]
 r117: [12..13]
 r118: [10..11]
 r119: [8..9]
 r120: [6..7]
 r121: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 14
changing reg in insn 17
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 49
changing reg in insn 51
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 31
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 43.


lcd_send_string

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,4u} r1={7d,2u} r2={6d,1u} r3={16d,12u} r7={1d,20u} r12={9d} r13={1d,13u} r14={5d} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={8d,4u} r101={4d} r102={1d,1u} 
;;    total ref usage 463{406d,57u,0e} in 37{33 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 string+0 S4 A32])
        (reg:SI 0 r0 [ string ])) "../HAL_driver/LCD_driver/lcd.c":207 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [113])
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":210 878 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 57 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 3 r3 [113])) "../HAL_driver/LCD_driver/lcd.c":210 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 57 7 58 2 (set (pc)
        (label_ref 46)) "../HAL_driver/LCD_driver/lcd.c":211 214 {*arm_jump}
     (nil)
 -> 46)
;;  succ:       8 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 58 57 50)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 114 115 116 117
(code_label 50 58 10 3 25 (nil) [1 uses])
(note 10 50 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 3 r3 [115])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":213 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [114])
        (plus:SI (reg:SI 3 r3 [115])
            (const_int 1 [0x1]))) "../HAL_driver/LCD_driver/lcd.c":213 4 {*arm_addsi3}
     (nil))
(insn 13 12 14 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 3 r3 [114])) "../HAL_driver/LCD_driver/lcd.c":213 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 3 r3 [orig:110 string.0_1 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 string+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":214 878 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 3 (set (reg:SI 2 r2 [116])
        (plus:SI (reg/f:SI 3 r3 [orig:110 string.0_1 ] [110])
            (const_int 1 [0x1]))) "../HAL_driver/LCD_driver/lcd.c":214 4 {*arm_addsi3}
     (nil))
(insn 16 15 17 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 string+0 S4 A32])
        (reg:SI 2 r2 [116])) "../HAL_driver/LCD_driver/lcd.c":214 878 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:110 string.0_1 ] [110]) [0 *string.0_1+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":214 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 18 17 19 3 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:111 _2 ] [111])) "../HAL_driver/LCD_driver/lcd.c":214 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 19 18 20 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_char") [flags 0x3]  <function_decl 000000000594ee00 lcd_send_char>) [0 lcd_send_char S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":214 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 20 19 21 3 (set (reg:SI 3 r3 [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":215 878 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [117])
            (const_int 16 [0x10]))) "../HAL_driver/LCD_driver/lcd.c":215 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":215 204 {arm_cond_branch}
     (nil)
 -> 29)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":217 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) "../HAL_driver/LCD_driver/lcd.c":217 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 26 25 59 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_GotoXY") [flags 0x3]  <function_decl 0000000005982100 lcd_GotoXY>) [0 lcd_GotoXY S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":217 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 59 26 60 4 (set (pc)
        (label_ref 46)) 214 {*arm_jump}
     (nil)
 -> 46)
;;  succ:       8 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 60 59 29)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118
(code_label 29 60 30 5 23 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":219 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [118])
            (const_int 32 [0x20]))) "../HAL_driver/LCD_driver/lcd.c":219 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":219 204 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 119
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 3 r3 [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":219 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [119])
            (const_int 33 [0x21]))) "../HAL_driver/LCD_driver/lcd.c":219 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":219 204 {arm_cond_branch}
     (nil)
 -> 46)
;;  succ:       7 (FALLTHRU)
;;              8 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 120
(code_label 38 37 39 7 24 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 40 39 41 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x3]  <function_decl 0000000005982000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":221 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 41 40 42 7 (set (reg:SI 1 r1)
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":222 878 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 7 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":222 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 43 42 44 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_GotoXY") [flags 0x3]  <function_decl 0000000005982100 lcd_GotoXY>) [0 lcd_GotoXY S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":222 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 44 43 45 7 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "../HAL_driver/LCD_driver/lcd.c":223 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 count+0 S4 A32])
        (reg:SI 3 r3 [120])) "../HAL_driver/LCD_driver/lcd.c":223 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;;              6 (DFS_BACK)
;;              4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 112 121
(code_label 46 45 47 8 22 (nil) [3 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:SI 3 r3 [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 string+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":211 878 {*thumb2_movsi_insn}
     (nil))
(insn 49 48 51 8 (set (reg:SI 3 r3 [orig:112 _3 ] [112])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [121]) [0 *string_4+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":211 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 51 49 52 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:112 _3 ] [112])
            (const_int 0 [0]))) "../HAL_driver/LCD_driver/lcd.c":211 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":211 204 {arm_cond_branch}
     (nil)
 -> 50)
;;  succ:       3
;;              9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 53 52 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 53 61 9 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":228 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 61 56 0 NOTE_INSN_DELETED)

;; Function lcd_clear_screen (lcd_clear_screen, funcdef_no=10, decl_uid=5648, cgraph_uid=10, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


lcd_clear_screen

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={3d} r13={1d,3u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} 
;;    total ref usage 111{104d,7u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "../HAL_driver/LCD_driver/lcd.c":231 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 6 5 9 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":231 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 9 6 10 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":233 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 10 9 0 NOTE_INSN_DELETED)

;; Function lcd_GotoXY (lcd_GotoXY, funcdef_no=11, decl_uid=5651, cgraph_uid=11, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 7:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) Uu {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 20:  (0) r  (1) rk  (2) L {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) Uu {*arm_movqi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 39:  (0) r  (1) rk  (2) L {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 9
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
  BB 9
   Insn 53: point = 0, n_alt = -1
  BB 7
   Insn 42: point = 0, n_alt = -1
   Insn 41: point = 0, n_alt = -2
   Insn 40: point = 1, n_alt = 0
   Insn 39: point = 3, n_alt = 10
   Insn 38: point = 5, n_alt = 5
  BB 6
   Insn 36: point = 6, n_alt = -1
   Insn 35: point = 6, n_alt = 0
   Insn 34: point = 7, n_alt = 1
  BB 5
   Insn 32: point = 8, n_alt = -1
   Insn 31: point = 8, n_alt = 0
   Insn 30: point = 9, n_alt = 1
  BB 4
   Insn 47: point = 10, n_alt = -1
   Insn 23: point = 10, n_alt = -1
   Insn 22: point = 10, n_alt = -2
   Insn 21: point = 11, n_alt = 0
   Insn 20: point = 13, n_alt = 10
   Insn 19: point = 15, n_alt = 5
  BB 3
   Insn 17: point = 16, n_alt = -1
   Insn 16: point = 16, n_alt = 0
   Insn 15: point = 17, n_alt = 1
  BB 2
   Insn 13: point = 18, n_alt = -1
   Insn 12: point = 18, n_alt = 0
   Insn 11: point = 19, n_alt = 1
   Insn 7: point = 20, n_alt = 6
   Insn 6: point = 21, n_alt = 0
   Insn 4: point = 23, n_alt = 6
   Insn 3: point = 24, n_alt = 0
   Insn 5: point = 26, n_alt = -2
   Insn 2: point = 27, n_alt = -2
 r110: [10..11]
 r111: [0..1]
 r112: [25..27]
 r113: [23..24]
 r114: [22..26]
 r115: [20..21]
 r116: [18..19]
 r117: [16..17]
 r118: [14..15]
 r119: [12..13]
 r120: [8..9]
 r121: [6..7]
 r122: [4..5]
 r123: [2..3]
Compressing live ranges: from 28 to 26 - 92%
Ranges after the compression:
 r110: [10..11]
 r111: [0..1]
 r112: [24..25]
 r113: [22..23]
 r114: [22..25]
 r115: [20..21]
 r116: [18..19]
 r117: [16..17]
 r118: [14..15]
 r119: [12..13]
 r120: [8..9]
 r121: [6..7]
 r122: [4..5]
 r123: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 21
changing reg in insn 22
changing reg in insn 40
changing reg in insn 41
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 42.


lcd_GotoXY

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,3u} r1={3d,1u} r2={4d,1u} r3={16d,13u} r7={1d,17u} r12={5d} r13={1d,11u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={6d,4u} r101={2d} r102={1d,1u} 
;;    total ref usage 268{217d,51u,0e} in 30{28 regular + 2 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 112 113 114 115 116
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 5 2 (set (reg:SI 3 r3 [112])
        (reg:SI 0 r0 [ line ])) "../HAL_driver/LCD_driver/lcd.c":234 878 {*thumb2_movsi_insn}
     (nil))
(insn 5 2 3 2 (set (reg:SI 2 r2 [114])
        (reg:SI 1 r1 [ position ])) "../HAL_driver/LCD_driver/lcd.c":234 878 {*thumb2_movsi_insn}
     (nil))
(insn 3 5 4 2 (set (reg:QI 3 r3 [113])
        (reg:QI 3 r3 [112])) "../HAL_driver/LCD_driver/lcd.c":234 192 {*arm_movqi_insn}
     (nil))
(insn 4 3 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 line+0 S1 A8])
        (reg:QI 3 r3 [113])) "../HAL_driver/LCD_driver/lcd.c":234 192 {*arm_movqi_insn}
     (nil))
(insn 6 4 7 2 (set (reg:QI 3 r3 [115])
        (reg:QI 2 r2 [114])) "../HAL_driver/LCD_driver/lcd.c":234 192 {*arm_movqi_insn}
     (nil))
(insn 7 6 8 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 position+0 S1 A8])
        (reg:QI 3 r3 [115])) "../HAL_driver/LCD_driver/lcd.c":234 192 {*arm_movqi_insn}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 3 r3 [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 line+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":235 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [116])
            (const_int 1 [0x1]))) "../HAL_driver/LCD_driver/lcd.c":235 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":235 204 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 3 r3 [117])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 6 [0x6])) [0 position+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":237 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 15 17 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [117])
            (const_int 15 [0xf]))) "../HAL_driver/LCD_driver/lcd.c":237 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 52)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":237 204 {arm_cond_branch}
     (nil)
 -> 52)
;;  succ:       4 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 118 119
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:QI 3 r3 [118])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 position+0 S1 A8])) "../HAL_driver/LCD_driver/lcd.c":239 192 {*arm_movqi_insn}
     (nil))
(insn 20 19 21 4 (set (reg:SI 3 r3 [119])
        (plus:SI (reg:SI 3 r3 [118])
            (const_int -128 [0xffffffffffffff80]))) "../HAL_driver/LCD_driver/lcd.c":239 4 {*arm_addsi3}
     (nil))
(insn 21 20 22 4 (set (reg:SI 3 r3 [orig:110 _1 ] [110])
        (zero_extend:SI (reg:QI 3 r3 [119]))) "../HAL_driver/LCD_driver/lcd.c":239 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:110 _1 ] [110])) "../HAL_driver/LCD_driver/lcd.c":239 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 23 22 47 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":239 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 47 23 48 4 (set (pc)
        (label_ref:SI 52)) "../HAL_driver/LCD_driver/lcd.c":249 214 {*arm_jump}
     (nil)
 -> 52)
;;  succ:       9 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 48 47 28)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120
(code_label 28 48 29 5 28 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:SI 3 r3 [120])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 line+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":242 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 31 30 32 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [120])
            (const_int 2 [0x2]))) "../HAL_driver/LCD_driver/lcd.c":242 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 52)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":242 204 {arm_cond_branch}
     (nil)
 -> 52)
;;  succ:       6 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 3 r3 [121])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 6 [0x6])) [0 position+0 S1 A8]))) "../HAL_driver/LCD_driver/lcd.c":244 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 35 34 36 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [121])
            (const_int 15 [0xf]))) "../HAL_driver/LCD_driver/lcd.c":244 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 52)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":244 204 {arm_cond_branch}
     (nil)
 -> 52)
;;  succ:       7 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 111 122 123
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:QI 3 r3 [122])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 position+0 S1 A8])) "../HAL_driver/LCD_driver/lcd.c":246 192 {*arm_movqi_insn}
     (nil))
(insn 39 38 40 7 (set (reg:SI 3 r3 [123])
        (plus:SI (reg:SI 3 r3 [122])
            (const_int -64 [0xffffffffffffffc0]))) "../HAL_driver/LCD_driver/lcd.c":246 4 {*arm_addsi3}
     (nil))
(insn 40 39 41 7 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (reg:QI 3 r3 [123]))) "../HAL_driver/LCD_driver/lcd.c":246 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 41 40 42 7 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:111 _2 ] [111])) "../HAL_driver/LCD_driver/lcd.c":246 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 42 41 52 7 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_command") [flags 0x3]  <function_decl 000000000594ed00 lcd_send_command>) [0 lcd_send_command S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":246 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;;              4 [100.0%] 
;;              7 [100.0%]  (FALLTHRU)
;;              5
;;              6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 52 42 51 9 31 (nil) [4 uses])
(note 51 52 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 51 45 9 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":249 236 {nop}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 45 53 46 8 27 (nil) [0 uses])
(note 46 45 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 54 46 0 NOTE_INSN_DELETED)

;; Function lcd_display_number (lcd_display_number, funcdef_no=12, decl_uid=5653, cgraph_uid=12, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 6:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 11:  (0) r  (1) rk  (2) rI {*arm_addsi3}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = 4
   Insn 10: point = 2, n_alt = -1
   Insn 9: point = 2, n_alt = -2
   Insn 8: point = 3, n_alt = 5
   Insn 7: point = 3, n_alt = 5
   Insn 6: point = 3, n_alt = 4
   Insn 2: point = 4, n_alt = 7
 r110: [2..3]
 r111: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r110: [2..3]
 r111: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 6
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 13.


lcd_display_number

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={4d,1u} r3={5d,2u} r7={1d,6u} r12={5d} r13={1d,4u} r14={3d} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={1d,1u} 
;;    total ref usage 221{203d,18u,0e} in 10{8 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 num+0 S4 A32])
        (reg:SI 0 r0 [ num ])) "../HAL_driver/LCD_driver/lcd.c":250 878 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [110])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 8 [0x8]))) "../HAL_driver/LCD_driver/lcd.c":252 4 {*arm_addsi3}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 num+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":252 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 00000000059c35a0 *.LC0>)) "../HAL_driver/LCD_driver/lcd.c":252 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [110])) "../HAL_driver/LCD_driver/lcd.c":252 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0000000005614100 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":252 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 11 10 12 2 (set (reg:SI 3 r3 [111])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 8 [0x8]))) "../HAL_driver/LCD_driver/lcd.c":253 4 {*arm_addsi3}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [111])) "../HAL_driver/LCD_driver/lcd.c":253 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 13 12 16 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x3]  <function_decl 000000000594ef00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":253 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 16 13 17 2 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":254 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 17 16 0 NOTE_INSN_DELETED)

;; Function lcd_display_real_number (lcd_display_real_number, funcdef_no=13, decl_uid=5655, cgraph_uid=13, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=72, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=64, prev_offset=0)
Can't eliminate 102 to 13 (offset=56, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=3,overall=23,losers=2,rld_nregs=2
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2:  (0) m  (1) q {*movdf_soft_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rDa {*movdf_soft_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) q  (1) mF {*movdf_soft_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 24:  (0) m  (1) l {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rDa {*movdf_soft_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) q  (1) mF {*movdf_soft_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =r  (1) %r  (2) I {*arm_xorsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) q  (1) mF {*movdf_soft_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=1,overall=21,losers=2,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) m  (1) r {*arm_movsf_soft_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) mE {*arm_movsf_soft_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 52:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) mE {*arm_movsf_soft_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=1,overall=21,losers=2,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) m  (1) r {*arm_movsf_soft_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) mE {*arm_movsf_soft_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) mE {*arm_movsf_soft_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 69:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 70:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_insn}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 78:  (0) r  (1) rk  (2) rI {*arm_addsi3}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 89: point = 0, n_alt = -1
   Insn 80: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = -2
   Insn 78: point = 1, n_alt = 4
   Insn 77: point = 2, n_alt = -1
   Insn 76: point = 2, n_alt = -2
   Insn 75: point = 3, n_alt = 5
   Insn 74: point = 3, n_alt = 5
   Insn 73: point = 3, n_alt = 5
   Insn 72: point = 3, n_alt = 7
   Insn 71: point = 4, n_alt = 5
   Insn 70: point = 5, n_alt = 4
   Insn 69: point = 6, n_alt = 7
   Insn 68: point = 7, n_alt = -2
   Insn 67: point = 8, n_alt = -1
   Insn 66: point = 8, n_alt = -2
   Insn 65: point = 9, n_alt = -2
   Insn 64: point = 11, n_alt = -2
   Insn 63: point = 12, n_alt = -1
   Insn 62: point = 12, n_alt = 1
   Insn 61: point = 12, n_alt = 1
   Insn 60: point = 12, n_alt = 2
   Insn 59: point = 13, n_alt = -2
   Insn 58: point = 14, n_alt = -1
   Insn 57: point = 14, n_alt = 1
   Insn 56: point = 14, n_alt = -2
   Insn 55: point = 15, n_alt = -2
   Insn 54: point = 16, n_alt = -1
   Insn 53: point = 16, n_alt = 5
   Insn 52: point = 16, n_alt = 7
   Insn 51: point = 17, n_alt = -2
   Insn 50: point = 18, n_alt = -1
   Insn 49: point = 18, n_alt = 1
   Insn 48: point = 18, n_alt = 2
   Insn 47: point = 19, n_alt = -2
   Insn 46: point = 20, n_alt = -1
   Insn 45: point = 20, n_alt = -2
  BB 6
   Insn 94: point = 22, n_alt = -1
   Insn 37: point = 22, n_alt = 0
   Insn 36: point = 23, n_alt = 5
   Insn 35: point = 24, n_alt = 5
  BB 7
   Insn 42: point = 25, n_alt = 3
  BB 5
   Insn 30: point = 26, n_alt = -1
   Insn 29: point = 26, n_alt = 0
   Insn 28: point = 27, n_alt = -2
   Insn 27: point = 28, n_alt = -1
   Insn 26: point = 28, n_alt = 3
   Insn 25: point = 28, n_alt = 0
   Insn 24: point = 28, n_alt = 7
  BB 3
   Insn 91: point = 30, n_alt = -1
   Insn 16: point = 30, n_alt = 5
  BB 4
   Insn 21: point = 32, n_alt = 5
  BB 2
   Insn 11: point = 34, n_alt = -1
   Insn 10: point = 34, n_alt = 0
   Insn 9: point = 35, n_alt = -2
   Insn 8: point = 36, n_alt = -1
   Insn 7: point = 36, n_alt = 3
   Insn 6: point = 36, n_alt = 0
   Insn 2: point = 36, n_alt = 4
 r110: [14..15]
 r111: [8..9]
 r112: [32..32] [28..30]
 r113: [20..36]
 r114: [34..35]
 r115: [26..27]
 r116: [22..23]
 r117: [18..19]
 r118: [16..17]
 r119: [12..13]
 r120: [10..11]
 r121: [6..7]
 r122: [2..5]
 r123: [3..4]
 r124: [0..1]
Compressing live ranges: from 37 to 27 - 72%
Ranges after the compression:
 r110: [12..13]
 r111: [6..7]
 r112: [22..24]
 r113: [18..26]
 r114: [25..26]
 r115: [20..21]
 r116: [18..19]
 r117: [16..17]
 r118: [14..15]
 r119: [10..11]
 r120: [8..9]
 r121: [4..5]
 r122: [2..3]
 r123: [2..3]
 r124: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=72, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=16, prev_offset=0)
Can eliminate 103 to 7 (offset=64, prev_offset=64)
Can't eliminate 102 to 13 (offset=56, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=48, prev_offset=48)
changing reg in insn 55
changing reg in insn 56
changing reg in insn 65
changing reg in insn 66
changing reg in insn 21
changing reg in insn 16
changing reg in insn 24
changing reg in insn 42
changing reg in insn 45
changing reg in insn 37
changing reg in insn 35
changing reg in insn 9
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 76
changing reg in insn 71
changing reg in insn 72
changing reg in insn 78
changing reg in insn 79
deleting insn with uid = 65.
deleting insn with uid = 76.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 80.


lcd_display_real_number

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={21d,19u} r1={17d,7u} r2={14d,3u} r3={27d,15u} r4={2d,1u} r5={2d,1u} r7={1d,28u} r12={21d} r13={1d,20u} r14={11d} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={12d,2u} r101={10d} r102={1d,1u,5e} 
;;    total ref usage 1092{990d,97u,5e} in 57{47 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 114
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DF (reg/f:SI 7 r7) [7 number+0 S8 A64])
        (reg:DF 0 r0 [ number ])) "../HAL_driver/LCD_driver/lcd.c":255 195 {*movdf_soft_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DF 2 r2)
        (const_double:DF 0.0 [0x0.0p+0])) "../HAL_driver/LCD_driver/lcd.c":257 195 {*movdf_soft_insn}
     (nil))
(insn 7 6 8 2 (set (reg:DF 0 r0)
        (mem/c:DF (reg/f:SI 7 r7) [7 number+0 S8 A64])) "../HAL_driver/LCD_driver/lcd.c":257 195 {*movdf_soft_insn}
     (nil))
(call_insn/u 8 7 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":257 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 9 8 10 2 (set (reg:SI 3 r3 [114])
        (reg:SI 0 r0)) "../HAL_driver/LCD_driver/lcd.c":257 878 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (lt:SI (mem/c:DF (plus:SI (reg/f:SI 102 sfp)
                    (const_int -48 [0xffffffffffffffd0])) [7 number+0 S8 A64])
            (const_double:DF 0.0 [0x0.0p+0]))
        (nil)))
(insn 10 9 11 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [114])
            (const_int 0 [0]))) "../HAL_driver/LCD_driver/lcd.c":257 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 15 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 90)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":257 204 {arm_cond_branch}
     (nil)
 -> 90)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 112
(note 15 11 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 91 3 (set (reg/f:SI 3 r3 [orig:112 iftmp.1_3 ] [112])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 00000000059c3630 *.LC1>)) "../HAL_driver/LCD_driver/lcd.c":257 878 {*thumb2_movsi_insn}
     (nil))
(jump_insn 91 16 92 3 (set (pc)
        (label_ref 22)) 214 {*arm_jump}
     (nil)
 -> 22)
;;  succ:       5 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 112 113

(barrier 92 91 90)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 112
(code_label 90 92 20 4 44 (nil) [1 uses])
(note 20 90 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 3 r3 [orig:112 iftmp.1_3 ] [112])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 00000000059c36c0 *.LC2>)) "../HAL_driver/LCD_driver/lcd.c":257 878 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 112 113

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 112 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 112
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 115
(code_label 22 21 23 5 38 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [5 tmpsign+0 S4 A32])
        (reg/f:SI 3 r3 [orig:112 iftmp.1_3 ] [112])) "../HAL_driver/LCD_driver/lcd.c":257 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 5 (set (reg:DF 2 r2)
        (const_double:DF 0.0 [0x0.0p+0])) "../HAL_driver/LCD_driver/lcd.c":258 195 {*movdf_soft_insn}
     (nil))
(insn 26 25 27 5 (set (reg:DF 0 r0)
        (mem/c:DF (reg/f:SI 7 r7) [7 number+0 S8 A64])) "../HAL_driver/LCD_driver/lcd.c":258 195 {*movdf_soft_insn}
     (nil))
(call_insn/u 27 26 28 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_dcmplt") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":258 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 2 r2))
            (expr_list (use (reg:DF 0 r0))
                (nil)))))
(insn 28 27 29 5 (set (reg:SI 3 r3 [115])
        (reg:SI 0 r0)) "../HAL_driver/LCD_driver/lcd.c":258 878 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (lt:SI (mem/c:DF (plus:SI (reg/f:SI 102 sfp)
                    (const_int -48 [0xffffffffffffffd0])) [7 number+0 S8 A64])
            (const_double:DF 0.0 [0x0.0p+0]))
        (nil)))
(insn 29 28 30 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [115])
            (const_int 0 [0]))) "../HAL_driver/LCD_driver/lcd.c":258 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 34 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 93)
            (pc))) "../HAL_driver/LCD_driver/lcd.c":258 204 {arm_cond_branch}
     (nil)
 -> 93)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 116
(note 34 30 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 4 r4 [orig:113 iftmp.2_4 ] [113])
        (mem/c:SI (reg/f:SI 7 r7) [7 number+0 S4 A64])) "../HAL_driver/LCD_driver/lcd.c":258 878 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 6 (set (reg:SI 3 r3 [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [7 number+4 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":258 878 {*thumb2_movsi_insn}
     (nil))
(insn 37 36 94 6 (set (reg:SI 5 r5 [ iftmp.2_4+4 ])
        (xor:SI (reg:SI 3 r3 [116])
            (const_int -2147483648 [0xffffffff80000000]))) "../HAL_driver/LCD_driver/lcd.c":258 111 {*arm_xorsi3}
     (nil))
(jump_insn 94 37 95 6 (set (pc)
        (label_ref 43)) 214 {*arm_jump}
     (nil)
 -> 43)
;;  succ:       8 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

(barrier 95 94 93)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113
(code_label 93 95 41 7 45 (nil) [1 uses])
(note 41 93 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:DF 4 r4 [orig:113 iftmp.2_4 ] [113])
        (mem/c:DF (reg/f:SI 7 r7) [7 number+0 S8 A64])) "../HAL_driver/LCD_driver/lcd.c":258 195 {*movdf_soft_insn}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 117 118 119 120 121 122 123 124
(code_label 43 42 44 8 41 (nil) [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:DF 0 r0)
        (reg:DF 4 r4 [orig:113 iftmp.2_4 ] [113])) "../HAL_driver/LCD_driver/lcd.c":258 195 {*movdf_soft_insn}
     (nil))
(call_insn/u 46 45 47 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_d2f") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":258 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DF 0 r0))
            (nil))))
(insn 47 46 48 8 (set (reg:SF 3 r3 [117])
        (reg:SF 0 r0)) "../HAL_driver/LCD_driver/lcd.c":258 194 {*arm_movsf_soft_insn}
     (nil))
(insn 48 47 49 8 (set (mem/c:SF (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [6 tempvalue+0 S4 A32])
        (reg:SF 3 r3 [117])) "../HAL_driver/LCD_driver/lcd.c":258 194 {*arm_movsf_soft_insn}
     (nil))
(insn 49 48 50 8 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [6 tempvalue+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":260 194 {*arm_movsf_soft_insn}
     (nil))
(call_insn/u 50 49 51 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2iz") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":260 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 51 50 52 8 (set (reg:SI 3 r3 [118])
        (reg:SI 0 r0)) "../HAL_driver/LCD_driver/lcd.c":260 878 {*thumb2_movsi_insn}
     (expr_list:REG_EQUAL (fix:SI (mem/c:SF (plus:SI (reg/f:SI 102 sfp)
                    (const_int -8 [0xfffffffffffffff8])) [6 tempvalue+0 S4 A32]))
        (nil)))
(insn 52 51 53 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [3 tmpint1+0 S4 A32])
        (reg:SI 3 r3 [118])) "../HAL_driver/LCD_driver/lcd.c":260 878 {*thumb2_movsi_insn}
     (nil))
(insn 53 52 54 8 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [3 tmpint1+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":261 878 {*thumb2_movsi_insn}
     (nil))
(call_insn/u 54 53 55 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_i2f") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":261 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SI 0 r0))
            (nil))))
(insn 55 54 56 8 (set (reg:SF 3 r3 [orig:110 _1 ] [110])
        (reg:SF 0 r0)) "../HAL_driver/LCD_driver/lcd.c":261 194 {*arm_movsf_soft_insn}
     (expr_list:REG_EQUAL (float:SF (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -12 [0xfffffffffffffff4])) [3 tmpint1+0 S4 A32]))
        (nil)))
(insn 56 55 57 8 (set (reg:SF 1 r1)
        (reg:SF 3 r3 [orig:110 _1 ] [110])) "../HAL_driver/LCD_driver/lcd.c":261 194 {*arm_movsf_soft_insn}
     (nil))
(insn 57 56 58 8 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [6 tempvalue+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":261 194 {*arm_movsf_soft_insn}
     (nil))
(call_insn/u 58 57 59 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_fsub") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":261 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 1 r1))
            (expr_list (use (reg:SF 0 r0))
                (nil)))))
(insn 59 58 60 8 (set (reg:SF 3 r3 [119])
        (reg:SF 0 r0)) "../HAL_driver/LCD_driver/lcd.c":261 194 {*arm_movsf_soft_insn}
     (nil))
(insn 60 59 61 8 (set (mem/c:SF (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [6 tmpfrac+0 S4 A32])
        (reg:SF 3 r3 [119])) "../HAL_driver/LCD_driver/lcd.c":261 194 {*arm_movsf_soft_insn}
     (nil))
(insn 61 60 62 8 (set (reg:SF 1 r1)
        (const_double:SF 1.0e+4 [0x0.9c4p+14])) "../HAL_driver/LCD_driver/lcd.c":262 194 {*arm_movsf_soft_insn}
     (nil))
(insn 62 61 63 8 (set (reg:SF 0 r0)
        (mem/c:SF (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [6 tmpfrac+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":262 194 {*arm_movsf_soft_insn}
     (nil))
(call_insn/u 63 62 64 8 (parallel [
            (set (reg:SF 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_fmul") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":262 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 1 r1))
            (expr_list (use (reg:SF 0 r0))
                (nil)))))
(insn 64 63 66 8 (set (reg:SF 3 r3 [120])
        (reg:SF 0 r0)) "../HAL_driver/LCD_driver/lcd.c":262 194 {*arm_movsf_soft_insn}
     (expr_list:REG_EQUAL (mult:SF (mem/c:SF (plus:SI (reg/f:SI 102 sfp)
                    (const_int -16 [0xfffffffffffffff0])) [6 tmpfrac+0 S4 A32])
            (const_double:SF 1.0e+4 [0x0.9c4p+14]))
        (nil)))
(insn 66 64 67 8 (set (reg:SF 0 r0)
        (reg:SF 3 r3 [orig:111 _2 ] [111])) "../HAL_driver/LCD_driver/lcd.c":262 194 {*arm_movsf_soft_insn}
     (nil))
(call_insn/u 67 66 68 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_f2iz") [flags 0x41]) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":262 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:SF 0 r0))
            (nil))))
(insn 68 67 69 8 (set (reg:SI 3 r3 [121])
        (reg:SI 0 r0)) "../HAL_driver/LCD_driver/lcd.c":262 878 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [3 tmpint2+0 S4 A32])
        (reg:SI 3 r3 [121])) "../HAL_driver/LCD_driver/lcd.c":262 878 {*thumb2_movsi_insn}
     (nil))
(insn 70 69 71 8 (set (reg:SI 0 r0 [122])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 12 [0xc]))) "../HAL_driver/LCD_driver/lcd.c":264 4 {*arm_addsi3}
     (nil))
(insn 71 70 72 8 (set (reg:SI 3 r3 [123])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [3 tmpint2+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":264 878 {*thumb2_movsi_insn}
     (nil))
(insn 72 71 73 8 (set (mem:SI (reg/f:SI 13 sp) [0  S4 A32])
        (reg:SI 3 r3 [123])) "../HAL_driver/LCD_driver/lcd.c":264 878 {*thumb2_movsi_insn}
     (nil))
(insn 73 72 74 8 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [3 tmpint1+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":264 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 8 (set (reg:SI 2 r2)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [5 tmpsign+0 S4 A32])) "../HAL_driver/LCD_driver/lcd.c":264 878 {*thumb2_movsi_insn}
     (nil))
(insn 75 74 77 8 (set (reg:SI 1 r1)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 00000000059c3750 *.LC3>)) "../HAL_driver/LCD_driver/lcd.c":264 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 77 75 78 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41]  <function_decl 0000000005614100 sprintf>) [0 __builtin_sprintf S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":264 220 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (expr_list:SI (use (mem:SI (reg/f:SI 13 sp) [0  S4 A32]))
                            (nil))))))))
(insn 78 77 79 8 (set (reg:SI 3 r3 [124])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 12 [0xc]))) "../HAL_driver/LCD_driver/lcd.c":265 4 {*arm_addsi3}
     (nil))
(insn 79 78 80 8 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [124])) "../HAL_driver/LCD_driver/lcd.c":265 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 80 79 89 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x3]  <function_decl 000000000594ef00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../HAL_driver/LCD_driver/lcd.c":265 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 89 80 96 8 (const_int 0 [0]) "../HAL_driver/LCD_driver/lcd.c":266 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 96 89 0 NOTE_INSN_DELETED)
