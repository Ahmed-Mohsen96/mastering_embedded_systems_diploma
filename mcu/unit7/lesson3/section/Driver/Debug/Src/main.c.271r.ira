
;; Function clock_init (clock_init, funcdef_no=3, decl_uid=5658, cgraph_uid=3, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a1 (r117,l0) best LO_REGS, allocno LO_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a0 (r116,l0) best LO_REGS, allocno LO_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a2 (r115,l0) best LO_REGS, allocno LO_REGS
    r114: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a3 (r114,l0) best LO_REGS, allocno LO_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a5 (r113,l0) best LO_REGS, allocno LO_REGS
    r112: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a4 (r112,l0) best LO_REGS, allocno LO_REGS
    r111: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a6 (r111,l0) best LO_REGS, allocno LO_REGS
    r110: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a7 (r110,l0) best LO_REGS, allocno LO_REGS

  a0(r116,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a2(r115,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a3(r114,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a4(r112,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15
  a5(r113,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a6(r111,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:20
  a7(r110,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:15

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 5(l0): point = 20
 a0(r116): [3..6]
 a1(r117): [3..4]
 a2(r115): [5..8]
 a3(r114): [9..10]
 a4(r112): [13..16]
 a5(r113): [13..14]
 a6(r111): [15..18]
 a7(r110): [19..20]
Compressing live ranges: from 23 to 12 - 52%
Ranges after the compression:
 a0(r116): [0..3]
 a1(r117): [0..1]
 a2(r115): [2..3]
 a3(r114): [4..5]
 a4(r112): [6..9]
 a5(r113): [6..7]
 a6(r111): [8..9]
 a7(r110): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r110 l0     3    6:r111 l0     3    4:r112 l0     2    5:r113 l0     3
    3:r114 l0     3    2:r115 l0     3    0:r116 l0     2    1:r117 l0     3
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


clock_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,2u} r12={1d} r13={1d,2u} r14={1d} r102={1d,2u} r103={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 33{18d,15u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 110 111 112 113 114 115 116 117
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 110 [ _1 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:SI 111 [ _2 ])
        (mem/v:SI (plus:SI (reg/f:SI 110 [ _1 ])
                (const_int 24 [0x18])) [4 _1->APB2ENR+0 S4 A32])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 110 [ _1 ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 112 [ _3 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 113 [ _4 ])
        (ior:SI (reg:SI 111 [ _2 ])
            (const_int 4 [0x4]))) "../Src/main.c":44 105 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 111 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (mem/v:SI (plus:SI (reg/f:SI 112 [ _3 ])
                (const_int 24 [0x18])) [4 _3->APB2ENR+0 S4 A32])
        (reg:SI 113 [ _4 ])) "../Src/main.c":44 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
        (expr_list:REG_DEAD (reg/f:SI 112 [ _3 ])
            (nil))))
(insn 10 9 11 2 (set (reg/f:SI 114 [ _5 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 115 [ _6 ])
        (mem/v:SI (plus:SI (reg/f:SI 114 [ _5 ])
                (const_int 24 [0x18])) [4 _5->APB2ENR+0 S4 A32])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _5 ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 116 [ _7 ])
        (const_int 1073876992 [0x40021000])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 117 [ _8 ])
        (ior:SI (reg:SI 115 [ _6 ])
            (const_int 8 [0x8]))) "../Src/main.c":46 105 {*iorsi3_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _6 ])
        (nil)))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 116 [ _7 ])
                (const_int 24 [0x18])) [4 _7->APB2ENR+0 S4 A32])
        (reg:SI 117 [ _8 ])) "../Src/main.c":46 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _8 ])
        (expr_list:REG_DEAD (reg/f:SI 116 [ _7 ])
            (nil))))
(insn 17 14 0 2 (const_int 0 [0]) "../Src/main.c":47 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]


;; Function GPIO_init (GPIO_init, funcdef_no=4, decl_uid=5660, cgraph_uid=4, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 95.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r158,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a1(r157,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a2(r156,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a3(r155,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a4(r154,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a5(r152,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a6(r153,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a7(r151,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a8(r150,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a9(r149,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a10(r148,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a11(r147,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a12(r145,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a13(r146,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a14(r144,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a15(r143,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a16(r142,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a17(r141,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a18(r140,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a19(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a20(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a21(r137,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a22(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a23(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a24(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a25(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a26(r131,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a27(r132,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a28(r130,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a29(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a30(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a31(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a32(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a33(r124,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a34(r125,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a35(r123,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a36(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a37(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a38(r120,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a39(r119,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a40(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a41(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a42(r116,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:13
  a43(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a44(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a45(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a46(r112,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a47(r110,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a48(r111,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6

   Insn 98(l0): point = 0
   Insn 95(l0): point = 2
   Insn 94(l0): point = 4
   Insn 93(l0): point = 6
   Insn 92(l0): point = 8
   Insn 91(l0): point = 10
   Insn 90(l0): point = 12
   Insn 89(l0): point = 14
   Insn 88(l0): point = 16
   Insn 87(l0): point = 18
   Insn 86(l0): point = 20
   Insn 85(l0): point = 22
   Insn 84(l0): point = 24
   Insn 83(l0): point = 26
   Insn 82(l0): point = 28
   Insn 81(l0): point = 30
   Insn 80(l0): point = 32
   Insn 79(l0): point = 34
   Insn 78(l0): point = 36
   Insn 77(l0): point = 38
   Insn 76(l0): point = 40
   Insn 75(l0): point = 42
   Insn 74(l0): point = 44
   Insn 73(l0): point = 46
   Insn 72(l0): point = 48
   Insn 71(l0): point = 50
   Insn 70(l0): point = 52
   Insn 69(l0): point = 54
   Insn 68(l0): point = 56
   Insn 67(l0): point = 58
   Insn 66(l0): point = 60
   Insn 65(l0): point = 62
   Insn 64(l0): point = 64
   Insn 63(l0): point = 66
   Insn 62(l0): point = 68
   Insn 61(l0): point = 70
   Insn 60(l0): point = 72
   Insn 59(l0): point = 74
   Insn 58(l0): point = 76
   Insn 57(l0): point = 78
   Insn 56(l0): point = 80
   Insn 55(l0): point = 82
   Insn 54(l0): point = 84
   Insn 53(l0): point = 86
   Insn 52(l0): point = 88
   Insn 51(l0): point = 90
   Insn 50(l0): point = 92
   Insn 49(l0): point = 94
   Insn 48(l0): point = 96
   Insn 47(l0): point = 98
   Insn 46(l0): point = 100
   Insn 45(l0): point = 102
   Insn 44(l0): point = 104
   Insn 43(l0): point = 106
   Insn 42(l0): point = 108
   Insn 41(l0): point = 110
   Insn 40(l0): point = 112
   Insn 39(l0): point = 114
   Insn 38(l0): point = 116
   Insn 37(l0): point = 118
   Insn 36(l0): point = 120
   Insn 35(l0): point = 122
   Insn 34(l0): point = 124
   Insn 33(l0): point = 126
   Insn 32(l0): point = 128
   Insn 31(l0): point = 130
   Insn 30(l0): point = 132
   Insn 29(l0): point = 134
   Insn 28(l0): point = 136
   Insn 27(l0): point = 138
   Insn 26(l0): point = 140
   Insn 25(l0): point = 142
   Insn 24(l0): point = 144
   Insn 23(l0): point = 146
   Insn 22(l0): point = 148
   Insn 21(l0): point = 150
   Insn 20(l0): point = 152
   Insn 19(l0): point = 154
   Insn 18(l0): point = 156
   Insn 17(l0): point = 158
   Insn 16(l0): point = 160
   Insn 15(l0): point = 162
   Insn 14(l0): point = 164
   Insn 13(l0): point = 166
   Insn 12(l0): point = 168
   Insn 11(l0): point = 170
   Insn 10(l0): point = 172
   Insn 9(l0): point = 174
   Insn 8(l0): point = 176
   Insn 7(l0): point = 178
   Insn 6(l0): point = 180
   Insn 5(l0): point = 182
 a0(r158): [7..8]
 a1(r157): [11..12]
 a2(r156): [13..14]
 a3(r155): [17..18]
 a4(r154): [19..20]
 a5(r152): [23..24]
 a6(r153): [25..26]
 a7(r151): [33..34]
 a8(r150): [37..38]
 a9(r149): [39..40]
 a10(r148): [43..44]
 a11(r147): [45..46]
 a12(r145): [49..50]
 a13(r146): [51..52]
 a14(r144): [59..60]
 a15(r143): [63..64]
 a16(r142): [65..66]
 a17(r141): [69..70]
 a18(r140): [71..72]
 a19(r138): [75..76]
 a20(r139): [77..78]
 a21(r137): [85..86]
 a22(r136): [89..90]
 a23(r135): [91..92]
 a24(r134): [95..96]
 a25(r133): [97..98]
 a26(r131): [101..102]
 a27(r132): [103..104]
 a28(r130): [111..112]
 a29(r129): [115..116]
 a30(r128): [117..118]
 a31(r127): [121..122]
 a32(r126): [123..124]
 a33(r124): [127..128]
 a34(r125): [129..130]
 a35(r123): [137..138]
 a36(r122): [141..142]
 a37(r121): [143..144]
 a38(r120): [147..148]
 a39(r119): [149..150]
 a40(r117): [153..154]
 a41(r118): [155..156]
 a42(r116): [163..164]
 a43(r115): [167..168]
 a44(r114): [169..170]
 a45(r113): [173..174]
 a46(r112): [175..176]
 a47(r110): [179..180]
 a48(r111): [181..182]
Compressing live ranges: from 185 to 98 - 52%
Ranges after the compression:
 a0(r158): [0..1]
 a1(r157): [2..3]
 a2(r156): [4..5]
 a3(r155): [6..7]
 a4(r154): [8..9]
 a5(r152): [10..11]
 a6(r153): [12..13]
 a7(r151): [14..15]
 a8(r150): [16..17]
 a9(r149): [18..19]
 a10(r148): [20..21]
 a11(r147): [22..23]
 a12(r145): [24..25]
 a13(r146): [26..27]
 a14(r144): [28..29]
 a15(r143): [30..31]
 a16(r142): [32..33]
 a17(r141): [34..35]
 a18(r140): [36..37]
 a19(r138): [38..39]
 a20(r139): [40..41]
 a21(r137): [42..43]
 a22(r136): [44..45]
 a23(r135): [46..47]
 a24(r134): [48..49]
 a25(r133): [50..51]
 a26(r131): [52..53]
 a27(r132): [54..55]
 a28(r130): [56..57]
 a29(r129): [58..59]
 a30(r128): [60..61]
 a31(r127): [62..63]
 a32(r126): [64..65]
 a33(r124): [66..67]
 a34(r125): [68..69]
 a35(r123): [70..71]
 a36(r122): [72..73]
 a37(r121): [74..75]
 a38(r120): [76..77]
 a39(r119): [78..79]
 a40(r117): [80..81]
 a41(r118): [82..83]
 a42(r116): [84..85]
 a43(r115): [86..87]
 a44(r114): [88..89]
 a45(r113): [90..91]
 a46(r112): [92..93]
 a47(r110): [94..95]
 a48(r111): [96..97]
  regions=1, blocks=3, points=98
    allocnos=49 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
   47:r110 l0     3   48:r111 l0     3   46:r112 l0     3   45:r113 l0     3
   44:r114 l0     3   43:r115 l0     3   42:r116 l0     3   40:r117 l0     3
   41:r118 l0     3   39:r119 l0     3   38:r120 l0     3   37:r121 l0     3
   36:r122 l0     3   35:r123 l0     3   33:r124 l0     3   34:r125 l0     3
   32:r126 l0     3   31:r127 l0     3   30:r128 l0     3   29:r129 l0     3
   28:r130 l0     3   26:r131 l0     3   27:r132 l0     3   25:r133 l0     3
   24:r134 l0     3   23:r135 l0     3   22:r136 l0     3   21:r137 l0     3
   19:r138 l0     3   20:r139 l0     3   18:r140 l0     3   17:r141 l0     3
   16:r142 l0     3   15:r143 l0     3   14:r144 l0     3   12:r145 l0     3
   13:r146 l0     3   11:r147 l0     3   10:r148 l0     3    9:r149 l0     3
    8:r150 l0     3    7:r151 l0     3    5:r152 l0     3    6:r153 l0     3
    4:r154 l0     3    3:r155 l0     3    2:r156 l0     3    1:r157 l0     3
    0:r158 l0     3
+++Costs: overall 14, reg 14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


GPIO_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={15d,7u} r1={15d,7u} r2={8d} r3={8d} r7={1d,2u} r12={15d} r13={1d,9u} r14={8d} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={1d,30u} r103={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} 
;;    total ref usage 836{731d,105u,0e} in 92{85 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 111)
        (const_int 512 [0x200])) "../Src/main.c":60 878 {*thumb2_movsi_insn}
     (nil))
(insn 6 5 7 2 (set (reg:HI 110)
        (subreg:HI (reg:SI 111) 0)) "../Src/main.c":60 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_EQUAL (const_int 512 [0x200])
            (nil))))
(insn 7 6 8 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 110)) "../Src/main.c":60 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 110)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 112)
        (const_int 4 [0x4])) "../Src/main.c":61 878 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:QI 113)
        (subreg:QI (reg:SI 112) 0)) "../Src/main.c":61 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 113)) "../Src/main.c":61 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 113)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 114)
        (const_int 1 [0x1])) "../Src/main.c":62 878 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 2 (set (reg:QI 115)
        (subreg:QI (reg:SI 114) 0)) "../Src/main.c":62 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 13 12 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 115)) "../Src/main.c":62 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 115)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 116)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":63 4 {*arm_addsi3}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (reg:SI 116)) "../Src/main.c":63 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":63 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":63 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 118)
        (const_int 1024 [0x400])) "../Src/main.c":65 878 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:HI 117)
        (subreg:HI (reg:SI 118) 0)) "../Src/main.c":65 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_EQUAL (const_int 1024 [0x400])
            (nil))))
(insn 20 19 21 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 117)) "../Src/main.c":65 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 117)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 119)
        (const_int 4 [0x4])) "../Src/main.c":66 878 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:QI 120)
        (subreg:QI (reg:SI 119) 0)) "../Src/main.c":66 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 23 22 24 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 120)) "../Src/main.c":66 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 120)
        (nil)))
(insn 24 23 25 2 (set (reg:SI 121)
        (const_int 1 [0x1])) "../Src/main.c":67 878 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:QI 122)
        (subreg:QI (reg:SI 121) 0)) "../Src/main.c":67 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 26 25 27 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 122)) "../Src/main.c":67 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 122)
        (nil)))
(insn 27 26 28 2 (set (reg:SI 123)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":68 4 {*arm_addsi3}
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 r1)
        (reg:SI 123)) "../Src/main.c":68 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 29 28 30 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":68 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 30 29 31 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":68 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 31 30 32 2 (set (reg:SI 125)
        (const_int 2048 [0x800])) "../Src/main.c":70 878 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 2 (set (reg:HI 124)
        (subreg:HI (reg:SI 125) 0)) "../Src/main.c":70 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 125)
        (expr_list:REG_EQUAL (const_int 2048 [0x800])
            (nil))))
(insn 33 32 34 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 124)) "../Src/main.c":70 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 124)
        (nil)))
(insn 34 33 35 2 (set (reg:SI 126)
        (const_int 4 [0x4])) "../Src/main.c":71 878 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 2 (set (reg:QI 127)
        (subreg:QI (reg:SI 126) 0)) "../Src/main.c":71 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 36 35 37 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 127)) "../Src/main.c":71 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 127)
        (nil)))
(insn 37 36 38 2 (set (reg:SI 128)
        (const_int 1 [0x1])) "../Src/main.c":72 878 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 2 (set (reg:QI 129)
        (subreg:QI (reg:SI 128) 0)) "../Src/main.c":72 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 39 38 40 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 129)) "../Src/main.c":72 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 129)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 130)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":73 4 {*arm_addsi3}
     (nil))
(insn 41 40 42 2 (set (reg:SI 1 r1)
        (reg:SI 130)) "../Src/main.c":73 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 42 41 43 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":73 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 43 42 44 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":73 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 44 43 45 2 (set (reg:SI 132)
        (const_int 4096 [0x1000])) "../Src/main.c":75 878 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 2 (set (reg:HI 131)
        (subreg:HI (reg:SI 132) 0)) "../Src/main.c":75 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_EQUAL (const_int 4096 [0x1000])
            (nil))))
(insn 46 45 47 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 131)) "../Src/main.c":75 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 131)
        (nil)))
(insn 47 46 48 2 (set (reg:SI 133)
        (const_int 4 [0x4])) "../Src/main.c":76 878 {*thumb2_movsi_insn}
     (nil))
(insn 48 47 49 2 (set (reg:QI 134)
        (subreg:QI (reg:SI 133) 0)) "../Src/main.c":76 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 49 48 50 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 134)) "../Src/main.c":76 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 134)
        (nil)))
(insn 50 49 51 2 (set (reg:SI 135)
        (const_int 1 [0x1])) "../Src/main.c":77 878 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 2 (set (reg:QI 136)
        (subreg:QI (reg:SI 135) 0)) "../Src/main.c":77 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 52 51 53 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 136)) "../Src/main.c":77 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 136)
        (nil)))
(insn 53 52 54 2 (set (reg:SI 137)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":78 4 {*arm_addsi3}
     (nil))
(insn 54 53 55 2 (set (reg:SI 1 r1)
        (reg:SI 137)) "../Src/main.c":78 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 55 54 56 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":78 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 56 55 57 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":78 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 57 56 58 2 (set (reg:SI 139)
        (const_int 8192 [0x2000])) "../Src/main.c":80 878 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 59 2 (set (reg:HI 138)
        (subreg:HI (reg:SI 139) 0)) "../Src/main.c":80 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 8192 [0x2000])
            (nil))))
(insn 59 58 60 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 138)) "../Src/main.c":80 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 138)
        (nil)))
(insn 60 59 61 2 (set (reg:SI 140)
        (const_int 4 [0x4])) "../Src/main.c":81 878 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 2 (set (reg:QI 141)
        (subreg:QI (reg:SI 140) 0)) "../Src/main.c":81 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 62 61 63 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 141)) "../Src/main.c":81 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 141)
        (nil)))
(insn 63 62 64 2 (set (reg:SI 142)
        (const_int 1 [0x1])) "../Src/main.c":82 878 {*thumb2_movsi_insn}
     (nil))
(insn 64 63 65 2 (set (reg:QI 143)
        (subreg:QI (reg:SI 142) 0)) "../Src/main.c":82 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 65 64 66 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 143)) "../Src/main.c":82 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 143)
        (nil)))
(insn 66 65 67 2 (set (reg:SI 144)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":83 4 {*arm_addsi3}
     (nil))
(insn 67 66 68 2 (set (reg:SI 1 r1)
        (reg:SI 144)) "../Src/main.c":83 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 68 67 69 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":83 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 69 68 70 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":83 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 70 69 71 2 (set (reg:SI 146)
        (const_int 16384 [0x4000])) "../Src/main.c":88 878 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 2 (set (reg:HI 145)
        (subreg:HI (reg:SI 146) 0)) "../Src/main.c":88 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (const_int 16384 [0x4000])
            (nil))))
(insn 72 71 73 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 145)) "../Src/main.c":88 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 145)
        (nil)))
(insn 73 72 74 2 (set (reg:SI 147)
        (const_int 4 [0x4])) "../Src/main.c":89 878 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 2 (set (reg:QI 148)
        (subreg:QI (reg:SI 147) 0)) "../Src/main.c":89 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 75 74 76 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 148)) "../Src/main.c":89 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 148)
        (nil)))
(insn 76 75 77 2 (set (reg:SI 149)
        (const_int 1 [0x1])) "../Src/main.c":90 878 {*thumb2_movsi_insn}
     (nil))
(insn 77 76 78 2 (set (reg:QI 150)
        (subreg:QI (reg:SI 149) 0)) "../Src/main.c":90 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 78 77 79 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 150)) "../Src/main.c":90 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 150)
        (nil)))
(insn 79 78 80 2 (set (reg:SI 151)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":91 4 {*arm_addsi3}
     (nil))
(insn 80 79 81 2 (set (reg:SI 1 r1)
        (reg:SI 151)) "../Src/main.c":91 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(insn 81 80 82 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":91 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 82 81 83 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":91 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 83 82 84 2 (set (reg:SI 153)
        (const_int 32768 [0x8000])) "../Src/main.c":94 878 {*thumb2_movsi_insn}
     (nil))
(insn 84 83 85 2 (set (reg:HI 152)
        (subreg:HI (reg:SI 153) 0)) "../Src/main.c":94 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (const_int -32768 [0xffffffffffff8000])
            (nil))))
(insn 85 84 86 2 (set (mem/c:HI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 pincfg.GPIO_pin_number+0 S2 A32])
        (reg:HI 152)) "../Src/main.c":94 880 {*thumb2_movhi_insn}
     (expr_list:REG_DEAD (reg:HI 152)
        (nil)))
(insn 86 85 87 2 (set (reg:SI 154)
        (const_int 4 [0x4])) "../Src/main.c":95 878 {*thumb2_movsi_insn}
     (nil))
(insn 87 86 88 2 (set (reg:QI 155)
        (subreg:QI (reg:SI 154) 0)) "../Src/main.c":95 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 88 87 89 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 pincfg.GPIO_mode+0 S1 A16])
        (reg:QI 155)) "../Src/main.c":95 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 155)
        (nil)))
(insn 89 88 90 2 (set (reg:SI 156)
        (const_int 1 [0x1])) "../Src/main.c":96 878 {*thumb2_movsi_insn}
     (nil))
(insn 90 89 91 2 (set (reg:QI 157)
        (subreg:QI (reg:SI 156) 0)) "../Src/main.c":96 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 91 90 92 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 pincfg.GPIO_speed+0 S1 A8])
        (reg:QI 157)) "../Src/main.c":96 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 157)
        (nil)))
(insn 92 91 93 2 (set (reg:SI 158)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -4 [0xfffffffffffffffc]))) "../Src/main.c":97 4 {*arm_addsi3}
     (nil))
(insn 93 92 94 2 (set (reg:SI 1 r1)
        (reg:SI 158)) "../Src/main.c":97 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 94 93 95 2 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":97 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 95 94 98 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_Init") [flags 0x41]  <function_decl 00000000065cc300 MCAL_GPIO_Init>) [0 MCAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":97 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 98 95 0 2 (const_int 0 [0]) "../Src/main.c":99 236 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]


;; Function main (main, funcdef_no=5, decl_uid=5665, cgraph_uid=5, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 15 count 13 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 12 11
;;
;; Loop 2
;;  header 6, latch 11
;;  depth 1, outer 0
;;  nodes: 6 11 12 9 10 8 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 9 7 }
;; 7 succs { 12 8 }
;; 8 succs { 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 12 succs { 11 }
;; 11 succs { 6 }
Building IRA IR
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a23 (r124,l0) best LO_REGS, allocno LO_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a28 (r119,l0) best LO_REGS, allocno LO_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a1(r117,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:30
  a2(r138,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a3(r137,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:2
  a4(r136,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:20
  a5(r135,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a6(r134,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a7(r116,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:20
  a8(r115,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a9(r133,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a10(r114,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:20
  a11(r113,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a12(r132,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:22
  a13(r112,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:22
  a14(r111,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a15(r131,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:22
  a16(r110,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:22
  a17(r130,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a18(r129,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:6
  a19(r125,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:92
  a20(r128,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a21(r127,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a22(r126,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a23(r124,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:6
  a24(r120,l0) costs: LO_REGS:2 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:92
  a25(r123,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a26(r122,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a27(r121,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 GENERAL_REGS:0 MEM:11
  a28(r119,l0) costs: LO_REGS:0 HI_REGS:2 CALLER_SAVE_REGS:2 GENERAL_REGS:2 MEM:6

   Insn 80(l0): point = 0
   Insn 79(l0): point = 2
   Insn 78(l0): point = 4
   Insn 77(l0): point = 6
   Insn 76(l0): point = 8
   Insn 75(l0): point = 10
   Insn 74(l0): point = 12
   Insn 118(l0): point = 15
   Insn 124(l0): point = 18
   Insn 116(l0): point = 21
   Insn 91(l0): point = 23
   Insn 120(l0): point = 26
   Insn 98(l0): point = 28
   Insn 97(l0): point = 30
   Insn 96(l0): point = 32
   Insn 114(l0): point = 35
   Insn 82(l0): point = 38
   Insn 81(l0): point = 40
   Insn 72(l0): point = 43
   Insn 71(l0): point = 45
   Insn 70(l0): point = 47
   Insn 69(l0): point = 49
   Insn 68(l0): point = 51
   Insn 67(l0): point = 53
   Insn 66(l0): point = 55
   Insn 58(l0): point = 58
   Insn 57(l0): point = 60
   Insn 56(l0): point = 62
   Insn 55(l0): point = 64
   Insn 54(l0): point = 66
   Insn 53(l0): point = 68
   Insn 52(l0): point = 70
   Insn 51(l0): point = 72
   Insn 50(l0): point = 74
   Insn 49(l0): point = 76
   Insn 48(l0): point = 78
   Insn 47(l0): point = 80
   Insn 46(l0): point = 82
   Insn 45(l0): point = 84
   Insn 44(l0): point = 86
   Insn 43(l0): point = 88
   Insn 42(l0): point = 90
   Insn 41(l0): point = 92
   Insn 40(l0): point = 94
   Insn 39(l0): point = 96
   Insn 64(l0): point = 99
   Insn 63(l0): point = 101
   Insn 62(l0): point = 103
   Insn 110(l0): point = 106
   Insn 35(l0): point = 108
   Insn 34(l0): point = 110
   Insn 33(l0): point = 112
   Insn 32(l0): point = 114
   Insn 31(l0): point = 116
   Insn 30(l0): point = 118
   Insn 29(l0): point = 120
   Insn 28(l0): point = 122
   Insn 27(l0): point = 124
   Insn 26(l0): point = 126
   Insn 25(l0): point = 128
   Insn 24(l0): point = 130
   Insn 23(l0): point = 132
   Insn 22(l0): point = 134
   Insn 21(l0): point = 136
   Insn 20(l0): point = 138
   Insn 19(l0): point = 140
   Insn 18(l0): point = 142
   Insn 17(l0): point = 144
   Insn 16(l0): point = 146
   Insn 15(l0): point = 148
   Insn 14(l0): point = 150
   Insn 13(l0): point = 152
   Insn 12(l0): point = 154
   Insn 11(l0): point = 156
   Insn 10(l0): point = 158
   Insn 9(l0): point = 160
   Insn 8(l0): point = 162
   Insn 7(l0): point = 164
   Insn 6(l0): point = 166
   Insn 5(l0): point = 168
 a0(r139): [31..32]
 a1(r117): [41..42] [0..4]
 a2(r138): [7..8]
 a3(r137): [9..10]
 a4(r136): [102..103]
 a5(r135): [59..60]
 a6(r134): [61..62]
 a7(r116): [63..64]
 a8(r115): [75..76]
 a9(r133): [77..78]
 a10(r114): [79..80]
 a11(r113): [81..82]
 a12(r132): [83..84]
 a13(r112): [85..86]
 a14(r111): [91..92]
 a15(r131): [93..94]
 a16(r110): [95..96]
 a17(r130): [109..110]
 a18(r129): [111..112]
 a19(r125): [115..130]
 a20(r128): [115..116]
 a21(r127): [117..118]
 a22(r126): [127..128]
 a23(r124): [129..132]
 a24(r120): [135..150]
 a25(r123): [135..136]
 a26(r122): [137..138]
 a27(r121): [147..148]
 a28(r119): [149..152]
Compressing live ranges: from 171 to 56 - 32%
Ranges after the compression:
 a0(r139): [6..7]
 a1(r117): [8..9] [0..1]
 a2(r138): [2..3]
 a3(r137): [4..5]
 a4(r136): [34..35]
 a5(r135): [10..11]
 a6(r134): [12..13]
 a7(r116): [14..15]
 a8(r115): [16..17]
 a9(r133): [18..19]
 a10(r114): [20..21]
 a11(r113): [22..23]
 a12(r132): [24..25]
 a13(r112): [26..27]
 a14(r111): [28..29]
 a15(r131): [30..31]
 a16(r110): [32..33]
 a17(r130): [36..37]
 a18(r129): [38..39]
 a19(r125): [40..47]
 a20(r128): [40..41]
 a21(r127): [42..43]
 a22(r126): [44..45]
 a23(r124): [46..47]
 a24(r120): [48..55]
 a25(r123): [48..49]
 a26(r122): [50..51]
 a27(r121): [52..53]
 a28(r119): [54..55]
  regions=1, blocks=13, points=56
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
   16:r110 l0     3   14:r111 l0     3   13:r112 l0     3   11:r113 l0     3
   10:r114 l0     3    8:r115 l0     3    7:r116 l0     3    1:r117 l0     3
   28:r119 l0     2   24:r120 l0     3   27:r121 l0     2   26:r122 l0     2
   25:r123 l0     2   23:r124 l0     2   19:r125 l0     3   22:r126 l0     2
   21:r127 l0     2   20:r128 l0     2   18:r129 l0     3   17:r130 l0     3
   15:r131 l0     3   12:r132 l0     3    9:r133 l0     3    6:r134 l0     3
    5:r135 l0     3    4:r136 l0     3    3:r137 l0     3    2:r138 l0     3
    0:r139 l0     3
+++Costs: overall 12, reg 12, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={28d,12u} r1={21d,3u} r2={20d,4u} r3={18d} r7={1d,12u} r12={35d} r13={1d,29u} r14={18d} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={17d} r25={17d} r26={17d} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={20d,3u} r101={17d} r102={1d,25u} r103={1d,11u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,2u} r119={1d,1u} r120={3d,6u} r121={1d,3u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={3d,6u} r126={1d,3u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 1802{1659d,143u,0e} in 80{63 regular + 17 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 119 120 121 122 123 124 125 126 127 128 129 130
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("clock_init") [flags 0x3]  <function_decl 0000000006601600 clock_init>) [0 clock_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":103 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 6 5 7 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_init") [flags 0x41]  <function_decl 00000000065cc000 lcd_init>) [0 lcd_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":104 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0000000006627090 *.LC2>)) "../Src/main.c":106 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x41]  <function_decl 00000000065ccf00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":106 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 30 [0x1e])) "../Src/main.c":107 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":107 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 11 10 12 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":108 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 12 11 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("GPIO_init") [flags 0x3]  <function_decl 0000000006601800 GPIO_init>) [0 GPIO_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":109 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 119)
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 00000000065fcab0 *.LC0>)) "../Src/main.c":110 878 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 120)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -16 [0xfffffffffffffff0]))) "../Src/main.c":110 4 {*arm_addsi3}
     (nil))
(insn 15 14 16 2 (set (reg:SI 121)
        (reg/f:SI 119)) "../Src/main.c":110 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:SI 0 r0)
                (mem/u/c:SI (reg:SI 121) [0  S4 A32]))
            (set (reg:SI 1 r1)
                (mem/u/c:SI (plus:SI (reg:SI 121)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (set (reg:SI 2 r2)
                (mem/u/c:SI (plus:SI (reg:SI 121)
                        (const_int 8 [0x8])) [0  S4 A32]))
        ]) "../Src/main.c":110 364 {*ldm3_}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 120)
                    (const_int 8 [0x8])))
            (set (mem/c:SI (reg:SI 120) [0 LCD_DISPLAY+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/c:SI (plus:SI (reg:SI 120)
                        (const_int 4 [0x4])) [0 LCD_DISPLAY+4 S4 A32])
                (reg:SI 1 r1))
        ]) "../Src/main.c":110 388 {*stm2_ia_update}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))
(insn 18 17 19 2 (set (mem/c:HI (reg:SI 120) [0 LCD_DISPLAY+8 S2 A64])
        (reg:HI 2 r2)) "../Src/main.c":110 880 {*thumb2_movhi_insn}
     (nil))
(insn 19 18 20 2 (set (reg:SI 120)
        (plus:SI (reg:SI 120)
            (const_int 2 [0x2]))) "../Src/main.c":110 4 {*arm_addsi3}
     (nil))
(insn 20 19 21 2 (set (reg:SI 122)
        (lshiftrt:SI (reg:SI 2 r2)
            (const_int 16 [0x10]))) "../Src/main.c":110 132 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))
(insn 21 20 22 2 (set (reg:QI 123)
        (subreg:QI (reg:SI 122) 0)) "../Src/main.c":110 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 22 21 23 2 (set (mem/c:QI (reg:SI 120) [0 LCD_DISPLAY+10 S1 A16])
        (reg:QI 123)) "../Src/main.c":110 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 123)
        (expr_list:REG_DEAD (reg:SI 120)
            (nil))))
(insn 23 22 24 2 (set (reg/f:SI 124)
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 00000000065fcb40 *.LC1>)) "../Src/main.c":111 878 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg:SI 125)
        (plus:SI (reg/f:SI 102 sfp)
            (const_int -28 [0xffffffffffffffe4]))) "../Src/main.c":111 4 {*arm_addsi3}
     (nil))
(insn 25 24 26 2 (set (reg:SI 126)
        (reg/f:SI 124)) "../Src/main.c":111 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 26 25 27 2 (parallel [
            (set (reg:SI 0 r0)
                (mem/u/c:SI (reg:SI 126) [0  S4 A32]))
            (set (reg:SI 1 r1)
                (mem/u/c:SI (plus:SI (reg:SI 126)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (set (reg:SI 2 r2)
                (mem/u/c:SI (plus:SI (reg:SI 126)
                        (const_int 8 [0x8])) [0  S4 A32]))
        ]) "../Src/main.c":111 364 {*ldm3_}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:SI 125)
                (plus:SI (reg:SI 125)
                    (const_int 8 [0x8])))
            (set (mem/c:SI (reg:SI 125) [0 DISPLAY+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/c:SI (plus:SI (reg:SI 125)
                        (const_int 4 [0x4])) [0 DISPLAY+4 S4 A32])
                (reg:SI 1 r1))
        ]) "../Src/main.c":111 388 {*stm2_ia_update}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))
(insn 28 27 29 2 (set (mem/c:HI (reg:SI 125) [0 DISPLAY+8 S2 A32])
        (reg:HI 2 r2)) "../Src/main.c":111 880 {*thumb2_movhi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:SI 125)
        (plus:SI (reg:SI 125)
            (const_int 2 [0x2]))) "../Src/main.c":111 4 {*arm_addsi3}
     (nil))
(insn 30 29 31 2 (set (reg:SI 127)
        (lshiftrt:SI (reg:SI 2 r2)
            (const_int 16 [0x10]))) "../Src/main.c":111 132 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))
(insn 31 30 32 2 (set (reg:QI 128)
        (subreg:QI (reg:SI 127) 0)) "../Src/main.c":111 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 127)
        (nil)))
(insn 32 31 33 2 (set (mem/c:QI (reg:SI 125) [0 DISPLAY+10 S1 A16])
        (reg:QI 128)) "../Src/main.c":111 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 128)
        (expr_list:REG_DEAD (reg:SI 125)
            (nil))))
(insn 33 32 34 2 (set (reg:SI 129)
        (const_int 0 [0])) "../Src/main.c":112 878 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 2 (set (reg:QI 130)
        (subreg:QI (reg:SI 129) 0)) "../Src/main.c":112 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 35 34 110 2 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8])
        (reg:QI 130)) "../Src/main.c":112 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 130)
        (nil)))
(jump_insn 110 35 111 2 (set (pc)
        (label_ref 59)) "../Src/main.c":112 214 {*arm_jump}
     (nil)
 -> 59)
;;  succ:       4 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 111 110 61)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 131 132 133 134 135
(code_label 61 111 38 3 9 (nil) [1 uses])
(note 38 61 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 3 (set (reg:SI 110 [ _1 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8]))) "../Src/main.c":113 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 40 39 41 3 (set (reg/f:SI 131)
        (plus:SI (reg/f:SI 102 sfp)
            (reg:SI 110 [ _1 ]))) "../Src/main.c":113 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 110 [ _1 ])
        (nil)))
(insn 41 40 42 3 (set (reg:SI 111 [ _2 ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/f:SI 131)
                    (const_int -16 [0xfffffffffffffff0])) [0 LCD_DISPLAY S1 A8]))) "../Src/main.c":113 906 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 42 41 43 3 (set (reg:SI 0 r0)
        (reg:SI 111 [ _2 ])) "../Src/main.c":113 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 111 [ _2 ])
        (nil)))
(call_insn 43 42 44 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_char") [flags 0x41]  <function_decl 00000000065cce00 lcd_send_char>) [0 lcd_send_char S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":113 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 44 43 45 3 (set (reg:SI 112 [ _3 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8]))) "../Src/main.c":114 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 45 44 46 3 (set (reg/f:SI 132)
        (plus:SI (reg/f:SI 102 sfp)
            (reg:SI 112 [ _3 ]))) "../Src/main.c":114 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 112 [ _3 ])
        (nil)))
(insn 46 45 47 3 (set (reg:SI 113 [ _4 ])
        (zero_extend:SI (mem/j:QI (plus:SI (reg/f:SI 132)
                    (const_int -28 [0xffffffffffffffe4])) [0 DISPLAY S1 A8]))) "../Src/main.c":114 906 {thumb2_zero_extendqisi2_v6}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 47 46 48 3 (set (reg:SI 114 [ _5 ])
        (zero_extend:SI (subreg:HI (reg:SI 113 [ _4 ]) 0))) "../Src/main.c":114 905 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 113 [ _4 ])
        (nil)))
(insn 48 47 49 3 (set (reg:SI 133)
        (ashift:SI (reg:SI 114 [ _5 ])
            (const_int 9 [0x9]))) "../Src/main.c":114 132 {*arm_shiftsi3}
     (expr_list:REG_DEAD (reg:SI 114 [ _5 ])
        (nil)))
(insn 49 48 50 3 (set (reg:SI 115 [ _6 ])
        (zero_extend:SI (subreg:HI (reg:SI 133) 0))) "../Src/main.c":114 905 {*thumb2_zero_extendhisi2_v6}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 50 49 51 3 (set (reg:SI 1 r1)
        (reg:SI 115 [ _6 ])) "../Src/main.c":114 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 115 [ _6 ])
        (nil)))
(insn 51 50 52 3 (set (reg:SI 0 r0)
        (const_int 1073810432 [0x40010c00])) "../Src/main.c":114 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 52 51 53 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("MCAL_GPIO_WRITE_PORT") [flags 0x41]  <function_decl 00000000065cc800 MCAL_GPIO_WRITE_PORT>) [0 MCAL_GPIO_WRITE_PORT S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":114 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:HI (use (reg:SI 1 r1))
                (nil)))))
(insn 53 52 54 3 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) "../Src/main.c":115 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 54 53 55 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":115 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 55 54 56 3 (set (reg:SI 116 [ i.0_7 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8]))) "../Src/main.c":112 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 56 55 57 3 (set (reg:SI 134)
        (plus:SI (reg:SI 116 [ i.0_7 ])
            (const_int 1 [0x1]))) "../Src/main.c":112 4 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 116 [ i.0_7 ])
        (nil)))
(insn 57 56 58 3 (set (reg:QI 135)
        (subreg:QI (reg:SI 134) 0)) "../Src/main.c":112 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 58 57 59 3 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8])
        (reg:QI 135)) "../Src/main.c":112 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 135)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 136
(code_label 59 58 60 4 8 (nil) [1 uses])
(note 60 59 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 62 60 63 4 (set (reg:SI 136)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -1 [0xffffffffffffffff])) [0 i+0 S1 A8]))) "../Src/main.c":112 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 63 62 64 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 136)
            (const_int 10 [0xa]))) "../Src/main.c":112 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))
(jump_insn 64 63 65 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "../Src/main.c":112 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 61)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 65 67 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":120 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(call_insn 67 66 68 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("Keypad_init") [flags 0x41]  <function_decl 0000000006601400 Keypad_init>) [0 Keypad_init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":121 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 68 67 69 5 (set (reg:SI 0 r0)
        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0000000006627120 *.LC3>)) "../Src/main.c":122 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 69 68 70 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_string") [flags 0x41]  <function_decl 00000000065ccf00 lcd_send_string>) [0 lcd_send_string S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":122 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 70 69 71 5 (set (reg:SI 0 r0)
        (const_int 30 [0x1e])) "../Src/main.c":123 878 {*thumb2_movsi_insn}
     (nil))
(call_insn 71 70 72 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_ms") [flags 0x41]  <function_decl 0000000006601a00 wait_ms>) [0 wait_ms S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":123 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(call_insn 72 71 101 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":124 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              11 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 117 137 138
(code_label 101 72 73 6 14 (nil) [1 uses])
(note 73 101 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 73 75 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Keypad_getkey") [flags 0x41]  <function_decl 0000000006601500 Keypad_getkey>) [0 Keypad_getkey S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":128 220 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 75 74 76 6 (set (reg:SI 137)
        (reg:SI 0 r0)) "../Src/main.c":128 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 76 75 77 6 (set (reg:QI 138)
        (subreg/s/v:QI (reg:SI 137) 0)) "../Src/main.c":128 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:SI 137)
        (nil)))
(insn 77 76 78 6 (set (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                (const_int -2 [0xfffffffffffffffe])) [0 key_pressed+0 S1 A8])
        (reg:QI 138)) "../Src/main.c":128 192 {*arm_movqi_insn}
     (expr_list:REG_DEAD (reg:QI 138)
        (nil)))
(insn 78 77 79 6 (set (reg:SI 117 [ _8 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [0 key_pressed+0 S1 A8]))) "../Src/main.c":129 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 79 78 80 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ _8 ])
            (const_int 63 [0x3f]))) "../Src/main.c":129 196 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 108 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "../Src/main.c":129 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 89)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 117
;; lr  def 	 100 [cc]
(note 108 80 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 81 108 82 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 117 [ _8 ])
            (const_int 65 [0x41]))) "../Src/main.c":129 196 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 117 [ _8 ])
        (nil)))
(jump_insn 82 81 112 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 123)
            (pc))) "../Src/main.c":129 204 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 123)
;;  succ:       12
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 112 82 114 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 114 112 115 8 (set (pc)
        (label_ref 113)) "../Src/main.c":129 214 {*arm_jump}
     (nil)
 -> 113)
;;  succ:       10 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 115 114 89)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(code_label 89 115 90 9 11 (nil) [1 uses])
(note 90 89 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 91 90 116 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_clear_screen") [flags 0x41]  <function_decl 0000000006601000 lcd_clear_screen>) [0 lcd_clear_screen S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":133 219 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(jump_insn 116 91 117 9 (set (pc)
        (label_ref 99)) "../Src/main.c":134 214 {*arm_jump}
     (nil)
 -> 99)
;;  succ:       11 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 117 116 113)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (RTL)
;;  pred:       8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 139
(code_label 113 117 95 10 15 (nil) [1 uses])
(note 95 113 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 10 (set (reg:SI 139)
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 102 sfp)
                    (const_int -2 [0xfffffffffffffffe])) [0 key_pressed+0 S1 A8]))) "../Src/main.c":136 906 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 97 96 98 10 (set (reg:SI 0 r0)
        (reg:SI 139)) "../Src/main.c":136 878 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(call_insn 98 97 120 10 (parallel [
            (call (mem:SI (symbol_ref:SI ("lcd_send_char") [flags 0x41]  <function_decl 00000000065cce00 lcd_send_char>) [0 lcd_send_char S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/main.c":136 219 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 120 98 121 10 (set (pc)
        (label_ref 99)) "../Src/main.c":137 214 {*arm_jump}
     (nil)
 -> 99)
;;  succ:       11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 121 120 123)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       7
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 123 121 122 12 16 (nil) [1 uses])
(note 122 123 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 124 122 99 12 (const_int 0 [0]) "../Src/main.c":131 236 {nop}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;;              10
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 99 124 100 11 13 (nil) [2 uses])
(note 100 99 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 118 100 119 11 (set (pc)
        (label_ref 101)) "../Src/main.c":128 214 {*arm_jump}
     (nil)
 -> 101)
;;  succ:       6 [100.0%] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 119 118 0)
